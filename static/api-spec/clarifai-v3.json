{
  "openapi": "3.0.0",
  "info": {
    "title": "Clarifai Public API",
    "description": "Welcome to the Clarifai API documentation. Clarifai is a leading provider of\nartificial intelligence and machine learning solutions, specialising in\nadvanced computer vision, natural language, and generative AI technologies.<br/><br/>\nOur powerful API allows developers to integrate cutting-edge image, video\nrecognition, and text-based analytics capabilities into their applications,\nunlocking a world of visual and sequence understanding possibilities.<br/><br/>\nThe Clarifai API is a connection point enabling communication between\nclients and servers. It facilitates interaction between software, making it\nvaluable for integrating Clarifai's AI technology into your products and\ntools through code. Clarifai API is avaiable in Python,Node.js,PHP and Java.<br/><br/>\nYou can access Clarifai's API over HTTPS via `https://api.clarifai.com`.<br/><br/>\n[API Documentation](https://docs.clarifai.com/api-guide/api-overview)<br/><br/>\n[Clarifai Community](https://clarifai.com/explore)<br/><br/>\n[API Status](https://status.clarifai.com/)<br/><br/>\n[Discord](https://discord.gg/XAPE3Vtg)<br/><br/>\n",
    "version": "2.0.0"
  },
  "tags": [
    {
      "name": "V2"
    }
  ],
  "paths": {
    "/v2/annotation_filters": {
      "get": {
        "summary": "List all the annotation filters.",
        "operationId": "V2_ListAnnotationFilters2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationFilterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/annotation_filters?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotation_filters?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotation_filters?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete one or more annotation filters in a single request.",
        "operationId": "V2_DeleteAnnotationFilters2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteAnnotationFiltersRequest"
              }
            }
          },
          "description": "Request to delete several annotation filters by list of ids.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/annotation_filters' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotationFilterIds\": [\n    \"string\"\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotationFilterIds\": [\n    \"string\"\n  ]\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotation_filters\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotationFilterIds\": [\n    \"string\"\n  ]\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotation_filters',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Add annotation filters.",
        "operationId": "V2_PostAnnotationFilters2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationFilterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostAnnotationFiltersRequest"
              }
            }
          },
          "description": "Request to add one or more annotation filters.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/annotation_filters' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotationFilters\": [\n    null\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotationFilters\": [\n    null\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotation_filters\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotationFilters\": [\n    null\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotation_filters',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more annotation filters.",
        "operationId": "V2_PatchAnnotationFilters2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationFilterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchAnnotationFiltersRequest"
              }
            }
          },
          "description": "Request to patch several annotation filters.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/annotation_filters' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotationFilters\": [\n    null\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotationFilters\": [\n    null\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotation_filters\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotationFilters\": [\n    null\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotation_filters',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/annotation_filters/{annotationFilterId}": {
      "get": {
        "summary": "Get a specific annotation filter.",
        "operationId": "V2_GetAnnotationFilter2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleAnnotationFilterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "annotationFilterId",
            "description": "Identify annotation filter by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/annotations": {
      "get": {
        "summary": "List all the annotation.",
        "operationId": "V2_ListAnnotations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "description": "List annotations for these IDs",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inputIds",
            "description": "List annotations for these Input IDs\nNote that 'ids' are optional but if the are provided the number and order in\n'ids' and 'input_ids' should match\nIf you do not specify 'ids' all the annotations for 'input_ids' are returned\nIf a you do not specify both 'input_ids' and 'ids' all the annotations in the app are returned",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "userIds",
            "description": "Only return the annotations that has one of these user IDs, effectively operating as an\nOR among them to filter down the results.\nIf model_version_ids or workflow_version_ids are also provided, these user_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) annotations in the results of ListAnnotations request.\nSetting user_ids does also set list_all_annotations=True.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modelVersionIds",
            "description": "Only return the annotations that has one of these model version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or workflow_version_ids are also provided, these model_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) annotations in the results of ListAnnotations request.\nSetting model_version_ids does also set list_all_annotations=True.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "workflowVersionIds",
            "description": "Only return the annotations that has one of these workflow version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or model_version_ids are also provided, these workflow_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) annotations in the results of ListAnnotations request.\nSetting workflow_version_ids does also set list_all_annotations=True.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "listAllAnnotations",
            "description": "Set this flag to list both trusted and not trusted annotations\nby default it's listing only trusted annotations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "returnModelOutput",
            "description": "Set this flag to return the model output for model annotations in the response.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "taskId",
            "description": "Flag to filter annotations by task_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/annotations?userAppId.userId=&userAppId.appId=&ids=&inputIds=&userIds=&modelVersionIds=&workflowVersionIds=&listAllAnnotations=&returnModelOutput=&page=&perPage=&taskId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations?userAppId.userId=&userAppId.appId=&ids=&inputIds=&userIds=&modelVersionIds=&workflowVersionIds=&listAllAnnotations=&returnModelOutput=&page=&perPage=&taskId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations?userAppId.userId=&userAppId.appId=&ids=&inputIds=&userIds=&modelVersionIds=&workflowVersionIds=&listAllAnnotations=&returnModelOutput=&page=&perPage=&taskId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete multiple annotations in one request.",
        "operationId": "V2_DeleteAnnotations4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/apiDeleteAnnotationsRequest"
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/annotations' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Post annotations.",
        "operationId": "V2_PostAnnotations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostAnnotationsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/annotations' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotations\": [\n    null\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotations\": [\n    null\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotations\": [\n    null\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more annotations.",
        "operationId": "V2_PatchAnnotations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchAnnotationsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/annotations' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotations\": [\n    null\n  ],\n  \"action\": \"string\",\n  \"deleteIfEmptyData\": true\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotations\": [\n    null\n  ],\n  \"action\": \"string\",\n  \"deleteIfEmptyData\": true\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"annotations\": [\n    null\n  ],\n  \"action\": \"string\",\n  \"deleteIfEmptyData\": true\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/annotations/searches": {
      "post": {
        "summary": "Execute a search over annotations",
        "operationId": "V2_PostAnnotationsSearches2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostAnnotationsSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/annotations/searches' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations/searches\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations/searches',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch saved annotations searches by ids.",
        "operationId": "V2_PatchAnnotationsSearches2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchAnnotationsSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/annotations/searches' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations/searches\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations/searches',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/annotations/searches/metrics": {
      "get": {
        "summary": "List the evaluation results between two search requests",
        "operationId": "V2_ListAnnotationSearchMetrics2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationSearchMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/annotations/searches/metrics?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations/searches/metrics?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations/searches/metrics?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Evaluate the results of two search requests",
        "operationId": "V2_PostAnnotationSearchMetrics2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationSearchMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostAnnotationSearchMetricsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/annotations/searches/metrics' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"id\": \"string\",\n  \"groundTruth\": {\n    \"query\": {\n      \"ands\": [\n        {\n          \"output\": {\n            \"id\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"createdAt\": \"string\"\n          },\n          \"negate\": true\n        }\n      ],\n      \"language\": \"string\",\n      \"filters\": [\n        {\n          \"negate\": true,\n          \"lastUpdatedTimeRange\": {\n            \"startTime\": \"string\",\n            \"endTime\": \"string\"\n          }\n        }\n      ],\n      \"ranks\": [\n        {\n          \"negate\": true\n        }\n      ]\n    },\n    \"id\": \"string\",\n    \"applicationId\": \"string\",\n    \"name\": \"string\",\n    \"asOf\": \"string\",\n    \"gitHash\": \"string\",\n    \"createdAt\": \"string\",\n    \"modifiedAt\": \"string\",\n    \"algorithm\": \"string\",\n    \"save\": true,\n    \"minValue\": null,\n    \"visibility\": {\n      \"gettable\": \"string\"\n    },\n    \"metric\": \"string\"\n  },\n  \"searchToEval\": {\n    \"query\": {\n      \"ands\": [\n        {\n          \"output\": {\n            \"id\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"createdAt\": \"string\"\n          },\n          \"negate\": true\n        }\n      ],\n      \"language\": \"string\",\n      \"filters\": [\n        {\n          \"negate\": true,\n          \"lastUpdatedTimeRange\": {\n            \"startTime\": \"string\",\n            \"endTime\": \"string\"\n          }\n        }\n      ],\n      \"ranks\": [\n        {\n          \"negate\": true\n        }\n      ]\n    },\n    \"id\": \"string\",\n    \"applicationId\": \"string\",\n    \"name\": \"string\",\n    \"asOf\": \"string\",\n    \"gitHash\": \"string\",\n    \"createdAt\": \"string\",\n    \"modifiedAt\": \"string\",\n    \"algorithm\": \"string\",\n    \"save\": true,\n    \"minValue\": null,\n    \"visibility\": {\n      \"gettable\": \"string\"\n    },\n    \"metric\": \"string\"\n  },\n  \"evaluationType\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"id\": \"string\",\n  \"groundTruth\": {\n    \"query\": {\n      \"ands\": [\n        {\n          \"output\": {\n            \"id\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"createdAt\": \"string\"\n          },\n          \"negate\": true\n        }\n      ],\n      \"language\": \"string\",\n      \"filters\": [\n        {\n          \"negate\": true,\n          \"lastUpdatedTimeRange\": {\n            \"startTime\": \"string\",\n            \"endTime\": \"string\"\n          }\n        }\n      ],\n      \"ranks\": [\n        {\n          \"negate\": true\n        }\n      ]\n    },\n    \"id\": \"string\",\n    \"applicationId\": \"string\",\n    \"name\": \"string\",\n    \"asOf\": \"string\",\n    \"gitHash\": \"string\",\n    \"createdAt\": \"string\",\n    \"modifiedAt\": \"string\",\n    \"algorithm\": \"string\",\n    \"save\": true,\n    \"minValue\": null,\n    \"visibility\": {\n      \"gettable\": \"string\"\n    },\n    \"metric\": \"string\"\n  },\n  \"searchToEval\": {\n    \"query\": {\n      \"ands\": [\n        {\n          \"output\": {\n            \"id\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"createdAt\": \"string\"\n          },\n          \"negate\": true\n        }\n      ],\n      \"language\": \"string\",\n      \"filters\": [\n        {\n          \"negate\": true,\n          \"lastUpdatedTimeRange\": {\n            \"startTime\": \"string\",\n            \"endTime\": \"string\"\n          }\n        }\n      ],\n      \"ranks\": [\n        {\n          \"negate\": true\n        }\n      ]\n    },\n    \"id\": \"string\",\n    \"applicationId\": \"string\",\n    \"name\": \"string\",\n    \"asOf\": \"string\",\n    \"gitHash\": \"string\",\n    \"createdAt\": \"string\",\n    \"modifiedAt\": \"string\",\n    \"algorithm\": \"string\",\n    \"save\": true,\n    \"minValue\": null,\n    \"visibility\": {\n      \"gettable\": \"string\"\n    },\n    \"metric\": \"string\"\n  },\n  \"evaluationType\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations/searches/metrics\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"id\": \"string\",\n  \"groundTruth\": {\n    \"query\": {\n      \"ands\": [\n        {\n          \"output\": {\n            \"id\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"createdAt\": \"string\"\n          },\n          \"negate\": true\n        }\n      ],\n      \"language\": \"string\",\n      \"filters\": [\n        {\n          \"negate\": true,\n          \"lastUpdatedTimeRange\": {\n            \"startTime\": \"string\",\n            \"endTime\": \"string\"\n          }\n        }\n      ],\n      \"ranks\": [\n        {\n          \"negate\": true\n        }\n      ]\n    },\n    \"id\": \"string\",\n    \"applicationId\": \"string\",\n    \"name\": \"string\",\n    \"asOf\": \"string\",\n    \"gitHash\": \"string\",\n    \"createdAt\": \"string\",\n    \"modifiedAt\": \"string\",\n    \"algorithm\": \"string\",\n    \"save\": true,\n    \"minValue\": null,\n    \"visibility\": {\n      \"gettable\": \"string\"\n    },\n    \"metric\": \"string\"\n  },\n  \"searchToEval\": {\n    \"query\": {\n      \"ands\": [\n        {\n          \"output\": {\n            \"id\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"createdAt\": \"string\"\n          },\n          \"negate\": true\n        }\n      ],\n      \"language\": \"string\",\n      \"filters\": [\n        {\n          \"negate\": true,\n          \"lastUpdatedTimeRange\": {\n            \"startTime\": \"string\",\n            \"endTime\": \"string\"\n          }\n        }\n      ],\n      \"ranks\": [\n        {\n          \"negate\": true\n        }\n      ]\n    },\n    \"id\": \"string\",\n    \"applicationId\": \"string\",\n    \"name\": \"string\",\n    \"asOf\": \"string\",\n    \"gitHash\": \"string\",\n    \"createdAt\": \"string\",\n    \"modifiedAt\": \"string\",\n    \"algorithm\": \"string\",\n    \"save\": true,\n    \"minValue\": null,\n    \"visibility\": {\n      \"gettable\": \"string\"\n    },\n    \"metric\": \"string\"\n  },\n  \"evaluationType\": \"string\"\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations/searches/metrics',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/annotations/searches/metrics/{id}": {
      "get": {
        "summary": "Get the evaluation results between two search requests",
        "operationId": "V2_GetAnnotationSearchMetrics2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationSearchMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Unique custom facing id that identifies the eval to get",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --globoff 'https://api.clarifai.com/v2/annotations/searches/metrics/{id}?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations/searches/metrics/{id}?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations/searches/metrics/{id}?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "DeleteAnnotationSearchMetrics",
        "operationId": "V2_DeleteAnnotationSearchMetrics2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --globoff --request DELETE 'https://api.clarifai.com/v2/annotations/searches/metrics/{id}?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations/searches/metrics/{id}?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations/searches/metrics/{id}?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/annotations/workers": {
      "get": {
        "summary": "ListAnnotationWorkers lists users, models, and workflows (collectively\nknown as \"workers\") that have added annotations to the application.",
        "operationId": "V2_ListAnnotationWorkers2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkerResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response.\nCurrently supported: all, names",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "trustedOnly",
            "description": "(optional URL parameter) Only list workers that have created trusted annotations.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/annotations/workers?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&trustedOnly=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/annotations/workers?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&trustedOnly=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/annotations/workers?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&trustedOnly=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/app": {
      "get": {
        "summary": "Get a specific app from an app.",
        "operationId": "V2_GetApp2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleAppResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, counts",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/app?userAppId.userId=&userAppId.appId=&additionalFields=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/app?userAppId.userId=&userAppId.appId=&additionalFields=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/app?userAppId.userId=&userAppId.appId=&additionalFields=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/apps": {
      "get": {
        "summary": "List all the apps.",
        "operationId": "V2_ListApps2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAppResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, counts",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByName",
            "description": "Whether to order by the name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "Whether to order by the modified_at time.\nIf none of the sort options is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the app",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "featuredOnly",
            "description": "Filtering options:\nIf true, we only return apps that are handpicked by clarifai staff",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "If true, we only return apps that are starred by the requesting user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "templateOnly",
            "description": "If true, we only return apps that are marked as a template by the app owner.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the application:\n  - id\n  - name\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Query various text fields (id, name, description, and notes) that can contain the words in the query string\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Filter by the id, name and notes of the app. This supports wilcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Filter by the user-unique-id of the app. This supports wilcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/apps?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByName=&sortByModifiedAt=&sortByCreatedAt=&sortByStarCount=&featuredOnly=&starredOnly=&templateOnly=&search=&query=&name=&id=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/apps?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByName=&sortByModifiedAt=&sortByCreatedAt=&sortByStarCount=&featuredOnly=&starredOnly=&templateOnly=&search=&query=&name=&id=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/apps?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByName=&sortByModifiedAt=&sortByCreatedAt=&sortByStarCount=&featuredOnly=&starredOnly=&templateOnly=&search=&query=&name=&id=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/bulk_operations": {
      "get": {
        "summary": "List all the bulk operations",
        "operationId": "V2_ListBulkOperations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiBulkOperationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/bulk_operations?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/bulk_operations?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/bulk_operations?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "delete one or more terminated bulk operations",
        "operationId": "V2_DeleteBulkOperations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteBulkOperationRequest"
              }
            }
          },
          "description": "Request to delete the terminated bulk operations by ID\nOnly operations in terminated state can be deleted.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/bulk_operations' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/bulk_operations\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/bulk_operations',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Perform bulk operations on a list of inputs based on input source.\nOperation include add, update, delete of concepts, metadata and geo data.\nThis is an Asynchronous process. Use ListBulkOperations or GetBulkOperation to check the status.",
        "operationId": "V2_PostBulkOperations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiBulkOperationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostBulkOperationsRequest"
              }
            }
          },
          "description": "Request to perform bulk operations on a list of inputs based on input source.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/bulk_operations' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"bulkOperations\": [\n    {\n      \"id\": \"string\",\n      \"inputIds\": {\n        \"inputIds\": [\n          \"string\"\n        ]\n      },\n      \"search\": {\n        \"query\": {\n          \"ands\": [\n            {\n              \"output\": {\n                \"id\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"createdAt\": \"string\"\n              },\n              \"negate\": true\n            }\n          ],\n          \"language\": \"string\",\n          \"filters\": [\n            {\n              \"negate\": true,\n              \"lastUpdatedTimeRange\": {\n                \"startTime\": \"string\",\n                \"endTime\": \"string\"\n              }\n            }\n          ],\n          \"ranks\": [\n            {\n              \"negate\": true\n            }\n          ]\n        },\n        \"id\": \"string\",\n        \"applicationId\": \"string\",\n        \"name\": \"string\",\n        \"asOf\": \"string\",\n        \"gitHash\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"algorithm\": \"string\",\n        \"save\": true,\n        \"minValue\": null,\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"metric\": \"string\"\n      },\n      \"dataset\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"defaultProcessingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"notes\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"datasetId\": \"string\",\n          \"annotationFilterConfig\": {\n            \"ignoreEmptyInputs\": true\n          },\n          \"modelPredictConfig\": {},\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"description\": \"string\",\n          \"processingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"metrics\": {},\n          \"exportInfo\": {\n            \"clarifaiDataProtobuf\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"clarifaiDataJson\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"coco\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            }\n          },\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"embedModelVersionIds\": [\n            \"string\"\n          ],\n          \"requestOrigin\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"operation\": {\n        \"addConcepts\": {\n          \"concepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ]\n        },\n        \"deleteConcepts\": {\n          \"concepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ],\n          \"userIds\": [\n            \"string\"\n          ]\n        },\n        \"addMetadata\": {\n          \"metadata\": {}\n        },\n        \"deleteMetadata\": {\n          \"metadata\": {}\n        },\n        \"overwriteGeo\": {\n          \"geo\": {\n            \"geoPoint\": {\n              \"longitude\": null,\n              \"latitude\": null\n            },\n            \"geoLimit\": {\n              \"type\": \"string\",\n              \"value\": null\n            },\n            \"geoBox\": [\n              {\n                \"geoPoint\": {\n                  \"longitude\": null,\n                  \"latitude\": null\n                }\n              }\n            ]\n          }\n        },\n        \"deleteGeo\": {},\n        \"deleteFromDataset\": {\n          \"datasetId\": \"string\"\n        },\n        \"addToDataset\": {\n          \"datasetId\": \"string\"\n        },\n        \"splitIntoDatasets\": {\n          \"datasetSplits\": [\n            {\n              \"dataset\": {\n                \"id\": \"string\",\n                \"createdAt\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"description\": \"string\",\n                \"metadata\": {},\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"defaultProcessingInfo\": {\n                  \"frameInterpolationInfo\": {\n                    \"sampleMs\": 0\n                  }\n                },\n                \"notes\": \"string\",\n                \"version\": {\n                  \"id\": \"string\",\n                  \"createdAt\": \"string\",\n                  \"modifiedAt\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"datasetId\": \"string\",\n                  \"annotationFilterConfig\": {\n                    \"ignoreEmptyInputs\": true\n                  },\n                  \"modelPredictConfig\": {},\n                  \"status\": {\n                    \"code\": \"string\",\n                    \"description\": \"string\",\n                    \"details\": \"string\",\n                    \"stackTrace\": [\n                      \"string\"\n                    ],\n                    \"percentCompleted\": 0,\n                    \"timeRemaining\": 0,\n                    \"reqId\": \"string\",\n                    \"internalDetails\": \"string\",\n                    \"redirectInfo\": {\n                      \"url\": \"string\",\n                      \"resourceType\": \"string\",\n                      \"oldResourceId\": \"string\",\n                      \"newResourceId\": \"string\"\n                    },\n                    \"developerNotes\": \"string\"\n                  },\n                  \"description\": \"string\",\n                  \"processingInfo\": {\n                    \"frameInterpolationInfo\": {\n                      \"sampleMs\": 0\n                    }\n                  },\n                  \"metrics\": {},\n                  \"exportInfo\": {\n                    \"clarifaiDataProtobuf\": {\n                      \"format\": \"string\",\n                      \"status\": {\n                        \"code\": \"string\",\n                        \"description\": \"string\",\n                        \"details\": \"string\",\n                        \"stackTrace\": [\n                          \"string\"\n                        ],\n                        \"percentCompleted\": 0,\n                        \"timeRemaining\": 0,\n                        \"reqId\": \"string\",\n                        \"internalDetails\": \"string\",\n                        \"redirectInfo\": {\n                          \"url\": \"string\",\n                          \"resourceType\": \"string\",\n                          \"oldResourceId\": \"string\",\n                          \"newResourceId\": \"string\"\n                        },\n                        \"developerNotes\": \"string\"\n                      },\n                      \"url\": \"string\",\n                      \"size\": \"string\",\n                      \"includeEmbeddings\": true\n                    },\n                    \"clarifaiDataJson\": {\n                      \"format\": \"string\",\n                      \"status\": {\n                        \"code\": \"string\",\n                        \"description\": \"string\",\n                        \"details\": \"string\",\n                        \"stackTrace\": [\n                          \"string\"\n                        ],\n                        \"percentCompleted\": 0,\n                        \"timeRemaining\": 0,\n                        \"reqId\": \"string\",\n                        \"internalDetails\": \"string\",\n                        \"redirectInfo\": {\n                          \"url\": \"string\",\n                          \"resourceType\": \"string\",\n                          \"oldResourceId\": \"string\",\n                          \"newResourceId\": \"string\"\n                        },\n                        \"developerNotes\": \"string\"\n                      },\n                      \"url\": \"string\",\n                      \"size\": \"string\",\n                      \"includeEmbeddings\": true\n                    },\n                    \"coco\": {\n                      \"format\": \"string\",\n                      \"status\": {\n                        \"code\": \"string\",\n                        \"description\": \"string\",\n                        \"details\": \"string\",\n                        \"stackTrace\": [\n                          \"string\"\n                        ],\n                        \"percentCompleted\": 0,\n                        \"timeRemaining\": 0,\n                        \"reqId\": \"string\",\n                        \"internalDetails\": \"string\",\n                        \"redirectInfo\": {\n                          \"url\": \"string\",\n                          \"resourceType\": \"string\",\n                          \"oldResourceId\": \"string\",\n                          \"newResourceId\": \"string\"\n                        },\n                        \"developerNotes\": \"string\"\n                      },\n                      \"url\": \"string\",\n                      \"size\": \"string\",\n                      \"includeEmbeddings\": true\n                    }\n                  },\n                  \"metadata\": {},\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"embedModelVersionIds\": [\n                    \"string\"\n                  ],\n                  \"requestOrigin\": \"string\"\n                },\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"bookmarkOrigin\": {\n                  \"id\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"resourceType\": \"string\"\n                },\n                \"image\": {\n                  \"url\": \"string\",\n                  \"base64\": \"string\",\n                  \"allowDuplicateUrl\": true,\n                  \"hosted\": {\n                    \"prefix\": \"string\",\n                    \"suffix\": \"string\",\n                    \"sizes\": [\n                      \"string\"\n                    ],\n                    \"crossorigin\": \"string\"\n                  },\n                  \"imageInfo\": {\n                    \"width\": 0,\n                    \"height\": 0,\n                    \"format\": \"string\",\n                    \"colorMode\": \"string\"\n                  }\n                }\n              },\n              \"percentage\": 0\n            }\n          ],\n          \"method\": \"string\"\n        }\n      },\n      \"appId\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"progress\": {\n        \"processed\": 0,\n        \"lastProcessedId\": \"string\"\n      },\n      \"createdBy\": \"string\",\n      \"createdAt\": \"string\",\n      \"lastModifiedAt\": \"string\"\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"bulkOperations\": [\n    {\n      \"id\": \"string\",\n      \"inputIds\": {\n        \"inputIds\": [\n          \"string\"\n        ]\n      },\n      \"search\": {\n        \"query\": {\n          \"ands\": [\n            {\n              \"output\": {\n                \"id\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"createdAt\": \"string\"\n              },\n              \"negate\": true\n            }\n          ],\n          \"language\": \"string\",\n          \"filters\": [\n            {\n              \"negate\": true,\n              \"lastUpdatedTimeRange\": {\n                \"startTime\": \"string\",\n                \"endTime\": \"string\"\n              }\n            }\n          ],\n          \"ranks\": [\n            {\n              \"negate\": true\n            }\n          ]\n        },\n        \"id\": \"string\",\n        \"applicationId\": \"string\",\n        \"name\": \"string\",\n        \"asOf\": \"string\",\n        \"gitHash\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"algorithm\": \"string\",\n        \"save\": true,\n        \"minValue\": null,\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"metric\": \"string\"\n      },\n      \"dataset\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"defaultProcessingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"notes\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"datasetId\": \"string\",\n          \"annotationFilterConfig\": {\n            \"ignoreEmptyInputs\": true\n          },\n          \"modelPredictConfig\": {},\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"description\": \"string\",\n          \"processingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"metrics\": {},\n          \"exportInfo\": {\n            \"clarifaiDataProtobuf\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"clarifaiDataJson\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"coco\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            }\n          },\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"embedModelVersionIds\": [\n            \"string\"\n          ],\n          \"requestOrigin\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"operation\": {\n        \"addConcepts\": {\n          \"concepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ]\n        },\n        \"deleteConcepts\": {\n          \"concepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ],\n          \"userIds\": [\n            \"string\"\n          ]\n        },\n        \"addMetadata\": {\n          \"metadata\": {}\n        },\n        \"deleteMetadata\": {\n          \"metadata\": {}\n        },\n        \"overwriteGeo\": {\n          \"geo\": {\n            \"geoPoint\": {\n              \"longitude\": null,\n              \"latitude\": null\n            },\n            \"geoLimit\": {\n              \"type\": \"string\",\n              \"value\": null\n            },\n            \"geoBox\": [\n              {\n                \"geoPoint\": {\n                  \"longitude\": null,\n                  \"latitude\": null\n                }\n              }\n            ]\n          }\n        },\n        \"deleteGeo\": {},\n        \"deleteFromDataset\": {\n          \"datasetId\": \"string\"\n        },\n        \"addToDataset\": {\n          \"datasetId\": \"string\"\n        },\n        \"splitIntoDatasets\": {\n          \"datasetSplits\": [\n            {\n              \"dataset\": {\n                \"id\": \"string\",\n                \"createdAt\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"description\": \"string\",\n                \"metadata\": {},\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"defaultProcessingInfo\": {\n                  \"frameInterpolationInfo\": {\n                    \"sampleMs\": 0\n                  }\n                },\n                \"notes\": \"string\",\n                \"version\": {\n                  \"id\": \"string\",\n                  \"createdAt\": \"string\",\n                  \"modifiedAt\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"datasetId\": \"string\",\n                  \"annotationFilterConfig\": {\n                    \"ignoreEmptyInputs\": true\n                  },\n                  \"modelPredictConfig\": {},\n                  \"status\": {\n                    \"code\": \"string\",\n                    \"description\": \"string\",\n                    \"details\": \"string\",\n                    \"stackTrace\": [\n                      \"string\"\n                    ],\n                    \"percentCompleted\": 0,\n                    \"timeRemaining\": 0,\n                    \"reqId\": \"string\",\n                    \"internalDetails\": \"string\",\n                    \"redirectInfo\": {\n                      \"url\": \"string\",\n                      \"resourceType\": \"string\",\n                      \"oldResourceId\": \"string\",\n                      \"newResourceId\": \"string\"\n                    },\n                    \"developerNotes\": \"string\"\n                  },\n                  \"description\": \"string\",\n                  \"processingInfo\": {\n                    \"frameInterpolationInfo\": {\n                      \"sampleMs\": 0\n                    }\n                  },\n                  \"metrics\": {},\n                  \"exportInfo\": {\n                    \"clarifaiDataProtobuf\": {\n                      \"format\": \"string\",\n                      \"status\": {\n                        \"code\": \"string\",\n                        \"description\": \"string\",\n                        \"details\": \"string\",\n                        \"stackTrace\": [\n                          \"string\"\n                        ],\n                        \"percentCompleted\": 0,\n                        \"timeRemaining\": 0,\n                        \"reqId\": \"string\",\n                        \"internalDetails\": \"string\",\n                        \"redirectInfo\": {\n                          \"url\": \"string\",\n                          \"resourceType\": \"string\",\n                          \"oldResourceId\": \"string\",\n                          \"newResourceId\": \"string\"\n                        },\n                        \"developerNotes\": \"string\"\n                      },\n                      \"url\": \"string\",\n                      \"size\": \"string\",\n                      \"includeEmbeddings\": true\n                    },\n                    \"clarifaiDataJson\": {\n                      \"format\": \"string\",\n                      \"status\": {\n                        \"code\": \"string\",\n                        \"description\": \"string\",\n                        \"details\": \"string\",\n                        \"stackTrace\": [\n                          \"string\"\n                        ],\n                        \"percentCompleted\": 0,\n                        \"timeRemaining\": 0,\n                        \"reqId\": \"string\",\n                        \"internalDetails\": \"string\",\n                        \"redirectInfo\": {\n                          \"url\": \"string\",\n                          \"resourceType\": \"string\",\n                          \"oldResourceId\": \"string\",\n                          \"newResourceId\": \"string\"\n                        },\n                        \"developerNotes\": \"string\"\n                      },\n                      \"url\": \"string\",\n                      \"size\": \"string\",\n                      \"includeEmbeddings\": true\n                    },\n                    \"coco\": {\n                      \"format\": \"string\",\n                      \"status\": {\n                        \"code\": \"string\",\n                        \"description\": \"string\",\n                        \"details\": \"string\",\n                        \"stackTrace\": [\n                          \"string\"\n                        ],\n                        \"percentCompleted\": 0,\n                        \"timeRemaining\": 0,\n                        \"reqId\": \"string\",\n                        \"internalDetails\": \"string\",\n                        \"redirectInfo\": {\n                          \"url\": \"string\",\n                          \"resourceType\": \"string\",\n                          \"oldResourceId\": \"string\",\n                          \"newResourceId\": \"string\"\n                        },\n                        \"developerNotes\": \"string\"\n                      },\n                      \"url\": \"string\",\n                      \"size\": \"string\",\n                      \"includeEmbeddings\": true\n                    }\n                  },\n                  \"metadata\": {},\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"embedModelVersionIds\": [\n                    \"string\"\n                  ],\n                  \"requestOrigin\": \"string\"\n                },\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"bookmarkOrigin\": {\n                  \"id\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"resourceType\": \"string\"\n                },\n                \"image\": {\n                  \"url\": \"string\",\n                  \"base64\": \"string\",\n                  \"allowDuplicateUrl\": true,\n                  \"hosted\": {\n                    \"prefix\": \"string\",\n                    \"suffix\": \"string\",\n                    \"sizes\": [\n                      \"string\"\n                    ],\n                    \"crossorigin\": \"string\"\n                  },\n                  \"imageInfo\": {\n                    \"width\": 0,\n                    \"height\": 0,\n                    \"format\": \"string\",\n                    \"colorMode\": \"string\"\n                  }\n                }\n              },\n              \"percentage\": 0\n            }\n          ],\n          \"method\": \"string\"\n        }\n      },\n      \"appId\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"progress\": {\n        \"processed\": 0,\n        \"lastProcessedId\": \"string\"\n      },\n      \"createdBy\": \"string\",\n      \"createdAt\": \"string\",\n      \"lastModifiedAt\": \"string\"\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/bulk_operations\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"bulkOperations\": [\n    {\n      \"id\": \"string\",\n      \"inputIds\": {\n        \"inputIds\": [\n          \"string\"\n        ]\n      },\n      \"search\": {\n        \"query\": {\n          \"ands\": [\n            {\n              \"output\": {\n                \"id\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"createdAt\": \"string\"\n              },\n              \"negate\": true\n            }\n          ],\n          \"language\": \"string\",\n          \"filters\": [\n            {\n              \"negate\": true,\n              \"lastUpdatedTimeRange\": {\n                \"startTime\": \"string\",\n                \"endTime\": \"string\"\n              }\n            }\n          ],\n          \"ranks\": [\n            {\n              \"negate\": true\n            }\n          ]\n        },\n        \"id\": \"string\",\n        \"applicationId\": \"string\",\n        \"name\": \"string\",\n        \"asOf\": \"string\",\n        \"gitHash\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"algorithm\": \"string\",\n        \"save\": true,\n        \"minValue\": null,\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"metric\": \"string\"\n      },\n      \"dataset\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"defaultProcessingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"notes\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"datasetId\": \"string\",\n          \"annotationFilterConfig\": {\n            \"ignoreEmptyInputs\": true\n          },\n          \"modelPredictConfig\": {},\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"description\": \"string\",\n          \"processingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"metrics\": {},\n          \"exportInfo\": {\n            \"clarifaiDataProtobuf\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"clarifaiDataJson\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"coco\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            }\n          },\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"embedModelVersionIds\": [\n            \"string\"\n          ],\n          \"requestOrigin\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"operation\": {\n        \"addConcepts\": {\n          \"concepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ]\n        },\n        \"deleteConcepts\": {\n          \"concepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ],\n          \"userIds\": [\n            \"string\"\n          ]\n        },\n        \"addMetadata\": {\n          \"metadata\": {}\n        },\n        \"deleteMetadata\": {\n          \"metadata\": {}\n        },\n        \"overwriteGeo\": {\n          \"geo\": {\n            \"geoPoint\": {\n              \"longitude\": null,\n              \"latitude\": null\n            },\n            \"geoLimit\": {\n              \"type\": \"string\",\n              \"value\": null\n            },\n            \"geoBox\": [\n              {\n                \"geoPoint\": {\n                  \"longitude\": null,\n                  \"latitude\": null\n                }\n              }\n            ]\n          }\n        },\n        \"deleteGeo\": {},\n        \"deleteFromDataset\": {\n          \"datasetId\": \"string\"\n        },\n        \"addToDataset\": {\n          \"datasetId\": \"string\"\n        },\n        \"splitIntoDatasets\": {\n          \"datasetSplits\": [\n            {\n              \"dataset\": {\n                \"id\": \"string\",\n                \"createdAt\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"description\": \"string\",\n                \"metadata\": {},\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"defaultProcessingInfo\": {\n                  \"frameInterpolationInfo\": {\n                    \"sampleMs\": 0\n                  }\n                },\n                \"notes\": \"string\",\n                \"version\": {\n                  \"id\": \"string\",\n                  \"createdAt\": \"string\",\n                  \"modifiedAt\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"datasetId\": \"string\",\n                  \"annotationFilterConfig\": {\n                    \"ignoreEmptyInputs\": true\n                  },\n                  \"modelPredictConfig\": {},\n                  \"status\": {\n                    \"code\": \"string\",\n                    \"description\": \"string\",\n                    \"details\": \"string\",\n                    \"stackTrace\": [\n                      \"string\"\n                    ],\n                    \"percentCompleted\": 0,\n                    \"timeRemaining\": 0,\n                    \"reqId\": \"string\",\n                    \"internalDetails\": \"string\",\n                    \"redirectInfo\": {\n                      \"url\": \"string\",\n                      \"resourceType\": \"string\",\n                      \"oldResourceId\": \"string\",\n                      \"newResourceId\": \"string\"\n                    },\n                    \"developerNotes\": \"string\"\n                  },\n                  \"description\": \"string\",\n                  \"processingInfo\": {\n                    \"frameInterpolationInfo\": {\n                      \"sampleMs\": 0\n                    }\n                  },\n                  \"metrics\": {},\n                  \"exportInfo\": {\n                    \"clarifaiDataProtobuf\": {\n                      \"format\": \"string\",\n                      \"status\": {\n                        \"code\": \"string\",\n                        \"description\": \"string\",\n                        \"details\": \"string\",\n                        \"stackTrace\": [\n                          \"string\"\n                        ],\n                        \"percentCompleted\": 0,\n                        \"timeRemaining\": 0,\n                        \"reqId\": \"string\",\n                        \"internalDetails\": \"string\",\n                        \"redirectInfo\": {\n                          \"url\": \"string\",\n                          \"resourceType\": \"string\",\n                          \"oldResourceId\": \"string\",\n                          \"newResourceId\": \"string\"\n                        },\n                        \"developerNotes\": \"string\"\n                      },\n                      \"url\": \"string\",\n                      \"size\": \"string\",\n                      \"includeEmbeddings\": true\n                    },\n                    \"clarifaiDataJson\": {\n                      \"format\": \"string\",\n                      \"status\": {\n                        \"code\": \"string\",\n                        \"description\": \"string\",\n                        \"details\": \"string\",\n                        \"stackTrace\": [\n                          \"string\"\n                        ],\n                        \"percentCompleted\": 0,\n                        \"timeRemaining\": 0,\n                        \"reqId\": \"string\",\n                        \"internalDetails\": \"string\",\n                        \"redirectInfo\": {\n                          \"url\": \"string\",\n                          \"resourceType\": \"string\",\n                          \"oldResourceId\": \"string\",\n                          \"newResourceId\": \"string\"\n                        },\n                        \"developerNotes\": \"string\"\n                      },\n                      \"url\": \"string\",\n                      \"size\": \"string\",\n                      \"includeEmbeddings\": true\n                    },\n                    \"coco\": {\n                      \"format\": \"string\",\n                      \"status\": {\n                        \"code\": \"string\",\n                        \"description\": \"string\",\n                        \"details\": \"string\",\n                        \"stackTrace\": [\n                          \"string\"\n                        ],\n                        \"percentCompleted\": 0,\n                        \"timeRemaining\": 0,\n                        \"reqId\": \"string\",\n                        \"internalDetails\": \"string\",\n                        \"redirectInfo\": {\n                          \"url\": \"string\",\n                          \"resourceType\": \"string\",\n                          \"oldResourceId\": \"string\",\n                          \"newResourceId\": \"string\"\n                        },\n                        \"developerNotes\": \"string\"\n                      },\n                      \"url\": \"string\",\n                      \"size\": \"string\",\n                      \"includeEmbeddings\": true\n                    }\n                  },\n                  \"metadata\": {},\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"embedModelVersionIds\": [\n                    \"string\"\n                  ],\n                  \"requestOrigin\": \"string\"\n                },\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"bookmarkOrigin\": {\n                  \"id\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"resourceType\": \"string\"\n                },\n                \"image\": {\n                  \"url\": \"string\",\n                  \"base64\": \"string\",\n                  \"allowDuplicateUrl\": true,\n                  \"hosted\": {\n                    \"prefix\": \"string\",\n                    \"suffix\": \"string\",\n                    \"sizes\": [\n                      \"string\"\n                    ],\n                    \"crossorigin\": \"string\"\n                  },\n                  \"imageInfo\": {\n                    \"width\": 0,\n                    \"height\": 0,\n                    \"format\": \"string\",\n                    \"colorMode\": \"string\"\n                  }\n                }\n              },\n              \"percentage\": 0\n            }\n          ],\n          \"method\": \"string\"\n        }\n      },\n      \"appId\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"progress\": {\n        \"processed\": 0,\n        \"lastProcessedId\": \"string\"\n      },\n      \"createdBy\": \"string\",\n      \"createdAt\": \"string\",\n      \"lastModifiedAt\": \"string\"\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/bulk_operations',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Cancel one or more bulk operations",
        "operationId": "V2_CancelBulkOperations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiBulkOperationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiCancelBulkOperationRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/bulk_operations' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/bulk_operations\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/bulk_operations',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/bulk_operations/{id}": {
      "get": {
        "summary": "Get the bulk operation details by ID",
        "operationId": "V2_GetBulkOperation2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleBulkOperationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The bulk operation id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --globoff 'https://api.clarifai.com/v2/bulk_operations/{id}?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/bulk_operations/{id}?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/bulk_operations/{id}?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/collectors": {
      "get": {
        "summary": "List all the collectors.",
        "operationId": "V2_ListCollectors2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollectorResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/collectors?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/collectors?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/collectors?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete multiple collectors in one request.\nThis call is asynchronous. Use DeleteCollector if you want a synchronous version.",
        "operationId": "V2_DeleteCollectors2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteCollectorsRequest"
              }
            }
          },
          "description": "Request to delete several things by the list of ids.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/collectors' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ],\n  \"deleteAll\": true\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ],\n  \"deleteAll\": true\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/collectors\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ],\n  \"deleteAll\": true\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/collectors',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Add a list of Collectors to an app.\nIn the handler of this endpoint we also check for all the scopes of the  POST /inputs\nendpoint.\nThose current scopes are listed here as a hard requirement.\nThey are needed when adding the collectors just so we now that you have permission with\nthat key at least to do the writing to this app with POST /inputs.",
        "operationId": "V2_PostCollectors2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollectorResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostCollectorsRequest"
              }
            }
          },
          "description": "Request to create Collectors.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/collectors' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"collectors\": [\n    {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"preQueueWorkflowId\": \"string\",\n      \"preQueueRandomSample\": null,\n      \"postQueueWorkflowId\": \"string\",\n      \"collectorSource\": {\n        \"apiPostModelOutputsCollectorSource\": {\n          \"modelUserId\": \"string\",\n          \"modelAppId\": \"string\",\n          \"modelId\": \"string\",\n          \"modelVersionId\": \"string\",\n          \"postInputsKeyId\": \"string\",\n          \"callerUserId\": \"string\"\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"collectOutputs\": true\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"collectors\": [\n    {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"preQueueWorkflowId\": \"string\",\n      \"preQueueRandomSample\": null,\n      \"postQueueWorkflowId\": \"string\",\n      \"collectorSource\": {\n        \"apiPostModelOutputsCollectorSource\": {\n          \"modelUserId\": \"string\",\n          \"modelAppId\": \"string\",\n          \"modelId\": \"string\",\n          \"modelVersionId\": \"string\",\n          \"postInputsKeyId\": \"string\",\n          \"callerUserId\": \"string\"\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"collectOutputs\": true\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/collectors\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"collectors\": [\n    {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"preQueueWorkflowId\": \"string\",\n      \"preQueueRandomSample\": null,\n      \"postQueueWorkflowId\": \"string\",\n      \"collectorSource\": {\n        \"apiPostModelOutputsCollectorSource\": {\n          \"modelUserId\": \"string\",\n          \"modelAppId\": \"string\",\n          \"modelId\": \"string\",\n          \"modelVersionId\": \"string\",\n          \"postInputsKeyId\": \"string\",\n          \"callerUserId\": \"string\"\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"collectOutputs\": true\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/collectors',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more collectors.",
        "operationId": "V2_PatchCollectors2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollectorResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchCollectorsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/collectors' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"collectors\": [\n    {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"preQueueWorkflowId\": \"string\",\n      \"preQueueRandomSample\": null,\n      \"postQueueWorkflowId\": \"string\",\n      \"collectorSource\": {\n        \"apiPostModelOutputsCollectorSource\": {\n          \"modelUserId\": \"string\",\n          \"modelAppId\": \"string\",\n          \"modelId\": \"string\",\n          \"modelVersionId\": \"string\",\n          \"postInputsKeyId\": \"string\",\n          \"callerUserId\": \"string\"\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"collectOutputs\": true\n    }\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"collectors\": [\n    {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"preQueueWorkflowId\": \"string\",\n      \"preQueueRandomSample\": null,\n      \"postQueueWorkflowId\": \"string\",\n      \"collectorSource\": {\n        \"apiPostModelOutputsCollectorSource\": {\n          \"modelUserId\": \"string\",\n          \"modelAppId\": \"string\",\n          \"modelId\": \"string\",\n          \"modelVersionId\": \"string\",\n          \"postInputsKeyId\": \"string\",\n          \"callerUserId\": \"string\"\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"collectOutputs\": true\n    }\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/collectors\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"collectors\": [\n    {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"preQueueWorkflowId\": \"string\",\n      \"preQueueRandomSample\": null,\n      \"postQueueWorkflowId\": \"string\",\n      \"collectorSource\": {\n        \"apiPostModelOutputsCollectorSource\": {\n          \"modelUserId\": \"string\",\n          \"modelAppId\": \"string\",\n          \"modelId\": \"string\",\n          \"modelVersionId\": \"string\",\n          \"postInputsKeyId\": \"string\",\n          \"callerUserId\": \"string\"\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"collectOutputs\": true\n    }\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/collectors',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/collectors/{collectorId}": {
      "get": {
        "summary": "Get a specific collector from an app.",
        "operationId": "V2_GetCollector2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleCollectorResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "collectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/concepts": {
      "get": {
        "summary": "List all the concepts.",
        "operationId": "V2_ListConcepts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "description": "Fuzzy match on concept ID",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/concepts?userAppId.userId=&userAppId.appId=&page=&perPage=&id=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/concepts?userAppId.userId=&userAppId.appId=&page=&perPage=&id=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/concepts?userAppId.userId=&userAppId.appId=&page=&perPage=&id=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Add a concept to an app.",
        "operationId": "V2_PostConcepts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostConceptsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/concepts' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"concepts\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"value\": null,\n      \"createdAt\": \"string\",\n      \"language\": \"string\",\n      \"appId\": \"string\",\n      \"definition\": \"string\",\n      \"vocabId\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"keypointInfo\": {\n        \"keypointNames\": [\n          \"string\"\n        ],\n        \"skeleton\": [\n          {\n            \"k1\": 0,\n            \"k2\": 0\n          }\n        ]\n      },\n      \"extraInfo\": {\n        \"isRankable\": true\n      }\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"concepts\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"value\": null,\n      \"createdAt\": \"string\",\n      \"language\": \"string\",\n      \"appId\": \"string\",\n      \"definition\": \"string\",\n      \"vocabId\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"keypointInfo\": {\n        \"keypointNames\": [\n          \"string\"\n        ],\n        \"skeleton\": [\n          {\n            \"k1\": 0,\n            \"k2\": 0\n          }\n        ]\n      },\n      \"extraInfo\": {\n        \"isRankable\": true\n      }\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/concepts\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"concepts\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"value\": null,\n      \"createdAt\": \"string\",\n      \"language\": \"string\",\n      \"appId\": \"string\",\n      \"definition\": \"string\",\n      \"vocabId\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"keypointInfo\": {\n        \"keypointNames\": [\n          \"string\"\n        ],\n        \"skeleton\": [\n          {\n            \"k1\": 0,\n            \"k2\": 0\n          }\n        ]\n      },\n      \"extraInfo\": {\n        \"isRankable\": true\n      }\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/concepts',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more concepts.",
        "operationId": "V2_PatchConcepts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchConceptsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/concepts' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"concepts\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"value\": null,\n      \"createdAt\": \"string\",\n      \"language\": \"string\",\n      \"appId\": \"string\",\n      \"definition\": \"string\",\n      \"vocabId\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"keypointInfo\": {\n        \"keypointNames\": [\n          \"string\"\n        ],\n        \"skeleton\": [\n          {\n            \"k1\": 0,\n            \"k2\": 0\n          }\n        ]\n      },\n      \"extraInfo\": {\n        \"isRankable\": true\n      }\n    }\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"concepts\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"value\": null,\n      \"createdAt\": \"string\",\n      \"language\": \"string\",\n      \"appId\": \"string\",\n      \"definition\": \"string\",\n      \"vocabId\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"keypointInfo\": {\n        \"keypointNames\": [\n          \"string\"\n        ],\n        \"skeleton\": [\n          {\n            \"k1\": 0,\n            \"k2\": 0\n          }\n        ]\n      },\n      \"extraInfo\": {\n        \"isRankable\": true\n      }\n    }\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/concepts\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"concepts\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"value\": null,\n      \"createdAt\": \"string\",\n      \"language\": \"string\",\n      \"appId\": \"string\",\n      \"definition\": \"string\",\n      \"vocabId\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"keypointInfo\": {\n        \"keypointNames\": [\n          \"string\"\n        ],\n        \"skeleton\": [\n          {\n            \"k1\": 0,\n            \"k2\": 0\n          }\n        ]\n      },\n      \"extraInfo\": {\n        \"isRankable\": true\n      }\n    }\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/concepts',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/concepts/knowledge_graphs": {
      "get": {
        "summary": "List all domain graphs.",
        "operationId": "V2_ListKnowledgeGraphs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiKnowledgeGraphResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/concepts/knowledge_graphs?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/concepts/knowledge_graphs?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/concepts/knowledge_graphs?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Post domain graphs.",
        "operationId": "V2_PostKnowledgeGraphs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiKnowledgeGraphResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostKnowledgeGraphsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/concepts/knowledge_graphs' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"knowledgeGraphs\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"examplesAppId\": \"string\",\n      \"sampledExamplesAppId\": \"string\"\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"knowledgeGraphs\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"examplesAppId\": \"string\",\n      \"sampledExamplesAppId\": \"string\"\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/concepts/knowledge_graphs\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"knowledgeGraphs\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"examplesAppId\": \"string\",\n      \"sampledExamplesAppId\": \"string\"\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/concepts/knowledge_graphs',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/concepts/searches": {
      "post": {
        "summary": "Search over the concepts to find one or more you're looking for.\nThis leverage the \"body\" parameter because we also have page and\nper_page as url query param variables in this request.",
        "operationId": "V2_PostConceptsSearches2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostConceptsSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/concepts/searches' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"conceptQuery\": {\n    \"name\": \"string\",\n    \"language\": \"string\",\n    \"workflowId\": \"string\",\n    \"useCases\": [\n      \"string\"\n    ],\n    \"workflow\": {\n      \"id\": \"string\",\n      \"appId\": \"string\",\n      \"createdAt\": \"string\",\n      \"nodes\": [\n        {\n          \"id\": \"string\",\n          \"nodeInputs\": [\n            {\n              \"nodeId\": \"string\"\n            }\n          ],\n          \"suppressOutput\": true,\n          \"outputInfoOverride\": {\n            \"outputConfig\": {\n              \"conceptsMutuallyExclusive\": true,\n              \"existingModelId\": \"string\",\n              \"language\": \"string\",\n              \"hyperParameters\": \"string\",\n              \"maxConcepts\": 0,\n              \"minValue\": null,\n              \"selectConcepts\": [\n                {\n                  \"id\": \"string\",\n                  \"name\": \"string\",\n                  \"value\": null,\n                  \"createdAt\": \"string\",\n                  \"language\": \"string\",\n                  \"appId\": \"string\",\n                  \"definition\": \"string\",\n                  \"vocabId\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"userId\": \"string\",\n                  \"keypointInfo\": {\n                    \"keypointNames\": [\n                      \"string\"\n                    ],\n                    \"skeleton\": [\n                      {\n                        \"k1\": 0,\n                        \"k2\": 0\n                      }\n                    ]\n                  },\n                  \"extraInfo\": {\n                    \"isRankable\": true\n                  }\n                }\n              ],\n              \"trainingTimeout\": 0,\n              \"sampleMs\": 0,\n              \"hyperParams\": {},\n              \"embedModelVersionId\": \"string\",\n              \"failOnMissingPositiveExamples\": true,\n              \"modelMetadata\": {}\n            },\n            \"message\": \"string\",\n            \"fieldsMap\": {},\n            \"params\": {},\n            \"paramsSpecs\": [\n              null\n            ]\n          }\n        }\n      ],\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"workflowId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"license\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"description\": \"string\",\n      \"notes\": \"string\",\n      \"useCases\": [\n        \"string\"\n      ],\n      \"checkConsents\": [\n        \"string\"\n      ],\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  },\n  \"extraInfo\": {},\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"conceptQuery\": {\n    \"name\": \"string\",\n    \"language\": \"string\",\n    \"workflowId\": \"string\",\n    \"useCases\": [\n      \"string\"\n    ],\n    \"workflow\": {\n      \"id\": \"string\",\n      \"appId\": \"string\",\n      \"createdAt\": \"string\",\n      \"nodes\": [\n        {\n          \"id\": \"string\",\n          \"nodeInputs\": [\n            {\n              \"nodeId\": \"string\"\n            }\n          ],\n          \"suppressOutput\": true,\n          \"outputInfoOverride\": {\n            \"outputConfig\": {\n              \"conceptsMutuallyExclusive\": true,\n              \"existingModelId\": \"string\",\n              \"language\": \"string\",\n              \"hyperParameters\": \"string\",\n              \"maxConcepts\": 0,\n              \"minValue\": null,\n              \"selectConcepts\": [\n                {\n                  \"id\": \"string\",\n                  \"name\": \"string\",\n                  \"value\": null,\n                  \"createdAt\": \"string\",\n                  \"language\": \"string\",\n                  \"appId\": \"string\",\n                  \"definition\": \"string\",\n                  \"vocabId\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"userId\": \"string\",\n                  \"keypointInfo\": {\n                    \"keypointNames\": [\n                      \"string\"\n                    ],\n                    \"skeleton\": [\n                      {\n                        \"k1\": 0,\n                        \"k2\": 0\n                      }\n                    ]\n                  },\n                  \"extraInfo\": {\n                    \"isRankable\": true\n                  }\n                }\n              ],\n              \"trainingTimeout\": 0,\n              \"sampleMs\": 0,\n              \"hyperParams\": {},\n              \"embedModelVersionId\": \"string\",\n              \"failOnMissingPositiveExamples\": true,\n              \"modelMetadata\": {}\n            },\n            \"message\": \"string\",\n            \"fieldsMap\": {},\n            \"params\": {},\n            \"paramsSpecs\": [\n              null\n            ]\n          }\n        }\n      ],\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"workflowId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"license\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"description\": \"string\",\n      \"notes\": \"string\",\n      \"useCases\": [\n        \"string\"\n      ],\n      \"checkConsents\": [\n        \"string\"\n      ],\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  },\n  \"extraInfo\": {},\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/concepts/searches\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"conceptQuery\": {\n    \"name\": \"string\",\n    \"language\": \"string\",\n    \"workflowId\": \"string\",\n    \"useCases\": [\n      \"string\"\n    ],\n    \"workflow\": {\n      \"id\": \"string\",\n      \"appId\": \"string\",\n      \"createdAt\": \"string\",\n      \"nodes\": [\n        {\n          \"id\": \"string\",\n          \"nodeInputs\": [\n            {\n              \"nodeId\": \"string\"\n            }\n          ],\n          \"suppressOutput\": true,\n          \"outputInfoOverride\": {\n            \"outputConfig\": {\n              \"conceptsMutuallyExclusive\": true,\n              \"existingModelId\": \"string\",\n              \"language\": \"string\",\n              \"hyperParameters\": \"string\",\n              \"maxConcepts\": 0,\n              \"minValue\": null,\n              \"selectConcepts\": [\n                {\n                  \"id\": \"string\",\n                  \"name\": \"string\",\n                  \"value\": null,\n                  \"createdAt\": \"string\",\n                  \"language\": \"string\",\n                  \"appId\": \"string\",\n                  \"definition\": \"string\",\n                  \"vocabId\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"userId\": \"string\",\n                  \"keypointInfo\": {\n                    \"keypointNames\": [\n                      \"string\"\n                    ],\n                    \"skeleton\": [\n                      {\n                        \"k1\": 0,\n                        \"k2\": 0\n                      }\n                    ]\n                  },\n                  \"extraInfo\": {\n                    \"isRankable\": true\n                  }\n                }\n              ],\n              \"trainingTimeout\": 0,\n              \"sampleMs\": 0,\n              \"hyperParams\": {},\n              \"embedModelVersionId\": \"string\",\n              \"failOnMissingPositiveExamples\": true,\n              \"modelMetadata\": {}\n            },\n            \"message\": \"string\",\n            \"fieldsMap\": {},\n            \"params\": {},\n            \"paramsSpecs\": [\n              null\n            ]\n          }\n        }\n      ],\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"workflowId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"license\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"description\": \"string\",\n      \"notes\": \"string\",\n      \"useCases\": [\n        \"string\"\n      ],\n      \"checkConsents\": [\n        \"string\"\n      ],\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  },\n  \"extraInfo\": {},\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/concepts/searches',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/concepts/status": {
      "get": {
        "summary": "List all the concepts with their positive and negative counts",
        "operationId": "V2_GetConceptCounts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptCountResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/concepts/status?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/concepts/status?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/concepts/status?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/concepts/{conceptId}": {
      "get": {
        "summary": "Get a specific concept from an app.",
        "operationId": "V2_GetConcept2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "conceptId",
            "description": "The concept's id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/concepts/{conceptId}/languages": {
      "get": {
        "summary": "List the concept in all the translated languages.",
        "operationId": "V2_ListConceptLanguages2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a new translation for this concept.",
        "operationId": "V2_PostConceptLanguages2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "conceptLanguages": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiConceptLanguage"
                    }
                  }
                },
                "description": "POST multiple concept languages for the given concept."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch the name for a given language names by passing in a list of concepts with the new names\nfor the languages.",
        "operationId": "V2_PatchConceptLanguages2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "conceptLanguages": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiConceptLanguage"
                    }
                  },
                  "action": {
                    "type": "string",
                    "description": "The action to perform with the objects in the PATCH."
                  }
                },
                "description": "PATCH multiple concept languages for the given concept."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/concepts/{conceptId}/languages/{language}": {
      "get": {
        "summary": "Get a specific concept from an app.",
        "operationId": "V2_GetConceptLanguage2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleConceptLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "description": "This is the language identifier.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/datasets": {
      "get": {
        "summary": "List all the datasets.",
        "operationId": "V2_ListDatasets3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the app",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "If neither sort option is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortById",
            "description": "Whether to order by the external id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "Filtering options:",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter datasets by bookmark. If set, only return bookmarked datasets. Otherwise none bookmarked datasets only.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the dataset:\n  - id\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Fuzzy filter on dataset ID\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/datasets?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByCreatedAt=&sortByStarCount=&sortByModifiedAt=&sortById=&starredOnly=&bookmark=&search=&id=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/datasets?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByCreatedAt=&sortByStarCount=&sortByModifiedAt=&sortById=&starredOnly=&bookmark=&search=&id=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/datasets?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByCreatedAt=&sortByStarCount=&sortByModifiedAt=&sortById=&starredOnly=&bookmark=&search=&id=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete one or more datasets in a single request.",
        "operationId": "V2_DeleteDatasets2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteDatasetsRequest"
              }
            }
          },
          "description": "Request to delete several datasets by list of ids.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/datasets' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"datasetIds\": [\n    \"string\"\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"datasetIds\": [\n    \"string\"\n  ]\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/datasets\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"datasetIds\": [\n    \"string\"\n  ]\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/datasets',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Add datasets to an app.\nThe process is atomic, i.e. either all or no datasets are added.\nIf there is an error for one dataset,\nthe process will stop, revert the transaction and return the error.",
        "operationId": "V2_PostDatasets2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostDatasetsRequest"
              }
            }
          },
          "description": "Request to add one or more datasets.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/datasets' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"datasets\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"description\": \"string\",\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"defaultProcessingInfo\": {\n        \"frameInterpolationInfo\": {\n          \"sampleMs\": 0\n        }\n      },\n      \"notes\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"datasetId\": \"string\",\n        \"annotationFilterConfig\": {\n          \"ignoreEmptyInputs\": true\n        },\n        \"modelPredictConfig\": {},\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"description\": \"string\",\n        \"processingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"metrics\": {},\n        \"exportInfo\": {\n          \"clarifaiDataProtobuf\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"clarifaiDataJson\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"coco\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          }\n        },\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"embedModelVersionIds\": [\n          \"string\"\n        ],\n        \"requestOrigin\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"datasets\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"description\": \"string\",\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"defaultProcessingInfo\": {\n        \"frameInterpolationInfo\": {\n          \"sampleMs\": 0\n        }\n      },\n      \"notes\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"datasetId\": \"string\",\n        \"annotationFilterConfig\": {\n          \"ignoreEmptyInputs\": true\n        },\n        \"modelPredictConfig\": {},\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"description\": \"string\",\n        \"processingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"metrics\": {},\n        \"exportInfo\": {\n          \"clarifaiDataProtobuf\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"clarifaiDataJson\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"coco\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          }\n        },\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"embedModelVersionIds\": [\n          \"string\"\n        ],\n        \"requestOrigin\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/datasets\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"datasets\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"description\": \"string\",\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"defaultProcessingInfo\": {\n        \"frameInterpolationInfo\": {\n          \"sampleMs\": 0\n        }\n      },\n      \"notes\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"datasetId\": \"string\",\n        \"annotationFilterConfig\": {\n          \"ignoreEmptyInputs\": true\n        },\n        \"modelPredictConfig\": {},\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"description\": \"string\",\n        \"processingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"metrics\": {},\n        \"exportInfo\": {\n          \"clarifaiDataProtobuf\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"clarifaiDataJson\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"coco\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          }\n        },\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"embedModelVersionIds\": [\n          \"string\"\n        ],\n        \"requestOrigin\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/datasets',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more datasets.\nThe process is atomic, i.e. either all or no datasets are patched.\nIf there is an error for one dataset,\nthe process will stop, revert the transaction and return the error.",
        "operationId": "V2_PatchDatasets2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchDatasetsRequest"
              }
            }
          },
          "description": "Request to patch several datasets.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/datasets' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"datasets\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"description\": \"string\",\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"defaultProcessingInfo\": {\n        \"frameInterpolationInfo\": {\n          \"sampleMs\": 0\n        }\n      },\n      \"notes\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"datasetId\": \"string\",\n        \"annotationFilterConfig\": {\n          \"ignoreEmptyInputs\": true\n        },\n        \"modelPredictConfig\": {},\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"description\": \"string\",\n        \"processingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"metrics\": {},\n        \"exportInfo\": {\n          \"clarifaiDataProtobuf\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"clarifaiDataJson\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"coco\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          }\n        },\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"embedModelVersionIds\": [\n          \"string\"\n        ],\n        \"requestOrigin\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"datasets\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"description\": \"string\",\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"defaultProcessingInfo\": {\n        \"frameInterpolationInfo\": {\n          \"sampleMs\": 0\n        }\n      },\n      \"notes\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"datasetId\": \"string\",\n        \"annotationFilterConfig\": {\n          \"ignoreEmptyInputs\": true\n        },\n        \"modelPredictConfig\": {},\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"description\": \"string\",\n        \"processingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"metrics\": {},\n        \"exportInfo\": {\n          \"clarifaiDataProtobuf\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"clarifaiDataJson\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"coco\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          }\n        },\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"embedModelVersionIds\": [\n          \"string\"\n        ],\n        \"requestOrigin\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/datasets\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"datasets\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"description\": \"string\",\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"defaultProcessingInfo\": {\n        \"frameInterpolationInfo\": {\n          \"sampleMs\": 0\n        }\n      },\n      \"notes\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"datasetId\": \"string\",\n        \"annotationFilterConfig\": {\n          \"ignoreEmptyInputs\": true\n        },\n        \"modelPredictConfig\": {},\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"description\": \"string\",\n        \"processingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"metrics\": {},\n        \"exportInfo\": {\n          \"clarifaiDataProtobuf\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"clarifaiDataJson\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          },\n          \"coco\": {\n            \"format\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"url\": \"string\",\n            \"size\": \"string\",\n            \"includeEmbeddings\": true\n          }\n        },\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"embedModelVersionIds\": [\n          \"string\"\n        ],\n        \"requestOrigin\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/datasets',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/datasets/{datasetId}": {
      "get": {
        "summary": "Get a specific dataset.",
        "operationId": "V2_GetDataset2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleDatasetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalFields",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/datasets/{datasetId}/inputs": {
      "get": {
        "summary": "List all the dataset inputs in a dataset.",
        "operationId": "V2_ListDatasetInputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete one or more dataset inputs in a single request.",
        "operationId": "V2_DeleteDatasetInputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "inputIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specify which inputs to delete from dataset."
                  }
                },
                "description": "Request to delete several dataset inputs by list of ids."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add dataset inputs to a dataset.\nThe process is not atomic, i.e. if there are errors with some dataset\ninputs, others might still be added. The response reports\n  - SUCCESS if all dataset inputs were added,\n  - MIXED_STATUS if only some dataset inputs were added, and\n  - FAILURE if no dataset inputs were added.\nEach individual dataset input in the response has the status set to\nindicate if it was successful or if there was an error.",
        "operationId": "V2_PostDatasetInputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "datasetInputs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDatasetInput"
                    },
                    "description": "List of inputs that are requested to be added to this dataset.\nIdentify each input by id field. All other inputs fields are ignored."
                  },
                  "search": {
                    "$ref": "#/components/schemas/apiSearch"
                  }
                },
                "description": "Request to add one or more datasets."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/datasets/{datasetId}/inputs/{inputId}": {
      "get": {
        "summary": "Get a specific dataset input.",
        "operationId": "V2_GetDatasetInput2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleDatasetInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "description": "Identify dataset input by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/datasets/{datasetId}/versions": {
      "get": {
        "summary": "List all the dataset versions.",
        "operationId": "V2_ListDatasetVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "requestOrigins",
            "description": "(optional URL parameter) Filter by origin of dataset version",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DATASET_VERSION_REQUEST_ORIGIN_NOT_SET",
                  "MANUAL",
                  "TRAINING",
                  "EVAL_GROUND_TRUTH",
                  "EVAL_PREDICTIONS"
                ]
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete one or more dataset versions in a single request.",
        "operationId": "V2_DeleteDatasetVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "datasetVersionIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request to delete several dataset versions by list of ids."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add dataset versions to a dataset.",
        "operationId": "V2_PostDatasetVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "datasetVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDatasetVersion"
                    },
                    "description": "List of dataset versions that are requested to be added."
                  }
                },
                "description": "Request to add one or more dataset versions."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more dataset versions.",
        "operationId": "V2_PatchDatasetVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "datasetVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDatasetVersion"
                    },
                    "description": "List of dataset versions that are requested to be updated."
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now, only 'overwrite' action is supported"
                  }
                },
                "description": "Request to patch several dataset versions."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/datasets/{datasetId}/versions/{datasetVersionId}": {
      "get": {
        "summary": "Get a specific dataset version.",
        "operationId": "V2_GetDatasetVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleDatasetVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetVersionId",
            "description": "Identify dataset version by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/datasets/{datasetId}/versions/{datasetVersionId}/exports": {
      "put": {
        "summary": "Create export of a dataset version.",
        "operationId": "V2_PutDatasetVersionExports2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionExportResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetVersionId",
            "description": "Identify dataset version by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "exports": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDatasetVersionExport"
                    },
                    "description": "exports is the list of requested dataset version exports.\nOnly setting the 'format' field of the export is supported."
                  }
                },
                "description": "Request to create exports of a dataset version."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/datasets/{datasetId}/versions/{datasetVersionId}/metrics": {
      "get": {
        "operationId": "V2_ListDatasetVersionMetricsGroups2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionMetricsGroupResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetVersionId",
            "description": "Identify dataset version by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "parentPaths",
            "description": "Filter by parent path. Multiple parent paths are OR-ed. Empty list results in no filter.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "types",
            "description": "Filter by parent type. Multiple types are OR-ed. Empty list results in no filter.\n\n - INPUT_TYPE: Group data examples by input type.\nExamples: images, videos, text, audio.\n - CONCEPT_ID: Group data examples by concept ID.\nExamples: inputs with cat concept, inputs with dog concept.\n - CONCEPTS_COUNT: Group data examples by concepts count.\nExamples: inputs with 20 concepts, inputs with 21 concepts.\n - BOUNDING_BOXES_COUNT: Group data examples by bounding boxes count.\nExamples: inputs with 20 bounding boxes, inputs with 21 bounding boxes.\n - POLYGONS_COUNT: Group data examples by polygons count.\nExamples: inputs with 20 polygons, inputs with 21 polygons.\n - POINTS_COUNT: Group data examples by points count.\nExamples: inputs with 20 points, inputs with 21 points.\n - MASKS_COUNT: Group data examples by masks count.\nExamples: inputs with 20 masks, inputs with 21 masks.\n - PIXELS_COUNT: Group data examples by pixels count.\nIn order to reduce the number of groups, we use bins.\nExamples for bin size = 400: inputs with [200000, 200400) pixels, inputs with [200400, 200800) pixels.\n - ASPECT_RATIO: Group data examples by aspect ratio.\nIn order to reduce the number of groups, we use bins.\nExamples for bin size = 0.1: inputs with [0.5, 0.6) aspect ratio, inputs with [0.6, 0.7) aspect ratio.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET",
                  "INPUT_TYPE",
                  "CONCEPT_ID",
                  "CONCEPTS_COUNT",
                  "BOUNDING_BOXES_COUNT",
                  "POLYGONS_COUNT",
                  "POINTS_COUNT",
                  "MASKS_COUNT",
                  "PIXELS_COUNT",
                  "ASPECT_RATIO"
                ]
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/evaluations": {
      "get": {
        "operationId": "V2_ListEvaluations3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sortAscending",
            "description": "If true, sort in ascending order, otherwise sort in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByAppId",
            "description": "Whether to order by application id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByRocAuc",
            "description": "Whether to order by eval metric summary.macro_avg_roc_auc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByF1",
            "description": "Whether to order by eval metric summary.f1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by when the metric was created",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByMeanAvgPrecision",
            "description": "Whether to order by eval metric summary.mean_avg_precision_iou_50",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByPrecision",
            "description": "Whether to order by eval metric summary.macro_avg_precision",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByRecall",
            "description": "Whether to order by eval metric summary.macro_avg_recall",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModelId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByEvalDatasetId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByTrainDatasetId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "modelTypeId",
            "description": "Filter on model type id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evalDatasetIds",
            "description": "Filter on dataset ID of the dataset version specified in the metric version",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "trainDatasetIds",
            "description": "Filter on dataset ID of the dataset version specified by the model version",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "conceptIds",
            "description": "Filter on concept IDs specified in the modele version's output_info",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "showFailedMetrics",
            "description": "Whether to show failed metrics, defaults to false",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/evaluations?userAppId.userId=&userAppId.appId=&page=&perPage=&sortAscending=&sortByAppId=&sortByRocAuc=&sortByF1=&sortByCreatedAt=&sortByMeanAvgPrecision=&sortByPrecision=&sortByRecall=&sortByModelId=&sortByEvalDatasetId=&sortByTrainDatasetId=&modelTypeId=&evalDatasetIds=&trainDatasetIds=&conceptIds=&showFailedMetrics=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/evaluations?userAppId.userId=&userAppId.appId=&page=&perPage=&sortAscending=&sortByAppId=&sortByRocAuc=&sortByF1=&sortByCreatedAt=&sortByMeanAvgPrecision=&sortByPrecision=&sortByRecall=&sortByModelId=&sortByEvalDatasetId=&sortByTrainDatasetId=&modelTypeId=&evalDatasetIds=&trainDatasetIds=&conceptIds=&showFailedMetrics=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/evaluations?userAppId.userId=&userAppId.appId=&page=&perPage=&sortAscending=&sortByAppId=&sortByRocAuc=&sortByF1=&sortByCreatedAt=&sortByMeanAvgPrecision=&sortByPrecision=&sortByRecall=&sortByModelId=&sortByEvalDatasetId=&sortByTrainDatasetId=&modelTypeId=&evalDatasetIds=&trainDatasetIds=&conceptIds=&showFailedMetrics=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "operationId": "V2_PostEvaluations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostEvaluationsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/evaluations' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"evalMetrics\": [\n    {\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"appId\": \"string\",\n      \"id\": \"string\",\n      \"groundTruthDataset\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"defaultProcessingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"notes\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"datasetId\": \"string\",\n          \"annotationFilterConfig\": {\n            \"ignoreEmptyInputs\": true\n          },\n          \"modelPredictConfig\": {},\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"description\": \"string\",\n          \"processingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"metrics\": {},\n          \"exportInfo\": {\n            \"clarifaiDataProtobuf\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"clarifaiDataJson\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"coco\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            }\n          },\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"embedModelVersionIds\": [\n            \"string\"\n          ],\n          \"requestOrigin\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"predictionsDataset\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"defaultProcessingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"notes\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"datasetId\": \"string\",\n          \"annotationFilterConfig\": {\n            \"ignoreEmptyInputs\": true\n          },\n          \"modelPredictConfig\": {},\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"description\": \"string\",\n          \"processingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"metrics\": {},\n          \"exportInfo\": {\n            \"clarifaiDataProtobuf\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"clarifaiDataJson\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"coco\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            }\n          },\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"embedModelVersionIds\": [\n            \"string\"\n          ],\n          \"requestOrigin\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"summary\": {\n        \"top1Accuracy\": null,\n        \"top5Accuracy\": null,\n        \"macroAvgRocAuc\": null,\n        \"macroStdRocAuc\": null,\n        \"macroAvgF1Score\": null,\n        \"macroStdF1Score\": null,\n        \"macroAvgPrecision\": null,\n        \"macroAvgRecall\": null,\n        \"meanAvgPrecisionIou50\": null,\n        \"meanAvgPrecisionIouRange\": null,\n        \"lopqMetrics\": [\n          {\n            \"k\": 0,\n            \"recallVsBruteForce\": null,\n            \"kendallTauVsBruteForce\": null,\n            \"mostFrequentCodePercent\": null,\n            \"lopqNdcg\": null,\n            \"bruteForceNdcg\": null\n          }\n        ]\n      },\n      \"confusionMatrix\": {\n        \"matrix\": [\n          {\n            \"predicted\": \"string\",\n            \"actual\": \"string\",\n            \"value\": null,\n            \"predictedConcept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"actualConcept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          }\n        ],\n        \"conceptIds\": [\n          \"string\"\n        ]\n      },\n      \"cooccurrenceMatrix\": {\n        \"matrix\": [\n          {\n            \"row\": \"string\",\n            \"col\": \"string\",\n            \"count\": 0\n          }\n        ],\n        \"conceptIds\": [\n          \"string\"\n        ]\n      },\n      \"labelCounts\": {\n        \"positiveLabelCounts\": [\n          {\n            \"conceptName\": \"string\",\n            \"count\": 0,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"binaryMetrics\": [\n        {\n          \"numPos\": 0,\n          \"numNeg\": 0,\n          \"numTot\": 0,\n          \"rocAuc\": null,\n          \"f1\": null,\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"rocCurve\": {\n            \"fpr\": [\n              null\n            ],\n            \"tpr\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ],\n            \"fprPerImage\": [\n              null\n            ],\n            \"fprPerObject\": [\n              null\n            ]\n          },\n          \"precisionRecallCurve\": {\n            \"recall\": [\n              null\n            ],\n            \"precision\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ]\n          },\n          \"avgPrecision\": null,\n          \"areaName\": \"string\",\n          \"areaMin\": null,\n          \"areaMax\": null,\n          \"iou\": null\n        }\n      ],\n      \"testSet\": [\n        {\n          \"predictedConcepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ],\n          \"groundTruthConcepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ]\n        }\n      ],\n      \"metricsByArea\": [\n        {\n          \"numPos\": 0,\n          \"numNeg\": 0,\n          \"numTot\": 0,\n          \"rocAuc\": null,\n          \"f1\": null,\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"rocCurve\": {\n            \"fpr\": [\n              null\n            ],\n            \"tpr\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ],\n            \"fprPerImage\": [\n              null\n            ],\n            \"fprPerObject\": [\n              null\n            ]\n          },\n          \"precisionRecallCurve\": {\n            \"recall\": [\n              null\n            ],\n            \"precision\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ]\n          },\n          \"avgPrecision\": null,\n          \"areaName\": \"string\",\n          \"areaMin\": null,\n          \"areaMax\": null,\n          \"iou\": null\n        }\n      ],\n      \"metricsByClass\": [\n        {\n          \"numPos\": 0,\n          \"numNeg\": 0,\n          \"numTot\": 0,\n          \"rocAuc\": null,\n          \"f1\": null,\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"rocCurve\": {\n            \"fpr\": [\n              null\n            ],\n            \"tpr\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ],\n            \"fprPerImage\": [\n              null\n            ],\n            \"fprPerObject\": [\n              null\n            ]\n          },\n          \"precisionRecallCurve\": {\n            \"recall\": [\n              null\n            ],\n            \"precision\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ]\n          },\n          \"avgPrecision\": null,\n          \"areaName\": \"string\",\n          \"areaMin\": null,\n          \"areaMax\": null,\n          \"iou\": null\n        }\n      ],\n      \"trackerMetrics\": [\n        {\n          \"motMota\": null,\n          \"motNumSwitches\": 0,\n          \"morseFrag\": null,\n          \"avgPrecision\": null,\n          \"aiid\": \"string\",\n          \"uniqueSwitchRate\": null\n        }\n      ],\n      \"evalInfo\": {\n        \"params\": {}\n      },\n      \"extendedMetrics\": {\n        \"userMetrics\": {}\n      }\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"evalMetrics\": [\n    {\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"appId\": \"string\",\n      \"id\": \"string\",\n      \"groundTruthDataset\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"defaultProcessingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"notes\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"datasetId\": \"string\",\n          \"annotationFilterConfig\": {\n            \"ignoreEmptyInputs\": true\n          },\n          \"modelPredictConfig\": {},\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"description\": \"string\",\n          \"processingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"metrics\": {},\n          \"exportInfo\": {\n            \"clarifaiDataProtobuf\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"clarifaiDataJson\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"coco\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            }\n          },\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"embedModelVersionIds\": [\n            \"string\"\n          ],\n          \"requestOrigin\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"predictionsDataset\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"defaultProcessingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"notes\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"datasetId\": \"string\",\n          \"annotationFilterConfig\": {\n            \"ignoreEmptyInputs\": true\n          },\n          \"modelPredictConfig\": {},\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"description\": \"string\",\n          \"processingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"metrics\": {},\n          \"exportInfo\": {\n            \"clarifaiDataProtobuf\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"clarifaiDataJson\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"coco\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            }\n          },\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"embedModelVersionIds\": [\n            \"string\"\n          ],\n          \"requestOrigin\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"summary\": {\n        \"top1Accuracy\": null,\n        \"top5Accuracy\": null,\n        \"macroAvgRocAuc\": null,\n        \"macroStdRocAuc\": null,\n        \"macroAvgF1Score\": null,\n        \"macroStdF1Score\": null,\n        \"macroAvgPrecision\": null,\n        \"macroAvgRecall\": null,\n        \"meanAvgPrecisionIou50\": null,\n        \"meanAvgPrecisionIouRange\": null,\n        \"lopqMetrics\": [\n          {\n            \"k\": 0,\n            \"recallVsBruteForce\": null,\n            \"kendallTauVsBruteForce\": null,\n            \"mostFrequentCodePercent\": null,\n            \"lopqNdcg\": null,\n            \"bruteForceNdcg\": null\n          }\n        ]\n      },\n      \"confusionMatrix\": {\n        \"matrix\": [\n          {\n            \"predicted\": \"string\",\n            \"actual\": \"string\",\n            \"value\": null,\n            \"predictedConcept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"actualConcept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          }\n        ],\n        \"conceptIds\": [\n          \"string\"\n        ]\n      },\n      \"cooccurrenceMatrix\": {\n        \"matrix\": [\n          {\n            \"row\": \"string\",\n            \"col\": \"string\",\n            \"count\": 0\n          }\n        ],\n        \"conceptIds\": [\n          \"string\"\n        ]\n      },\n      \"labelCounts\": {\n        \"positiveLabelCounts\": [\n          {\n            \"conceptName\": \"string\",\n            \"count\": 0,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"binaryMetrics\": [\n        {\n          \"numPos\": 0,\n          \"numNeg\": 0,\n          \"numTot\": 0,\n          \"rocAuc\": null,\n          \"f1\": null,\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"rocCurve\": {\n            \"fpr\": [\n              null\n            ],\n            \"tpr\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ],\n            \"fprPerImage\": [\n              null\n            ],\n            \"fprPerObject\": [\n              null\n            ]\n          },\n          \"precisionRecallCurve\": {\n            \"recall\": [\n              null\n            ],\n            \"precision\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ]\n          },\n          \"avgPrecision\": null,\n          \"areaName\": \"string\",\n          \"areaMin\": null,\n          \"areaMax\": null,\n          \"iou\": null\n        }\n      ],\n      \"testSet\": [\n        {\n          \"predictedConcepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ],\n          \"groundTruthConcepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ]\n        }\n      ],\n      \"metricsByArea\": [\n        {\n          \"numPos\": 0,\n          \"numNeg\": 0,\n          \"numTot\": 0,\n          \"rocAuc\": null,\n          \"f1\": null,\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"rocCurve\": {\n            \"fpr\": [\n              null\n            ],\n            \"tpr\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ],\n            \"fprPerImage\": [\n              null\n            ],\n            \"fprPerObject\": [\n              null\n            ]\n          },\n          \"precisionRecallCurve\": {\n            \"recall\": [\n              null\n            ],\n            \"precision\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ]\n          },\n          \"avgPrecision\": null,\n          \"areaName\": \"string\",\n          \"areaMin\": null,\n          \"areaMax\": null,\n          \"iou\": null\n        }\n      ],\n      \"metricsByClass\": [\n        {\n          \"numPos\": 0,\n          \"numNeg\": 0,\n          \"numTot\": 0,\n          \"rocAuc\": null,\n          \"f1\": null,\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"rocCurve\": {\n            \"fpr\": [\n              null\n            ],\n            \"tpr\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ],\n            \"fprPerImage\": [\n              null\n            ],\n            \"fprPerObject\": [\n              null\n            ]\n          },\n          \"precisionRecallCurve\": {\n            \"recall\": [\n              null\n            ],\n            \"precision\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ]\n          },\n          \"avgPrecision\": null,\n          \"areaName\": \"string\",\n          \"areaMin\": null,\n          \"areaMax\": null,\n          \"iou\": null\n        }\n      ],\n      \"trackerMetrics\": [\n        {\n          \"motMota\": null,\n          \"motNumSwitches\": 0,\n          \"morseFrag\": null,\n          \"avgPrecision\": null,\n          \"aiid\": \"string\",\n          \"uniqueSwitchRate\": null\n        }\n      ],\n      \"evalInfo\": {\n        \"params\": {}\n      },\n      \"extendedMetrics\": {\n        \"userMetrics\": {}\n      }\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/evaluations\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"evalMetrics\": [\n    {\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"appId\": \"string\",\n      \"id\": \"string\",\n      \"groundTruthDataset\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"defaultProcessingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"notes\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"datasetId\": \"string\",\n          \"annotationFilterConfig\": {\n            \"ignoreEmptyInputs\": true\n          },\n          \"modelPredictConfig\": {},\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"description\": \"string\",\n          \"processingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"metrics\": {},\n          \"exportInfo\": {\n            \"clarifaiDataProtobuf\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"clarifaiDataJson\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"coco\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            }\n          },\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"embedModelVersionIds\": [\n            \"string\"\n          ],\n          \"requestOrigin\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"predictionsDataset\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"defaultProcessingInfo\": {\n          \"frameInterpolationInfo\": {\n            \"sampleMs\": 0\n          }\n        },\n        \"notes\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"datasetId\": \"string\",\n          \"annotationFilterConfig\": {\n            \"ignoreEmptyInputs\": true\n          },\n          \"modelPredictConfig\": {},\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"description\": \"string\",\n          \"processingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"metrics\": {},\n          \"exportInfo\": {\n            \"clarifaiDataProtobuf\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"clarifaiDataJson\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            },\n            \"coco\": {\n              \"format\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"url\": \"string\",\n              \"size\": \"string\",\n              \"includeEmbeddings\": true\n            }\n          },\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"embedModelVersionIds\": [\n            \"string\"\n          ],\n          \"requestOrigin\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"summary\": {\n        \"top1Accuracy\": null,\n        \"top5Accuracy\": null,\n        \"macroAvgRocAuc\": null,\n        \"macroStdRocAuc\": null,\n        \"macroAvgF1Score\": null,\n        \"macroStdF1Score\": null,\n        \"macroAvgPrecision\": null,\n        \"macroAvgRecall\": null,\n        \"meanAvgPrecisionIou50\": null,\n        \"meanAvgPrecisionIouRange\": null,\n        \"lopqMetrics\": [\n          {\n            \"k\": 0,\n            \"recallVsBruteForce\": null,\n            \"kendallTauVsBruteForce\": null,\n            \"mostFrequentCodePercent\": null,\n            \"lopqNdcg\": null,\n            \"bruteForceNdcg\": null\n          }\n        ]\n      },\n      \"confusionMatrix\": {\n        \"matrix\": [\n          {\n            \"predicted\": \"string\",\n            \"actual\": \"string\",\n            \"value\": null,\n            \"predictedConcept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"actualConcept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          }\n        ],\n        \"conceptIds\": [\n          \"string\"\n        ]\n      },\n      \"cooccurrenceMatrix\": {\n        \"matrix\": [\n          {\n            \"row\": \"string\",\n            \"col\": \"string\",\n            \"count\": 0\n          }\n        ],\n        \"conceptIds\": [\n          \"string\"\n        ]\n      },\n      \"labelCounts\": {\n        \"positiveLabelCounts\": [\n          {\n            \"conceptName\": \"string\",\n            \"count\": 0,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"binaryMetrics\": [\n        {\n          \"numPos\": 0,\n          \"numNeg\": 0,\n          \"numTot\": 0,\n          \"rocAuc\": null,\n          \"f1\": null,\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"rocCurve\": {\n            \"fpr\": [\n              null\n            ],\n            \"tpr\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ],\n            \"fprPerImage\": [\n              null\n            ],\n            \"fprPerObject\": [\n              null\n            ]\n          },\n          \"precisionRecallCurve\": {\n            \"recall\": [\n              null\n            ],\n            \"precision\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ]\n          },\n          \"avgPrecision\": null,\n          \"areaName\": \"string\",\n          \"areaMin\": null,\n          \"areaMax\": null,\n          \"iou\": null\n        }\n      ],\n      \"testSet\": [\n        {\n          \"predictedConcepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ],\n          \"groundTruthConcepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ]\n        }\n      ],\n      \"metricsByArea\": [\n        {\n          \"numPos\": 0,\n          \"numNeg\": 0,\n          \"numTot\": 0,\n          \"rocAuc\": null,\n          \"f1\": null,\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"rocCurve\": {\n            \"fpr\": [\n              null\n            ],\n            \"tpr\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ],\n            \"fprPerImage\": [\n              null\n            ],\n            \"fprPerObject\": [\n              null\n            ]\n          },\n          \"precisionRecallCurve\": {\n            \"recall\": [\n              null\n            ],\n            \"precision\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ]\n          },\n          \"avgPrecision\": null,\n          \"areaName\": \"string\",\n          \"areaMin\": null,\n          \"areaMax\": null,\n          \"iou\": null\n        }\n      ],\n      \"metricsByClass\": [\n        {\n          \"numPos\": 0,\n          \"numNeg\": 0,\n          \"numTot\": 0,\n          \"rocAuc\": null,\n          \"f1\": null,\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"rocCurve\": {\n            \"fpr\": [\n              null\n            ],\n            \"tpr\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ],\n            \"fprPerImage\": [\n              null\n            ],\n            \"fprPerObject\": [\n              null\n            ]\n          },\n          \"precisionRecallCurve\": {\n            \"recall\": [\n              null\n            ],\n            \"precision\": [\n              null\n            ],\n            \"thresholds\": [\n              null\n            ]\n          },\n          \"avgPrecision\": null,\n          \"areaName\": \"string\",\n          \"areaMin\": null,\n          \"areaMax\": null,\n          \"iou\": null\n        }\n      ],\n      \"trackerMetrics\": [\n        {\n          \"motMota\": null,\n          \"motNumSwitches\": 0,\n          \"morseFrag\": null,\n          \"avgPrecision\": null,\n          \"aiid\": \"string\",\n          \"uniqueSwitchRate\": null\n        }\n      ],\n      \"evalInfo\": {\n        \"params\": {}\n      },\n      \"extendedMetrics\": {\n        \"userMetrics\": {}\n      }\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/evaluations',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/evaluations/{evaluationId}": {
      "get": {
        "operationId": "V2_GetEvaluation2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields.confusionMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.cooccurrenceMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.labelCounts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.binaryMetrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.testSet",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByArea",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByClass",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/inputs": {
      "get": {
        "summary": "List all the inputs.",
        "operationId": "V2_ListInputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status.code",
            "description": "Status code from internal codes.\n\n - ZERO: to be revised and greatly expanded\n - SUCCESS: Generic\n - MOVED: Resource moved. Respond with Http status 307 and add new Location header to response\n - TEAPOT: SUCCESS_WARNING_API_DEPRECATED = 10001;\nSUCCESS_WARNING_CLIENT_DEPRECATED = 10002;\n - CONN_ACCOUNT_ISSUES: Clarifai Connection Codes: 11xxx\n\nexpired cc, still in trial, feature not supported in your tier\n - CONN_TOKEN_INVALID: invalid auth token used. Deprecated: we should return CONN_KEY_INVALID instead now in all cases.\n - CONN_CREDENTIALS_INVALID: invalid auth credentials\n - CONN_EXCEED_HOURLY_LIMIT: throttle hourly limit exceeded\n - CONN_EXCEED_MONTHLY_LIMIT: throttle monthly limit exceeded\n - CONN_THROTTLED: throttler and billing stuff\n - CONN_EXCEEDS_LIMITS: throttler and billing stuff\n - CONN_INSUFFICIENT_SCOPES: api key has insufficient permissions\n - CONN_KEY_INVALID: api key is invalid\n - CONN_KEY_NOT_FOUND: api key not found\n - CONN_BAD_REQUEST_FORMAT: multipart form parsing, broken json, etc\n - CONN_DOES_NOT_EXIST: when path is bad\n - CONN_INVALID_REQUEST: something wrong with a header\n - CONN_METHOD_NOT_ALLOWED: when a request method is not allowed\n - CONN_NO_GDPR_CONSENT: lack GDPR consent\n - CONN_AUTH_METHOD_DISABLED: authentication method is disabled\n - MODEL_TRAINED: Model/Custom Training related 20xxx\n\nCustom model has been already trained.\n - MODEL_TRAINING: Custom model is currently training.\n - MODEL_UNTRAINED: Custom model has not yet been trained.\n - MODEL_QUEUED_FOR_TRAINING: Custom model is currently in queue for training, waiting on assets to process first.\n - MODEL_TRAINING_FAILED: generic err msg for any type of model training err.\n - MODEL_BUILDING: For new V3 DockerInternalType models which are built images\n - MODEL_BUILDING_FAILED: Failed to build image for model.\n - MODEL_BUILD_UNEXPECTED_ERROR: Failed to build image for model.\n - MODEL_TRAINING_NO_DATA: Custom model training had no data.  FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_NO_POSITIVES: Custom model training had no positive examples. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS: Custom model training was ONE_VS_N but with a single class. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_TIMED_OUT: Training took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_WAITING_ERROR: Training got error waiting on asset pipeline to finish. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_UNKNOWN_ERROR: Training threw an unknown exception.\n - MODEL_TRAINING_MSG_REDELIVER: Training message was redelivered. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_INSUFFICIENT_DATA: Training got error due to insufficient labelled data. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_INVALID_PARAMS: FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED: Training is stopped because too much data was dropped. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_EVALUATION_TIMED_OUT: Evaluation took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_WAITING_ERROR: Evaluation got error waiting on asset pipeline to finish.FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_UNKNOWN_ERROR: EVALUATION THREW AN UNKNOWN EXCEPTION.\n - MODEL_EVALUATION_MSG_REDELIVER: Eval message was redelivered. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_NEED_LABELS: Don't have enough concepts labelled to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_NEED_INPUTS: Don't have enough inputs per concept to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_FAILED: Generic err code for eval failure.\n - MODEL_DEPLOYMENT_FAILED: Used when inference coordinator failed to deploy spire and throws an error\n - MODEL_DEPLOYING: Used when calling the inference coordinator to deploy a spire\n - MODEL_QUEUED_FOR_DEPLOYMENT: Used when training is completed\n - MODEL_NOT_DEPLOYED: Used when model spire deployment is manually taken down or due to inactivity\n - MODEL_REFERENCE_INVALID_ARGUMENT: Used when a model reference field is not set properly\n - MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT: Used when a model example input field is not set properly\n - MODEL_EXPORTED: Model Export status codes\n - WORKFLOW_NO_MATCHING_INPUT: specified model input not in workflow\n - WORKFLOW_REQUIRE_TRAINED_MODEL: specified model must be trained\n - WORKFLOW_INVALID_ARGUMENT: error in the request somewhere\n - WORKFLOW_INVALID_REQUEST: error in the request somewhere\n - CONCEPT_MODIFY_SUCCESS: Concept related 23xxx\n - ANNOTATION_SUCCESS: Annotation related 24xxx\n - METADATA_INVALID_PATCH_ARGUMENTS: Metadata related 249xx\n - TRAINER_JOB_STATE_NONE: Training service related 25xxx\n - DATA_DUMP_SUCCESS: Data Dump related 251xx\n - DATA_DUMP_NO_DATA: DEPRECATED: Not used anymore. Now for an empty data dump, DATA_DUMP_SUCCESS is returned. To detect an empty data dump, check if the inptus count is 0.\n - APP_DUPLICATION_SUCCESS: Duplicate related 252xx\n - MODULE_DOES_NOT_EXIST: Module related codes 253xx\n - BULK_OPERATION_SUCCESS: Bulk Operation related codes 254xx\n - RUNNER_DOES_NOT_EXIST: Runner related codes 256xx\n - NODEPOOL_DOES_NOT_EXIST: Nodepool related codes 257xx\n - COMPUTE_CLUSTER_DOES_NOT_EXIST: ComputeCluster related codes 258xx\n - INPUT_DOWNLOAD_SUCCESS: Input:Image related 30xxx\n - INPUT_DOWNLOAD_PENDING: when things are async, this is the default status.\n - INPUT_DOWNLOAD_FAILED: any type of error downloading and processing\n - INPUT_VIDEO_DOWNLOAD_SUCCESS: Input:Video related 31xxx -- Deprecated\n - INPUT_WRITES_DISABLED_FOR_MAINTENANCE: deprecate this one. Use REQUEST_DISABLED_FOR_MAINTENANCE\n - PREDICT_INVALID_REQUEST: API formatting issues 4000x\n - DATABASE_DUPLICATE_KEY: Other related 400xx\n - EXTERNAL_CONNECTION_ERROR: could not connect to external services\n - QUEUE_CONN_ERROR: Queue related errors 41xxx\n - SQS_OVERLIMIT: SQS related errors 411xx\n - SEARCH_INTERNAL_FAILURE: Search related errors 43xxxx\n - EVALUATION_QUEUED: Workflow evaluation err code\n - STRIPE_EVENT_ERROR: Stripe 44xxx\n - CACHE_MISS: Redis/Cache 45xxx\n - SIGNUP_EVENT_ERROR: Sift Science 46xxx\n - APP_COUNT_INVALID_MESSAGE: Application counts related errors 470xx\n - MP_DOWNLOAD_ERROR: Media processor related errors 471xx -- DEPRECATED\n - DATATIER_CONN_ERROR: DataTier related error 472xx\n - USER_CONSENT_FACE: User legal consent stauts related 50xxx\n - WORKER_MISSING: Workers 51xxx\n - COLLECTOR_MISSING: Collectors 52xxx\n - SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST: SSO 53xxx\n - TASK_IN_PROGRESS: Tasks 54xxx\nThe task was created.\n - TASK_DONE: The task is completed.\n - TASK_WONT_DO: The task is marked as abandoned.\n - TASK_FAILED: An error occurred during add-task-annotations or add-auto-annotations pipeline.\n - TASK_IDLE: When an Auto Annotation task job has finished processing its last batch and is waiting for more dataset assets.\n - TASK_CONFLICT: The task operation is in conflict with the current state of the server.\n - TASK_NOT_IMPLEMENTED: Certain task-related scenarios are not implemented.\n - TASK_MISSING: Task was not found.\n - TASK_PERMISSION_DENIED: Not allowed to perform a task-related action.\n - LABEL_ORDER_PENDING: Label Order Related Status Code 55xxx\n - LICENSE_ACTIVE: License Related Status Code 600xx\n - LICENSE_DELETED: hidden state not reflected to users\n - PASSWORD_VALIDATION_SUCCESS: Password Related Status Code\n - FEATUREFLAG_CONFIG_NOT_FOUND: Feature flags status code\n - MAINTENANCE_SUCCESS: Maintenance status code\n - DATASET_VERSION_PENDING: Datasets 64xxx\nThe dataset version is pending to be processed.\n - DATASET_VERSION_IN_PROGRESS: The dataset version is currently being processed.\n - DATASET_VERSION_READY: The dataset version is ready to be used.\n - DATASET_VERSION_FAILURE: An error occurred during the dataset version processing.\n - DATASET_VERSION_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version processing.\n - DATASET_VERSION_CONFLICT: An alteration to dataset version would create a conflict\n - DATASET_INPUT_SUCCESS: The dataset input was successfully added.\n - DATASET_INPUT_DUPLICATE: The dataset input is a duplicate.\nDeprecated: Unused.\n - DATASET_VERSION_EXPORT_SUCCESS: The dataset version export is completed.\n - DATASET_VERSION_EXPORT_PENDING: The dataset version is pending to be exported.\n - DATASET_VERSION_EXPORT_FAILED: An error occurred during the dataset version export.\n - DATASET_VERSION_EXPORT_IN_PROGRESS: The dataset version is currently being exported.\n - DATASET_VERSION_EXPORT_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version export.\n - JOB_QUEUED: Generic Job status codes\n - AUTH_MISSING_IDP_ASSOC: auth issues\n\nTODO: Knowledge graph related 80xxx\n - UPLOAD_IN_PROGRESS: Multipart uploading status codes\n - BILLING_INVALID_INFO: Billing related issues: 69xxx\n - INTERNAL_SERVER_ISSUE: Internal issues: 98xxx\n - CONN_UNCATEGORIZED: Uncategorized: 99xxx: move off as soon as known\n - BAD_REQUEST: Deprecated: migrate off to one of the internal issues\n - SERVER_ERROR: Deprecated: migrate off to one of the internal issues",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ZERO",
                "SUCCESS",
                "MIXED_STATUS",
                "FAILURE",
                "TRY_AGAIN",
                "NOT_IMPLEMENTED",
                "MOVED",
                "TEAPOT",
                "CONN_ACCOUNT_ISSUES",
                "CONN_TOKEN_INVALID",
                "CONN_CREDENTIALS_INVALID",
                "CONN_EXCEED_HOURLY_LIMIT",
                "CONN_EXCEED_MONTHLY_LIMIT",
                "CONN_THROTTLED",
                "CONN_EXCEEDS_LIMITS",
                "CONN_INSUFFICIENT_SCOPES",
                "CONN_KEY_INVALID",
                "CONN_KEY_NOT_FOUND",
                "CONN_BAD_REQUEST_FORMAT",
                "CONN_DOES_NOT_EXIST",
                "CONN_INVALID_REQUEST",
                "CONN_METHOD_NOT_ALLOWED",
                "CONN_NO_GDPR_CONSENT",
                "CONN_AUTH_METHOD_DISABLED",
                "MODEL_TRAINED",
                "MODEL_TRAINING",
                "MODEL_UNTRAINED",
                "MODEL_QUEUED_FOR_TRAINING",
                "MODEL_UPLOADING",
                "MODEL_UPLOADING_FAILED",
                "MODEL_TRAINING_FAILED",
                "MODEL_BUILDING",
                "MODEL_BUILDING_FAILED",
                "MODEL_BUILD_UNEXPECTED_ERROR",
                "MODEL_TRAINING_NO_DATA",
                "MODEL_TRAINING_NO_POSITIVES",
                "MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS",
                "MODEL_TRAINING_TIMED_OUT",
                "MODEL_TRAINING_WAITING_ERROR",
                "MODEL_TRAINING_UNKNOWN_ERROR",
                "MODEL_TRAINING_MSG_REDELIVER",
                "MODEL_TRAINING_INSUFFICIENT_DATA",
                "MODEL_TRAINING_INVALID_PARAMS",
                "MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED",
                "MODEL_MODIFY_SUCCESS",
                "MODEL_MODIFY_PENDING",
                "MODEL_MODIFY_FAILED",
                "MODEL_DOES_NOT_EXIST",
                "MODEL_PERMISSION_DENIED",
                "MODEL_INVALID_ARGUMENT",
                "MODEL_INVALID_REQUEST",
                "MODEL_EVALUATED",
                "MODEL_EVALUATING",
                "MODEL_NOT_EVALUATED",
                "MODEL_QUEUED_FOR_EVALUATION",
                "MODEL_EVALUATION_TIMED_OUT",
                "MODEL_EVALUATION_WAITING_ERROR",
                "MODEL_EVALUATION_UNKNOWN_ERROR",
                "MODEL_PREDICTION_FAILED",
                "MODEL_EVALUATION_MSG_REDELIVER",
                "MODEL_EVALUATION_NEED_LABELS",
                "MODEL_EVALUATION_NEED_INPUTS",
                "MODEL_EVALUATION_FAILED",
                "MODEL_DEPLOYMENT_FAILED",
                "MODEL_DEPLOYING",
                "MODEL_QUEUED_FOR_DEPLOYMENT",
                "MODEL_NOT_DEPLOYED",
                "MODEL_REFERENCE_INVALID_ARGUMENT",
                "MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT",
                "MODEL_EXPORTED",
                "MODEL_EXPORTING",
                "MODEL_EXPORTING_FAILED",
                "MODEL_EXPORT_PENDING",
                "WORKFLOW_NO_MATCHING_INPUT",
                "WORKFLOW_REQUIRE_TRAINED_MODEL",
                "WORKFLOW_DUPLICATE",
                "WORKFLOW_UNSUPPORTED_FORMAT",
                "WORKFLOW_DOES_NOT_EXIST",
                "WORKFLOW_PERMISSION_DENIED",
                "WORKFLOW_INVALID_ARGUMENT",
                "WORKFLOW_INVALID_RECIPE",
                "WORKFLOW_INVALID_TEMPLATE",
                "WORKFLOW_INVALID_GRAPH",
                "WORKFLOW_INTERNAL_FAILURE",
                "WORKFLOW_INVALID_REQUEST",
                "WORKFLOW_MODIFY_SUCCESS",
                "WORKFLOW_MODIFY_PENDING",
                "WORKFLOW_MODIFY_FAILED",
                "WORKFLOW_REINDEX_FAILED",
                "CONCEPT_MODIFY_SUCCESS",
                "CONCEPT_MODIFY_PENDING",
                "CONCEPT_MODIFY_FAILED",
                "ANNOTATION_SUCCESS",
                "ANNOTATION_PENDING",
                "ANNOTATION_FAILED",
                "ANNOTATION_UNKNOWN_STATUS",
                "ANNOTATION_INVALID_ARGUMENT",
                "ANNOTATION_PERMISSION_DENIED",
                "ANNOTATION_AWAITING_REVIEW",
                "ANNOTATION_AWAITING_CONSENSUS_REVIEW",
                "ANNOTATION_REVIEW_DENIED",
                "ANNOTATION_MODIFY_SUCCESS",
                "ANNOTATION_MODIFY_PENDING",
                "ANNOTATION_MODIFY_FAILED",
                "METADATA_INVALID_PATCH_ARGUMENTS",
                "METADATA_PARSING_ISSUE",
                "METADATA_MANIPULATION_ISSUE",
                "TRAINER_JOB_STATE_NONE",
                "TRAINER_JOB_STATE_QUEUED",
                "TRAINER_JOB_STATE_RUNNING",
                "TRAINER_JOB_STATE_COMPLETE",
                "TRAINER_JOB_STATE_ERROR",
                "DATA_DUMP_SUCCESS",
                "DATA_DUMP_PENDING",
                "DATA_DUMP_FAILED",
                "DATA_DUMP_IN_PROGRESS",
                "DATA_DUMP_NO_DATA",
                "DATA_DUMP_UNEXPECTED_ERROR",
                "DATA_DUMP_EXPORT_SUCCESS",
                "DATA_DUMP_EXPORT_PENDING",
                "DATA_DUMP_EXPORT_FAILED",
                "DATA_DUMP_EXPORT_IN_PROGRESS",
                "DATA_DUMP_EXPORT_UNEXPECTED_ERROR",
                "APP_DUPLICATION_SUCCESS",
                "APP_DUPLICATION_FAILED",
                "APP_DUPLICATION_PENDING",
                "APP_DUPLICATION_IN_PROGRESS",
                "APP_DUPLICATION_INVALID_REQUEST",
                "MODULE_DOES_NOT_EXIST",
                "MODULE_PERMISSION_DENIED",
                "MODULE_INVALID_ARGUMENT",
                "MODULE_INVALID_REQUEST",
                "BULK_OPERATION_SUCCESS",
                "BULK_OPERATION_FAILED",
                "BULK_OPERATION_PENDING",
                "BULK_OPERATION_IN_PROGRESS",
                "BULK_OPERATION_INVALID_REQUEST",
                "BULK_OPERATION_CANCELLED",
                "BULK_OPERATION_UNEXPECTED_ERROR",
                "RUNNER_DOES_NOT_EXIST",
                "RUNNER_PERMISSION_DENIED",
                "RUNNER_INVALID_ARGUMENT",
                "RUNNER_INVALID_REQUEST",
                "RUNNER_NEEDS_RETRY",
                "RUNNER_STREAM_START",
                "RUNNER_STREAM_END",
                "RUNNER_ITEM_CANCELLED",
                "RUNNER_PROCESSING_FAILED",
                "NODEPOOL_DOES_NOT_EXIST",
                "NODEPOOL_INVALID_ARGUMENT",
                "NODEPOOL_INVALID_REQUEST",
                "COMPUTE_CLUSTER_DOES_NOT_EXIST",
                "COMPUTE_CLUSTER_INVALID_ARGUMENT",
                "COMPUTE_CLUSTER_INVALID_REQUEST",
                "INPUT_DOWNLOAD_SUCCESS",
                "INPUT_DOWNLOAD_PENDING",
                "INPUT_DOWNLOAD_FAILED",
                "INPUT_DOWNLOAD_IN_PROGRESS",
                "INPUT_STATUS_UPDATE_FAILED",
                "INPUT_DELETE_FAILED",
                "INPUT_DUPLICATE",
                "INPUT_UNSUPPORTED_FORMAT",
                "INPUT_DOES_NOT_EXIST",
                "INPUT_PERMISSION_DENIED",
                "INPUT_INVALID_ARGUMENT",
                "INPUT_OVER_LIMIT",
                "INPUT_INVALID_URL",
                "INPUT_MODIFY_SUCCESS",
                "INPUT_MODIFY_PENDING",
                "INPUT_MODIFY_FAILED",
                "INPUT_STORAGE_HOST_FAILED",
                "ALL_INPUT_INVALID_BYTES",
                "INPUT_CLUSTER_SUCCESS",
                "INPUT_CLUSTER_PENDING",
                "INPUT_CLUSTER_FAILED",
                "INPUT_CLUSTER_IN_PROGRESS",
                "INPUT_REINDEX_SUCCESS",
                "INPUT_REINDEX_PENDING",
                "INPUT_REINDEX_FAILED",
                "INPUT_REINDEX_IN_PROGRESS",
                "INPUT_VIDEO_DOWNLOAD_SUCCESS",
                "INPUT_VIDEO_DOWNLOAD_PENDING",
                "INPUT_VIDEO_DOWNLOAD_FAILED",
                "INPUT_VIDEO_DUPLICATE",
                "INPUT_VIDEO_UNSUPPORTED_FORMAT",
                "INPUT_VIDEO_DOES_NOT_EXIST",
                "INPUT_VIDEO_PERMISSION_DENIED",
                "INPUT_VIDEO_INVALID_ARGUMENT",
                "INPUT_VIDEO_OVER_LIMIT",
                "INPUT_VIDEO_INVALID_URL",
                "INPUT_VIDEO_MODIFY_SUCCESS",
                "INPUT_VIDEO_MODIFY_PENDING",
                "INPUT_VIDEO_MODIFY_FAILED",
                "INPUT_VIDEO_STORAGE_HOST_FAILED",
                "ALL_INPUT_VIDEOS_INVALID_BYTES",
                "INPUT_VIDEO_PROCESSING_SUCCESS",
                "INPUT_VIDEO_PROCESSING_PENDING",
                "INPUT_VIDEO_PROCESSING_FAILED",
                "INPUT_VIDEO_STORAGE_INCONSISTENCY",
                "INPUT_VIDEO_STORAGE_FAILURE",
                "INPUT_VIDEO_URL_GENERATION_FAILURE",
                "INPUT_CONNECTION_FAILED",
                "REQUEST_DISABLED_FOR_MAINTENANCE",
                "INPUT_WRITES_DISABLED_FOR_MAINTENANCE",
                "INPUT_INVALID_REQUEST",
                "PREDICT_INVALID_REQUEST",
                "SEARCH_INVALID_REQUEST",
                "CONCEPTS_INVALID_REQUEST",
                "STATS_INVALID_REQUEST",
                "DATABASE_DUPLICATE_KEY",
                "DATABASE_STATEMENT_TIMEOUT",
                "DATABASE_INVALID_ROWS_AFFECTED",
                "DATABASE_DEADLOCK_DETECTED",
                "DATABASE_FAIL_TASK",
                "DATABASE_FAIL_TO_GET_CONNECTIONS",
                "DATABASE_TOO_MANY_CLIENTS",
                "DATABASE_CONSTRAINT_VIOLATED",
                "DATABASE_CANCELED",
                "ASYNC_WORKER_MULTI_ERRORS",
                "RPC_REQUEST_QUEUE_FULL",
                "RPC_SERVER_UNAVAILABLE",
                "RPC_REQUEST_TIMEOUT",
                "RPC_MAX_MESSAGE_SIZE_EXCEEDED",
                "RPC_CANCELED",
                "RPC_UNKNOWN_METHOD",
                "REQUEST_CANCELED_BY_USER",
                "CLUSTER_INTERNAL_FAILURE",
                "EXTERNAL_CONNECTION_ERROR",
                "QUERY_INVALID_SYNTAX",
                "QUEUE_CONN_ERROR",
                "QUEUE_CLOSE_REQUEST_TIMEOUT",
                "QUEUE_CONN_CLOSED",
                "QUEUE_PUBLISH_ACK_TIMEOUT",
                "QUEUE_PUBLISH_ERROR",
                "QUEUE_SUBSCRIPTION_TIMEOUT",
                "QUEUE_SUBSCRIPTION_ERROR",
                "QUEUE_MARSHALLING_FAILED",
                "QUEUE_UNMARSHALLING_FAILED",
                "QUEUE_MAX_MSG_REDELIVERY_EXCEEDED",
                "QUEUE_ACK_FAILURE",
                "SQS_OVERLIMIT",
                "SQS_INVALID_RECEIPT_HANDLE",
                "SQS_UNKNOWN",
                "SEARCH_INTERNAL_FAILURE",
                "SEARCH_PROJECTION_FAILURE",
                "SEARCH_PREDICTION_FAILURE",
                "SEARCH_BY_NOT_FULLY_INDEXED_INPUT",
                "SAVED_SEARCH_MODIFY_FAILED",
                "SEARCH_COUNTS_UNAVAILABLE",
                "EVALUATION_QUEUED",
                "EVALUATION_IN_PROGRESS",
                "EVALUATION_SUCCESS",
                "EVALUATION_FAILED_TO_RETRIEVE_DATA",
                "EVALUATION_INVALID_ARGUMENT",
                "EVALUATION_FAILED",
                "EVALUATION_PENDING",
                "EVALUATION_TIMED_OUT",
                "EVALUATION_UNEXPECTED_ERROR",
                "EVALUATION_MIXED",
                "STRIPE_EVENT_ERROR",
                "CACHE_MISS",
                "REDIS_SCRIPT_EXITED_WITH_FAILURE",
                "REDIS_STREAM_ERR",
                "REDIS_NO_CONSUMERS",
                "REDIS_STREAM_BACKOFF",
                "SIGNUP_EVENT_ERROR",
                "SIGNUP_FLAGGED",
                "FILETYPE_UNSUPPORTED",
                "APP_COUNT_INVALID_MESSAGE",
                "APP_COUNT_UPDATE_INCREMENT_FAILED",
                "APP_COUNT_REBUILD_FAILED",
                "APP_COUNT_INTERNAL_FAILURE",
                "MP_DOWNLOAD_ERROR",
                "MP_RESOLVE_DNS_ERROR",
                "MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR",
                "MP_IMAGE_DECODE_ERROR",
                "MP_INVALID_ARGUMENT",
                "MP_IMAGE_PROCESSING_ERROR",
                "DATATIER_CONN_ERROR",
                "USER_CONSENT_FACE",
                "WORKER_MISSING",
                "WORKER_ACTIVE",
                "WORKER_INACTIVE",
                "COLLECTOR_MISSING",
                "COLLECTOR_ACTIVE",
                "COLLECTOR_INACTIVE",
                "COLLECTOR_POST_INPUT_FAILED",
                "SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST",
                "TASK_IN_PROGRESS",
                "TASK_DONE",
                "TASK_WONT_DO",
                "TASK_FAILED",
                "TASK_IDLE",
                "TASK_CONFLICT",
                "TASK_NOT_IMPLEMENTED",
                "TASK_MISSING",
                "TASK_PERMISSION_DENIED",
                "TASK_ASSIGNMENT_SUCCESS",
                "TASK_ASSIGNMENT_PENDING",
                "TASK_ASSIGNMENT_AWAITING_REVIEW",
                "TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW",
                "TASK_ASSIGNMENT_REVIEW_DENIED",
                "LABEL_ORDER_PENDING",
                "LABEL_ORDER_IN_PROGRESS",
                "LABEL_ORDER_SUCCESS",
                "LABEL_ORDER_CANCELED",
                "LICENSE_ACTIVE",
                "LICENSE_DOES_NOT_EXIST",
                "LICENSE_NEED_UPDATE",
                "LICENSE_EXPIRED",
                "LICENSE_REVOKED",
                "LICENSE_DELETED",
                "LICENSE_VOLUME_EXCEEDED",
                "PASSWORD_VALIDATION_SUCCESS",
                "PASSWORD_VALIDATION_FAILED",
                "PASSWORDPOLICY_INVALID_ARGUMENT",
                "FEATUREFLAG_CONFIG_NOT_FOUND",
                "FEATUREFLAG_INVALID_ARGUMENT",
                "FEATUREFLAG_BLOCKED",
                "MAINTENANCE_SUCCESS",
                "MAINTENANCE_FAILED",
                "DATASET_VERSION_PENDING",
                "DATASET_VERSION_IN_PROGRESS",
                "DATASET_VERSION_READY",
                "DATASET_VERSION_FAILURE",
                "DATASET_VERSION_UNEXPECTED_ERROR",
                "DATASET_VERSION_CONFLICT",
                "DATASET_INPUT_SUCCESS",
                "DATASET_INPUT_DUPLICATE",
                "DATASET_VERSION_EXPORT_SUCCESS",
                "DATASET_VERSION_EXPORT_PENDING",
                "DATASET_VERSION_EXPORT_FAILED",
                "DATASET_VERSION_EXPORT_IN_PROGRESS",
                "DATASET_VERSION_EXPORT_UNEXPECTED_ERROR",
                "JOB_QUEUED",
                "JOB_RUNNING",
                "JOB_COMPLETED",
                "JOB_FAILED",
                "JOB_CANCELLED",
                "JOB_UNEXPECTED_ERROR",
                "JOB_CONFLICT",
                "AUTH_MISSING_IDP_ASSOC",
                "LIST_OBJECTS_FAILED",
                "ARCHIVE_EXTRACT_FAILED",
                "UPLOAD_IN_PROGRESS",
                "UPLOAD_DONE",
                "UPLOAD_FAILED",
                "UPLOAD_UNEXPECTED_ERROR",
                "UPLOAD_EXPIRED",
                "UPLOAD_CANCELED",
                "UPLOAD_CONFLICT",
                "BILLING_INVALID_INFO",
                "INTERNAL_SERVER_ISSUE",
                "INTERNAL_FETCHING_ISSUE",
                "INTERNAL_DATABASE_ISSUE",
                "INTERNAL_CONTEXT_CANCELED",
                "INTERNAL_UNEXPECTED_TIMEOUT",
                "INTERNAL_UNEXPECTED_V1",
                "INTERNAL_UNEXPECTED_PANIC",
                "INTERNAL_UNEXPECTED_SPIRE",
                "INTERNAL_REDIS_UNAVAILABLE",
                "INTERNAL_RESOURCE_EXHAUSTED",
                "INTERNAL_REDIS_UNCATEGORIZED",
                "INTERNAL_AWS_UNCATEGORIZED",
                "INTERNAL_AZURE_UNCATEGORIZED",
                "CONN_UNCATEGORIZED",
                "MODEL_UNCATEGORIZED",
                "INPUT_UNCATEGORIZED",
                "ANNOTATION_UNCATEGORIZED",
                "BILLING_UNCATEGORIZED",
                "INTERNAL_UNCATEGORIZED",
                "BAD_REQUEST",
                "SERVER_ERROR"
              ],
              "default": "ZERO"
            }
          },
          {
            "name": "status.description",
            "description": "A short description of the error.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.details",
            "description": "More details of the given error.\nThese details may be exposed to non-technical users.\nFor technical details, try to use developer_notes field.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.stackTrace",
            "description": "For some environment we may return a stack trace to help debug\nany issues.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status.percentCompleted",
            "description": "specifically for long running jobs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status.timeRemaining",
            "description": "if status is pending, how much time is remaining (in seconds)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status.reqId",
            "description": "A request ID may be present, to help monitoring and tracking requests",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.internalDetails",
            "description": "Internal Annotation (do not set in production, for internal Clarifai use only).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.redirectInfo.url",
            "description": "New location for the resource. Used to set response Location header.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.redirectInfo.resourceType",
            "description": "Resource type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.redirectInfo.oldResourceId",
            "description": "Old resource id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.redirectInfo.newResourceId",
            "description": "New resource id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.developerNotes",
            "description": "Notes for developer.\nThese notes are rather technical details for developers how to interpret the status,\ne.g. why an error occurred and how to avoid getting the error.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/inputs?userAppId.userId=&userAppId.appId=&page=&perPage=&status.code=&status.description=&status.details=&status.stackTrace=&status.percentCompleted=&status.timeRemaining=&status.reqId=&status.internalDetails=&status.redirectInfo.url=&status.redirectInfo.resourceType=&status.redirectInfo.oldResourceId=&status.redirectInfo.newResourceId=&status.developerNotes=&ids=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs?userAppId.userId=&userAppId.appId=&page=&perPage=&status.code=&status.description=&status.details=&status.stackTrace=&status.percentCompleted=&status.timeRemaining=&status.reqId=&status.internalDetails=&status.redirectInfo.url=&status.redirectInfo.resourceType=&status.redirectInfo.oldResourceId=&status.redirectInfo.newResourceId=&status.developerNotes=&ids=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs?userAppId.userId=&userAppId.appId=&page=&perPage=&status.code=&status.description=&status.details=&status.stackTrace=&status.percentCompleted=&status.timeRemaining=&status.reqId=&status.internalDetails=&status.redirectInfo.url=&status.redirectInfo.resourceType=&status.redirectInfo.oldResourceId=&status.redirectInfo.newResourceId=&status.developerNotes=&ids=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete multiple inputs in one request.\nThis call is asynchronous.",
        "operationId": "V2_DeleteInputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteInputsRequest"
              }
            }
          },
          "description": "Request to delete several things by the list of ids.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/inputs' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Add 1 or more input to an app.\nThe actual inputs processing is asynchronous.",
        "operationId": "V2_PostInputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostInputsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/inputs' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"inputs\": [\n    null\n  ],\n  \"inputsAddJobId\": \"string\",\n  \"inputIdConflictResolution\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"inputs\": [\n    null\n  ],\n  \"inputsAddJobId\": \"string\",\n  \"inputIdConflictResolution\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"inputs\": [\n    null\n  ],\n  \"inputsAddJobId\": \"string\",\n  \"inputIdConflictResolution\": \"string\"\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more inputs.",
        "operationId": "V2_PatchInputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchInputsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/inputs' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"inputs\": [\n    null\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"inputs\": [\n    null\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"inputs\": [\n    null\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/annotations": {
      "delete": {
        "summary": "Delete multiple annotations in one request.",
        "operationId": "V2_DeleteAnnotations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/apiDeleteAnnotationsRequest"
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/inputs/annotations' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/annotations\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/annotations',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/data_sources": {
      "post": {
        "summary": "Initiates retrieval of inputs from cloud storage from a user provided data source.\nWill create and return an inputs-add-job for tracking progress.\nArchives will be extracted and their contents will be processed as inputs.",
        "description": "The cloud URL will be treated as a filter prefix. For example s3:/bucket/images_folder/abc will process\nfiles in the images_folder beginning with abc or in a subfolder beginning with abc.\nFor example:\nbucket/images_folder/abcImage.png\nbucket/images_folder/abc-1/Data.zip\n\nIf given URL is for a private bucket or file, then credentials should be provided to access the bucket.\nCredentials should include rights to list the objects in the bucket, except when pointed directly at a file archive,\nin which case it only requires rights to access that particular file.",
        "operationId": "V2_PostInputsDataSources2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostInputsDataSourcesRequest"
              }
            }
          },
          "description": "Initiates retrieval of inputs from cloud storage from a user provided data source.\nWill create and return an inputs-add-job for tracking progress.\nArchives will be extracted and their contents will be processed as inputs.\n\nThe cloud URL will be treated as a filter prefix. For example s3:/bucket/images_folder/abc will process\nfiles in the images_folder beginning with abc or in a subfolder beginning with abc.\nFor example:\nbucket/images_folder/abcImage.png\nbucket/images_folder/abc-1/Data.zip\n\nIf given URL is for a private bucket or file, then credentials should be provided to access the bucket.\nCredentials should include rights to list the objects in the bucket, except when pointed directly at a file archive,\nin which case it only requires rights to access that particular file.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/inputs/data_sources' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"dataSources\": [\n    {\n      \"inputsAddJobId\": \"string\",\n      \"url\": {\n        \"url\": \"string\",\n        \"credentials\": {\n          \"s3Creds\": {\n            \"region\": \"string\",\n            \"id\": \"string\",\n            \"secret\": \"string\",\n            \"token\": \"string\"\n          },\n          \"gcpCreds\": \"string\",\n          \"azureBlobCreds\": {\n            \"accountName\": \"string\",\n            \"accountKey\": \"string\"\n          }\n        }\n      },\n      \"inputIdConflictResolution\": \"string\"\n    }\n  ],\n  \"callBackUrl\": \"string\",\n  \"appPat\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"dataSources\": [\n    {\n      \"inputsAddJobId\": \"string\",\n      \"url\": {\n        \"url\": \"string\",\n        \"credentials\": {\n          \"s3Creds\": {\n            \"region\": \"string\",\n            \"id\": \"string\",\n            \"secret\": \"string\",\n            \"token\": \"string\"\n          },\n          \"gcpCreds\": \"string\",\n          \"azureBlobCreds\": {\n            \"accountName\": \"string\",\n            \"accountKey\": \"string\"\n          }\n        }\n      },\n      \"inputIdConflictResolution\": \"string\"\n    }\n  ],\n  \"callBackUrl\": \"string\",\n  \"appPat\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/data_sources\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"dataSources\": [\n    {\n      \"inputsAddJobId\": \"string\",\n      \"url\": {\n        \"url\": \"string\",\n        \"credentials\": {\n          \"s3Creds\": {\n            \"region\": \"string\",\n            \"id\": \"string\",\n            \"secret\": \"string\",\n            \"token\": \"string\"\n          },\n          \"gcpCreds\": \"string\",\n          \"azureBlobCreds\": {\n            \"accountName\": \"string\",\n            \"accountKey\": \"string\"\n          }\n        }\n      },\n      \"inputIdConflictResolution\": \"string\"\n    }\n  ],\n  \"callBackUrl\": \"string\",\n  \"appPat\": \"string\"\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/data_sources',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/jobs/add": {
      "get": {
        "summary": "List all the inputs add jobs",
        "operationId": "V2_ListInputsAddJobs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/inputs/jobs/add?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/jobs/add?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/jobs/add?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/jobs/add/{id}": {
      "get": {
        "summary": "Get the input add job details by ID",
        "operationId": "V2_GetInputsAddJob2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id of add inputs job",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --globoff 'https://api.clarifai.com/v2/inputs/jobs/add/{id}?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/jobs/add/{id}?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/jobs/add/{id}?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "cancel the input add job by ID",
        "operationId": "V2_CancelInputsAddJob2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id of add inputs job to be cancelled",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --globoff --request PATCH 'https://api.clarifai.com/v2/inputs/jobs/add/{id}' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  }\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  }\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/jobs/add/{id}\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  }\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/jobs/add/{id}',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/jobs/extraction": {
      "get": {
        "summary": "List all the input extraction jobs",
        "operationId": "V2_ListInputsExtractionJobs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsExtractionJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/inputs/jobs/extraction?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/jobs/extraction?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/jobs/extraction?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "operationId": "V2_CancelInputsExtractionJobs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsExtractionJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiCancelInputsExtractionJobsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/inputs/jobs/extraction' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/jobs/extraction\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/jobs/extraction',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/jobs/extraction/{inputsExtractionJobId}": {
      "get": {
        "summary": "Get the input extraction job details by ID",
        "operationId": "V2_GetInputsExtractionJob2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputsExtractionJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "inputsExtractionJobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/inputs/searches": {
      "post": {
        "summary": "Execute a search over inputs",
        "operationId": "V2_PostInputsSearches2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostInputsSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/inputs/searches' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  },\n  \"onlyCount\": true\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  },\n  \"onlyCount\": true\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/searches\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  },\n  \"onlyCount\": true\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/searches',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch saved inputs searches by ids.",
        "operationId": "V2_PatchInputsSearches2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchInputsSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/inputs/searches' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/searches\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/searches',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/status": {
      "get": {
        "summary": "Get input count per status.",
        "operationId": "V2_GetInputCount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputCountResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/inputs/status?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/status?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/status?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/stream": {
      "get": {
        "summary": "Streams all the inputs starting from oldest assets.",
        "operationId": "V2_StreamInputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 20.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderById",
            "description": "By default, the endpoint return inputs by the time when it is added.\nIf this is set to true, we will return inputs by id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "descending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/inputs/stream?userAppId.userId=&userAppId.appId=&perPage=&lastId=&orderById=&descending=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/stream?userAppId.userId=&userAppId.appId=&perPage=&lastId=&orderById=&descending=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/stream?userAppId.userId=&userAppId.appId=&perPage=&lastId=&orderById=&descending=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/uploads": {
      "post": {
        "summary": "Start uploading a file archive containing inputs.\nWill create and return an inputs-add-job for tracking progress.",
        "description": "Associated inputs-add-job contains an upload id which should be completed through `PutUploadContentParts` endpoint.\nCompleting the upload will automatically begin unpacking the archive and uploading the contents as inputs.",
        "operationId": "V2_PostInputsUploads2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostInputsUploadsRequest"
              }
            }
          },
          "description": "Start uploading a file archive containing inputs.\nWill create and return an inputs-add-job for tracking progress.\n\nAssociated inputs-add-job contains an upload id which should be completed through `PutUploadContentParts` endpoint.\nCompleting the upload will automatically begin unpacking the archive and uploading the contents as inputs.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/inputs/uploads' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"inputsUploads\": [\n    {\n      \"inputsAddJobId\": \"string\",\n      \"appPat\": \"string\",\n      \"upload\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"expiresAt\": \"string\",\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"contentName\": \"string\",\n        \"contentLength\": \"string\",\n        \"contentUrl\": \"string\"\n      },\n      \"inputIdConflictResolution\": \"string\"\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"inputsUploads\": [\n    {\n      \"inputsAddJobId\": \"string\",\n      \"appPat\": \"string\",\n      \"upload\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"expiresAt\": \"string\",\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"contentName\": \"string\",\n        \"contentLength\": \"string\",\n        \"contentUrl\": \"string\"\n      },\n      \"inputIdConflictResolution\": \"string\"\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/inputs/uploads\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"inputsUploads\": [\n    {\n      \"inputsAddJobId\": \"string\",\n      \"appPat\": \"string\",\n      \"upload\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"expiresAt\": \"string\",\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"contentName\": \"string\",\n        \"contentLength\": \"string\",\n        \"contentUrl\": \"string\"\n      },\n      \"inputIdConflictResolution\": \"string\"\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/inputs/uploads',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/inputs/{inputId}": {
      "get": {
        "summary": "Get a specific input from an app.",
        "operationId": "V2_GetInput2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single input asynchronously.",
        "operationId": "V2_DeleteInput2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/inputs/{inputId}/annotations/{annotationId}": {
      "get": {
        "summary": "Get a specific annotation from an app.",
        "operationId": "V2_GetAnnotation2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "annotationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single annotation.",
        "operationId": "V2_DeleteAnnotation2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "annotationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/inputs/{inputId}/video_manifest": {
      "get": {
        "summary": "Get a video input manifest.",
        "operationId": "V2_GetInputVideoManifest2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiGetVideoManifestResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/label_orders": {
      "get": {
        "summary": "List label orders.",
        "operationId": "V2_ListLabelOrders2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiLabelOrderResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/label_orders?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/label_orders?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/label_orders?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete multiple label orders in one request.\nthis do not change task status",
        "operationId": "V2_DeleteLabelOrders2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteLabelOrdersRequest"
              }
            }
          },
          "description": "Request to delete a list of label orders.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/label_orders' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/label_orders\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/label_orders',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Add Label orders.",
        "operationId": "V2_PostLabelOrders2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiLabelOrderResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostLabelOrdersRequest"
              }
            }
          },
          "description": "Request to create label orders.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/label_orders' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"labelOrders\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"autoRelease\": true,\n      \"allowEmptyTag\": true,\n      \"desiredFulfillTime\": \"string\",\n      \"estimateFulfillTime\": \"string\",\n      \"task\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"type\": \"string\",\n        \"description\": \"string\",\n        \"worker\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"partitionedStrategyInfo\": {\n            \"type\": \"string\",\n            \"workersPerInput\": 0,\n            \"weights\": {}\n          },\n          \"workers\": [\n            {\n              \"user\": {\n                \"id\": \"string\",\n                \"primaryEmail\": \"string\",\n                \"firstName\": \"string\",\n                \"lastName\": \"string\",\n                \"companyName\": \"string\",\n                \"jobTitle\": \"string\",\n                \"jobRole\": \"string\",\n                \"intention\": \"string\",\n                \"referralSource\": \"string\",\n                \"billType\": \"string\",\n                \"createdAt\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userDetail\": {\n                  \"primaryEmail\": \"string\",\n                  \"billType\": \"string\",\n                  \"dateGdprConsent\": \"string\",\n                  \"dateTosConsent\": \"string\",\n                  \"dateMarketingConsent\": \"string\",\n                  \"datePiiConsent\": \"string\",\n                  \"metadata\": {},\n                  \"emailAddresses\": [\n                    {\n                      \"email\": \"string\",\n                      \"primary\": true,\n                      \"verified\": true\n                    }\n                  ],\n                  \"twoFactorAuthEnabled\": true,\n                  \"teamsCount\": 0,\n                  \"country\": \"string\",\n                  \"state\": \"string\"\n                }\n              },\n              \"workflow\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"createdAt\": \"string\",\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"version\": {\n                  \"id\": \"string\",\n                  \"workflowId\": \"string\",\n                  \"createdAt\": \"string\",\n                  \"modifiedAt\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"nodes\": [\n                    {\n                      \"id\": \"string\",\n                      \"nodeInputs\": [\n                        {\n                          \"nodeId\": \"string\"\n                        }\n                      ],\n                      \"suppressOutput\": true,\n                      \"outputInfoOverride\": {\n                        \"outputConfig\": {\n                          \"conceptsMutuallyExclusive\": true,\n                          \"existingModelId\": \"string\",\n                          \"language\": \"string\",\n                          \"hyperParameters\": \"string\",\n                          \"maxConcepts\": 0,\n                          \"minValue\": null,\n                          \"selectConcepts\": [\n                            {\n                              \"id\": \"string\",\n                              \"name\": \"string\",\n                              \"value\": null,\n                              \"createdAt\": \"string\",\n                              \"language\": \"string\",\n                              \"appId\": \"string\",\n                              \"definition\": \"string\",\n                              \"vocabId\": \"string\",\n                              \"visibility\": {\n                                \"gettable\": \"string\"\n                              },\n                              \"userId\": \"string\",\n                              \"keypointInfo\": {\n                                \"keypointNames\": [\n                                  \"string\"\n                                ],\n                                \"skeleton\": [\n                                  {\n                                    \"k1\": 0,\n                                    \"k2\": 0\n                                  }\n                                ]\n                              },\n                              \"extraInfo\": {\n                                \"isRankable\": true\n                              }\n                            }\n                          ],\n                          \"trainingTimeout\": 0,\n                          \"sampleMs\": 0,\n                          \"hyperParams\": {},\n                          \"embedModelVersionId\": \"string\",\n                          \"failOnMissingPositiveExamples\": true,\n                          \"modelMetadata\": {}\n                        },\n                        \"message\": \"string\",\n                        \"fieldsMap\": {},\n                        \"params\": {},\n                        \"paramsSpecs\": [\n                          null\n                        ]\n                      }\n                    }\n                  ],\n                  \"metadata\": {},\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"description\": \"string\",\n                  \"license\": \"string\"\n                },\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"description\": \"string\",\n                \"notes\": \"string\",\n                \"useCases\": [\n                  \"string\"\n                ],\n                \"checkConsents\": [\n                  \"string\"\n                ],\n                \"bookmarkOrigin\": {\n                  \"id\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"resourceType\": \"string\"\n                },\n                \"image\": {\n                  \"url\": \"string\",\n                  \"base64\": \"string\",\n                  \"allowDuplicateUrl\": true,\n                  \"hosted\": {\n                    \"prefix\": \"string\",\n                    \"suffix\": \"string\",\n                    \"sizes\": [\n                      \"string\"\n                    ],\n                    \"crossorigin\": \"string\"\n                  },\n                  \"imageInfo\": {\n                    \"width\": 0,\n                    \"height\": 0,\n                    \"format\": \"string\",\n                    \"colorMode\": \"string\"\n                  }\n                }\n              }\n            }\n          ]\n        },\n        \"conceptIds\": [\n          \"string\"\n        ],\n        \"inputSource\": {\n          \"type\": \"string\",\n          \"id\": \"string\"\n        },\n        \"sampleMs\": 0,\n        \"aiAssistant\": {\n          \"workflowId\": \"string\"\n        },\n        \"review\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"manualStrategyInfo\": {\n            \"samplePercentage\": null\n          },\n          \"consensusStrategyInfo\": {\n            \"approvalThreshold\": 0\n          }\n        },\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"name\": \"string\",\n        \"aiAssistParams\": {\n          \"minThreshold\": null,\n          \"maxThreshold\": null,\n          \"conceptRelationIds\": [\n            \"string\"\n          ]\n        },\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"labelOrderId\": \"string\",\n        \"concepts\": [\n          {\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"autoAnnotationConfig\": {\n              \"annotationDataTypes\": 0,\n              \"thresholdRange\": {\n                \"isLowerInclusive\": true,\n                \"isUpperInclusive\": true,\n                \"lower\": null,\n                \"upper\": null\n              },\n              \"statusCode\": \"string\"\n            }\n          }\n        ],\n        \"deletePreviousAnnotations\": true,\n        \"metrics\": {\n          \"work\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"review\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"inputSource\": {\n            \"inputsCountEstimated\": \"string\"\n          }\n        }\n      },\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\"\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"labelOrders\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"autoRelease\": true,\n      \"allowEmptyTag\": true,\n      \"desiredFulfillTime\": \"string\",\n      \"estimateFulfillTime\": \"string\",\n      \"task\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"type\": \"string\",\n        \"description\": \"string\",\n        \"worker\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"partitionedStrategyInfo\": {\n            \"type\": \"string\",\n            \"workersPerInput\": 0,\n            \"weights\": {}\n          },\n          \"workers\": [\n            {\n              \"user\": {\n                \"id\": \"string\",\n                \"primaryEmail\": \"string\",\n                \"firstName\": \"string\",\n                \"lastName\": \"string\",\n                \"companyName\": \"string\",\n                \"jobTitle\": \"string\",\n                \"jobRole\": \"string\",\n                \"intention\": \"string\",\n                \"referralSource\": \"string\",\n                \"billType\": \"string\",\n                \"createdAt\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userDetail\": {\n                  \"primaryEmail\": \"string\",\n                  \"billType\": \"string\",\n                  \"dateGdprConsent\": \"string\",\n                  \"dateTosConsent\": \"string\",\n                  \"dateMarketingConsent\": \"string\",\n                  \"datePiiConsent\": \"string\",\n                  \"metadata\": {},\n                  \"emailAddresses\": [\n                    {\n                      \"email\": \"string\",\n                      \"primary\": true,\n                      \"verified\": true\n                    }\n                  ],\n                  \"twoFactorAuthEnabled\": true,\n                  \"teamsCount\": 0,\n                  \"country\": \"string\",\n                  \"state\": \"string\"\n                }\n              },\n              \"workflow\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"createdAt\": \"string\",\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"version\": {\n                  \"id\": \"string\",\n                  \"workflowId\": \"string\",\n                  \"createdAt\": \"string\",\n                  \"modifiedAt\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"nodes\": [\n                    {\n                      \"id\": \"string\",\n                      \"nodeInputs\": [\n                        {\n                          \"nodeId\": \"string\"\n                        }\n                      ],\n                      \"suppressOutput\": true,\n                      \"outputInfoOverride\": {\n                        \"outputConfig\": {\n                          \"conceptsMutuallyExclusive\": true,\n                          \"existingModelId\": \"string\",\n                          \"language\": \"string\",\n                          \"hyperParameters\": \"string\",\n                          \"maxConcepts\": 0,\n                          \"minValue\": null,\n                          \"selectConcepts\": [\n                            {\n                              \"id\": \"string\",\n                              \"name\": \"string\",\n                              \"value\": null,\n                              \"createdAt\": \"string\",\n                              \"language\": \"string\",\n                              \"appId\": \"string\",\n                              \"definition\": \"string\",\n                              \"vocabId\": \"string\",\n                              \"visibility\": {\n                                \"gettable\": \"string\"\n                              },\n                              \"userId\": \"string\",\n                              \"keypointInfo\": {\n                                \"keypointNames\": [\n                                  \"string\"\n                                ],\n                                \"skeleton\": [\n                                  {\n                                    \"k1\": 0,\n                                    \"k2\": 0\n                                  }\n                                ]\n                              },\n                              \"extraInfo\": {\n                                \"isRankable\": true\n                              }\n                            }\n                          ],\n                          \"trainingTimeout\": 0,\n                          \"sampleMs\": 0,\n                          \"hyperParams\": {},\n                          \"embedModelVersionId\": \"string\",\n                          \"failOnMissingPositiveExamples\": true,\n                          \"modelMetadata\": {}\n                        },\n                        \"message\": \"string\",\n                        \"fieldsMap\": {},\n                        \"params\": {},\n                        \"paramsSpecs\": [\n                          null\n                        ]\n                      }\n                    }\n                  ],\n                  \"metadata\": {},\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"description\": \"string\",\n                  \"license\": \"string\"\n                },\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"description\": \"string\",\n                \"notes\": \"string\",\n                \"useCases\": [\n                  \"string\"\n                ],\n                \"checkConsents\": [\n                  \"string\"\n                ],\n                \"bookmarkOrigin\": {\n                  \"id\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"resourceType\": \"string\"\n                },\n                \"image\": {\n                  \"url\": \"string\",\n                  \"base64\": \"string\",\n                  \"allowDuplicateUrl\": true,\n                  \"hosted\": {\n                    \"prefix\": \"string\",\n                    \"suffix\": \"string\",\n                    \"sizes\": [\n                      \"string\"\n                    ],\n                    \"crossorigin\": \"string\"\n                  },\n                  \"imageInfo\": {\n                    \"width\": 0,\n                    \"height\": 0,\n                    \"format\": \"string\",\n                    \"colorMode\": \"string\"\n                  }\n                }\n              }\n            }\n          ]\n        },\n        \"conceptIds\": [\n          \"string\"\n        ],\n        \"inputSource\": {\n          \"type\": \"string\",\n          \"id\": \"string\"\n        },\n        \"sampleMs\": 0,\n        \"aiAssistant\": {\n          \"workflowId\": \"string\"\n        },\n        \"review\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"manualStrategyInfo\": {\n            \"samplePercentage\": null\n          },\n          \"consensusStrategyInfo\": {\n            \"approvalThreshold\": 0\n          }\n        },\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"name\": \"string\",\n        \"aiAssistParams\": {\n          \"minThreshold\": null,\n          \"maxThreshold\": null,\n          \"conceptRelationIds\": [\n            \"string\"\n          ]\n        },\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"labelOrderId\": \"string\",\n        \"concepts\": [\n          {\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"autoAnnotationConfig\": {\n              \"annotationDataTypes\": 0,\n              \"thresholdRange\": {\n                \"isLowerInclusive\": true,\n                \"isUpperInclusive\": true,\n                \"lower\": null,\n                \"upper\": null\n              },\n              \"statusCode\": \"string\"\n            }\n          }\n        ],\n        \"deletePreviousAnnotations\": true,\n        \"metrics\": {\n          \"work\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"review\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"inputSource\": {\n            \"inputsCountEstimated\": \"string\"\n          }\n        }\n      },\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\"\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/label_orders\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"labelOrders\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"autoRelease\": true,\n      \"allowEmptyTag\": true,\n      \"desiredFulfillTime\": \"string\",\n      \"estimateFulfillTime\": \"string\",\n      \"task\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"type\": \"string\",\n        \"description\": \"string\",\n        \"worker\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"partitionedStrategyInfo\": {\n            \"type\": \"string\",\n            \"workersPerInput\": 0,\n            \"weights\": {}\n          },\n          \"workers\": [\n            {\n              \"user\": {\n                \"id\": \"string\",\n                \"primaryEmail\": \"string\",\n                \"firstName\": \"string\",\n                \"lastName\": \"string\",\n                \"companyName\": \"string\",\n                \"jobTitle\": \"string\",\n                \"jobRole\": \"string\",\n                \"intention\": \"string\",\n                \"referralSource\": \"string\",\n                \"billType\": \"string\",\n                \"createdAt\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userDetail\": {\n                  \"primaryEmail\": \"string\",\n                  \"billType\": \"string\",\n                  \"dateGdprConsent\": \"string\",\n                  \"dateTosConsent\": \"string\",\n                  \"dateMarketingConsent\": \"string\",\n                  \"datePiiConsent\": \"string\",\n                  \"metadata\": {},\n                  \"emailAddresses\": [\n                    {\n                      \"email\": \"string\",\n                      \"primary\": true,\n                      \"verified\": true\n                    }\n                  ],\n                  \"twoFactorAuthEnabled\": true,\n                  \"teamsCount\": 0,\n                  \"country\": \"string\",\n                  \"state\": \"string\"\n                }\n              },\n              \"workflow\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"createdAt\": \"string\",\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"version\": {\n                  \"id\": \"string\",\n                  \"workflowId\": \"string\",\n                  \"createdAt\": \"string\",\n                  \"modifiedAt\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"nodes\": [\n                    {\n                      \"id\": \"string\",\n                      \"nodeInputs\": [\n                        {\n                          \"nodeId\": \"string\"\n                        }\n                      ],\n                      \"suppressOutput\": true,\n                      \"outputInfoOverride\": {\n                        \"outputConfig\": {\n                          \"conceptsMutuallyExclusive\": true,\n                          \"existingModelId\": \"string\",\n                          \"language\": \"string\",\n                          \"hyperParameters\": \"string\",\n                          \"maxConcepts\": 0,\n                          \"minValue\": null,\n                          \"selectConcepts\": [\n                            {\n                              \"id\": \"string\",\n                              \"name\": \"string\",\n                              \"value\": null,\n                              \"createdAt\": \"string\",\n                              \"language\": \"string\",\n                              \"appId\": \"string\",\n                              \"definition\": \"string\",\n                              \"vocabId\": \"string\",\n                              \"visibility\": {\n                                \"gettable\": \"string\"\n                              },\n                              \"userId\": \"string\",\n                              \"keypointInfo\": {\n                                \"keypointNames\": [\n                                  \"string\"\n                                ],\n                                \"skeleton\": [\n                                  {\n                                    \"k1\": 0,\n                                    \"k2\": 0\n                                  }\n                                ]\n                              },\n                              \"extraInfo\": {\n                                \"isRankable\": true\n                              }\n                            }\n                          ],\n                          \"trainingTimeout\": 0,\n                          \"sampleMs\": 0,\n                          \"hyperParams\": {},\n                          \"embedModelVersionId\": \"string\",\n                          \"failOnMissingPositiveExamples\": true,\n                          \"modelMetadata\": {}\n                        },\n                        \"message\": \"string\",\n                        \"fieldsMap\": {},\n                        \"params\": {},\n                        \"paramsSpecs\": [\n                          null\n                        ]\n                      }\n                    }\n                  ],\n                  \"metadata\": {},\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"description\": \"string\",\n                  \"license\": \"string\"\n                },\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"description\": \"string\",\n                \"notes\": \"string\",\n                \"useCases\": [\n                  \"string\"\n                ],\n                \"checkConsents\": [\n                  \"string\"\n                ],\n                \"bookmarkOrigin\": {\n                  \"id\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"resourceType\": \"string\"\n                },\n                \"image\": {\n                  \"url\": \"string\",\n                  \"base64\": \"string\",\n                  \"allowDuplicateUrl\": true,\n                  \"hosted\": {\n                    \"prefix\": \"string\",\n                    \"suffix\": \"string\",\n                    \"sizes\": [\n                      \"string\"\n                    ],\n                    \"crossorigin\": \"string\"\n                  },\n                  \"imageInfo\": {\n                    \"width\": 0,\n                    \"height\": 0,\n                    \"format\": \"string\",\n                    \"colorMode\": \"string\"\n                  }\n                }\n              }\n            }\n          ]\n        },\n        \"conceptIds\": [\n          \"string\"\n        ],\n        \"inputSource\": {\n          \"type\": \"string\",\n          \"id\": \"string\"\n        },\n        \"sampleMs\": 0,\n        \"aiAssistant\": {\n          \"workflowId\": \"string\"\n        },\n        \"review\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"manualStrategyInfo\": {\n            \"samplePercentage\": null\n          },\n          \"consensusStrategyInfo\": {\n            \"approvalThreshold\": 0\n          }\n        },\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"name\": \"string\",\n        \"aiAssistParams\": {\n          \"minThreshold\": null,\n          \"maxThreshold\": null,\n          \"conceptRelationIds\": [\n            \"string\"\n          ]\n        },\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"labelOrderId\": \"string\",\n        \"concepts\": [\n          {\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"autoAnnotationConfig\": {\n              \"annotationDataTypes\": 0,\n              \"thresholdRange\": {\n                \"isLowerInclusive\": true,\n                \"isUpperInclusive\": true,\n                \"lower\": null,\n                \"upper\": null\n              },\n              \"statusCode\": \"string\"\n            }\n          }\n        ],\n        \"deletePreviousAnnotations\": true,\n        \"metrics\": {\n          \"work\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"review\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"inputSource\": {\n            \"inputsCountEstimated\": \"string\"\n          }\n        }\n      },\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\"\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/label_orders',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more label orders.",
        "operationId": "V2_PatchLabelOrders2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiLabelOrderResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchLabelOrdersRequest"
              }
            }
          },
          "description": "Request to patch a list of label orders.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/label_orders' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"labelOrders\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"autoRelease\": true,\n      \"allowEmptyTag\": true,\n      \"desiredFulfillTime\": \"string\",\n      \"estimateFulfillTime\": \"string\",\n      \"task\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"type\": \"string\",\n        \"description\": \"string\",\n        \"worker\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"partitionedStrategyInfo\": {\n            \"type\": \"string\",\n            \"workersPerInput\": 0,\n            \"weights\": {}\n          },\n          \"workers\": [\n            {\n              \"user\": {\n                \"id\": \"string\",\n                \"primaryEmail\": \"string\",\n                \"firstName\": \"string\",\n                \"lastName\": \"string\",\n                \"companyName\": \"string\",\n                \"jobTitle\": \"string\",\n                \"jobRole\": \"string\",\n                \"intention\": \"string\",\n                \"referralSource\": \"string\",\n                \"billType\": \"string\",\n                \"createdAt\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userDetail\": {\n                  \"primaryEmail\": \"string\",\n                  \"billType\": \"string\",\n                  \"dateGdprConsent\": \"string\",\n                  \"dateTosConsent\": \"string\",\n                  \"dateMarketingConsent\": \"string\",\n                  \"datePiiConsent\": \"string\",\n                  \"metadata\": {},\n                  \"emailAddresses\": [\n                    {\n                      \"email\": \"string\",\n                      \"primary\": true,\n                      \"verified\": true\n                    }\n                  ],\n                  \"twoFactorAuthEnabled\": true,\n                  \"teamsCount\": 0,\n                  \"country\": \"string\",\n                  \"state\": \"string\"\n                }\n              },\n              \"workflow\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"createdAt\": \"string\",\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"version\": {\n                  \"id\": \"string\",\n                  \"workflowId\": \"string\",\n                  \"createdAt\": \"string\",\n                  \"modifiedAt\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"nodes\": [\n                    {\n                      \"id\": \"string\",\n                      \"nodeInputs\": [\n                        {\n                          \"nodeId\": \"string\"\n                        }\n                      ],\n                      \"suppressOutput\": true,\n                      \"outputInfoOverride\": {\n                        \"outputConfig\": {\n                          \"conceptsMutuallyExclusive\": true,\n                          \"existingModelId\": \"string\",\n                          \"language\": \"string\",\n                          \"hyperParameters\": \"string\",\n                          \"maxConcepts\": 0,\n                          \"minValue\": null,\n                          \"selectConcepts\": [\n                            {\n                              \"id\": \"string\",\n                              \"name\": \"string\",\n                              \"value\": null,\n                              \"createdAt\": \"string\",\n                              \"language\": \"string\",\n                              \"appId\": \"string\",\n                              \"definition\": \"string\",\n                              \"vocabId\": \"string\",\n                              \"visibility\": {\n                                \"gettable\": \"string\"\n                              },\n                              \"userId\": \"string\",\n                              \"keypointInfo\": {\n                                \"keypointNames\": [\n                                  \"string\"\n                                ],\n                                \"skeleton\": [\n                                  {\n                                    \"k1\": 0,\n                                    \"k2\": 0\n                                  }\n                                ]\n                              },\n                              \"extraInfo\": {\n                                \"isRankable\": true\n                              }\n                            }\n                          ],\n                          \"trainingTimeout\": 0,\n                          \"sampleMs\": 0,\n                          \"hyperParams\": {},\n                          \"embedModelVersionId\": \"string\",\n                          \"failOnMissingPositiveExamples\": true,\n                          \"modelMetadata\": {}\n                        },\n                        \"message\": \"string\",\n                        \"fieldsMap\": {},\n                        \"params\": {},\n                        \"paramsSpecs\": [\n                          null\n                        ]\n                      }\n                    }\n                  ],\n                  \"metadata\": {},\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"description\": \"string\",\n                  \"license\": \"string\"\n                },\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"description\": \"string\",\n                \"notes\": \"string\",\n                \"useCases\": [\n                  \"string\"\n                ],\n                \"checkConsents\": [\n                  \"string\"\n                ],\n                \"bookmarkOrigin\": {\n                  \"id\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"resourceType\": \"string\"\n                },\n                \"image\": {\n                  \"url\": \"string\",\n                  \"base64\": \"string\",\n                  \"allowDuplicateUrl\": true,\n                  \"hosted\": {\n                    \"prefix\": \"string\",\n                    \"suffix\": \"string\",\n                    \"sizes\": [\n                      \"string\"\n                    ],\n                    \"crossorigin\": \"string\"\n                  },\n                  \"imageInfo\": {\n                    \"width\": 0,\n                    \"height\": 0,\n                    \"format\": \"string\",\n                    \"colorMode\": \"string\"\n                  }\n                }\n              }\n            }\n          ]\n        },\n        \"conceptIds\": [\n          \"string\"\n        ],\n        \"inputSource\": {\n          \"type\": \"string\",\n          \"id\": \"string\"\n        },\n        \"sampleMs\": 0,\n        \"aiAssistant\": {\n          \"workflowId\": \"string\"\n        },\n        \"review\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"manualStrategyInfo\": {\n            \"samplePercentage\": null\n          },\n          \"consensusStrategyInfo\": {\n            \"approvalThreshold\": 0\n          }\n        },\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"name\": \"string\",\n        \"aiAssistParams\": {\n          \"minThreshold\": null,\n          \"maxThreshold\": null,\n          \"conceptRelationIds\": [\n            \"string\"\n          ]\n        },\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"labelOrderId\": \"string\",\n        \"concepts\": [\n          {\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"autoAnnotationConfig\": {\n              \"annotationDataTypes\": 0,\n              \"thresholdRange\": {\n                \"isLowerInclusive\": true,\n                \"isUpperInclusive\": true,\n                \"lower\": null,\n                \"upper\": null\n              },\n              \"statusCode\": \"string\"\n            }\n          }\n        ],\n        \"deletePreviousAnnotations\": true,\n        \"metrics\": {\n          \"work\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"review\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"inputSource\": {\n            \"inputsCountEstimated\": \"string\"\n          }\n        }\n      },\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"labelOrders\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"autoRelease\": true,\n      \"allowEmptyTag\": true,\n      \"desiredFulfillTime\": \"string\",\n      \"estimateFulfillTime\": \"string\",\n      \"task\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"type\": \"string\",\n        \"description\": \"string\",\n        \"worker\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"partitionedStrategyInfo\": {\n            \"type\": \"string\",\n            \"workersPerInput\": 0,\n            \"weights\": {}\n          },\n          \"workers\": [\n            {\n              \"user\": {\n                \"id\": \"string\",\n                \"primaryEmail\": \"string\",\n                \"firstName\": \"string\",\n                \"lastName\": \"string\",\n                \"companyName\": \"string\",\n                \"jobTitle\": \"string\",\n                \"jobRole\": \"string\",\n                \"intention\": \"string\",\n                \"referralSource\": \"string\",\n                \"billType\": \"string\",\n                \"createdAt\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userDetail\": {\n                  \"primaryEmail\": \"string\",\n                  \"billType\": \"string\",\n                  \"dateGdprConsent\": \"string\",\n                  \"dateTosConsent\": \"string\",\n                  \"dateMarketingConsent\": \"string\",\n                  \"datePiiConsent\": \"string\",\n                  \"metadata\": {},\n                  \"emailAddresses\": [\n                    {\n                      \"email\": \"string\",\n                      \"primary\": true,\n                      \"verified\": true\n                    }\n                  ],\n                  \"twoFactorAuthEnabled\": true,\n                  \"teamsCount\": 0,\n                  \"country\": \"string\",\n                  \"state\": \"string\"\n                }\n              },\n              \"workflow\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"createdAt\": \"string\",\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"version\": {\n                  \"id\": \"string\",\n                  \"workflowId\": \"string\",\n                  \"createdAt\": \"string\",\n                  \"modifiedAt\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"nodes\": [\n                    {\n                      \"id\": \"string\",\n                      \"nodeInputs\": [\n                        {\n                          \"nodeId\": \"string\"\n                        }\n                      ],\n                      \"suppressOutput\": true,\n                      \"outputInfoOverride\": {\n                        \"outputConfig\": {\n                          \"conceptsMutuallyExclusive\": true,\n                          \"existingModelId\": \"string\",\n                          \"language\": \"string\",\n                          \"hyperParameters\": \"string\",\n                          \"maxConcepts\": 0,\n                          \"minValue\": null,\n                          \"selectConcepts\": [\n                            {\n                              \"id\": \"string\",\n                              \"name\": \"string\",\n                              \"value\": null,\n                              \"createdAt\": \"string\",\n                              \"language\": \"string\",\n                              \"appId\": \"string\",\n                              \"definition\": \"string\",\n                              \"vocabId\": \"string\",\n                              \"visibility\": {\n                                \"gettable\": \"string\"\n                              },\n                              \"userId\": \"string\",\n                              \"keypointInfo\": {\n                                \"keypointNames\": [\n                                  \"string\"\n                                ],\n                                \"skeleton\": [\n                                  {\n                                    \"k1\": 0,\n                                    \"k2\": 0\n                                  }\n                                ]\n                              },\n                              \"extraInfo\": {\n                                \"isRankable\": true\n                              }\n                            }\n                          ],\n                          \"trainingTimeout\": 0,\n                          \"sampleMs\": 0,\n                          \"hyperParams\": {},\n                          \"embedModelVersionId\": \"string\",\n                          \"failOnMissingPositiveExamples\": true,\n                          \"modelMetadata\": {}\n                        },\n                        \"message\": \"string\",\n                        \"fieldsMap\": {},\n                        \"params\": {},\n                        \"paramsSpecs\": [\n                          null\n                        ]\n                      }\n                    }\n                  ],\n                  \"metadata\": {},\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"description\": \"string\",\n                  \"license\": \"string\"\n                },\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"description\": \"string\",\n                \"notes\": \"string\",\n                \"useCases\": [\n                  \"string\"\n                ],\n                \"checkConsents\": [\n                  \"string\"\n                ],\n                \"bookmarkOrigin\": {\n                  \"id\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"resourceType\": \"string\"\n                },\n                \"image\": {\n                  \"url\": \"string\",\n                  \"base64\": \"string\",\n                  \"allowDuplicateUrl\": true,\n                  \"hosted\": {\n                    \"prefix\": \"string\",\n                    \"suffix\": \"string\",\n                    \"sizes\": [\n                      \"string\"\n                    ],\n                    \"crossorigin\": \"string\"\n                  },\n                  \"imageInfo\": {\n                    \"width\": 0,\n                    \"height\": 0,\n                    \"format\": \"string\",\n                    \"colorMode\": \"string\"\n                  }\n                }\n              }\n            }\n          ]\n        },\n        \"conceptIds\": [\n          \"string\"\n        ],\n        \"inputSource\": {\n          \"type\": \"string\",\n          \"id\": \"string\"\n        },\n        \"sampleMs\": 0,\n        \"aiAssistant\": {\n          \"workflowId\": \"string\"\n        },\n        \"review\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"manualStrategyInfo\": {\n            \"samplePercentage\": null\n          },\n          \"consensusStrategyInfo\": {\n            \"approvalThreshold\": 0\n          }\n        },\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"name\": \"string\",\n        \"aiAssistParams\": {\n          \"minThreshold\": null,\n          \"maxThreshold\": null,\n          \"conceptRelationIds\": [\n            \"string\"\n          ]\n        },\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"labelOrderId\": \"string\",\n        \"concepts\": [\n          {\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"autoAnnotationConfig\": {\n              \"annotationDataTypes\": 0,\n              \"thresholdRange\": {\n                \"isLowerInclusive\": true,\n                \"isUpperInclusive\": true,\n                \"lower\": null,\n                \"upper\": null\n              },\n              \"statusCode\": \"string\"\n            }\n          }\n        ],\n        \"deletePreviousAnnotations\": true,\n        \"metrics\": {\n          \"work\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"review\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"inputSource\": {\n            \"inputsCountEstimated\": \"string\"\n          }\n        }\n      },\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/label_orders\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"labelOrders\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"autoRelease\": true,\n      \"allowEmptyTag\": true,\n      \"desiredFulfillTime\": \"string\",\n      \"estimateFulfillTime\": \"string\",\n      \"task\": {\n        \"id\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"type\": \"string\",\n        \"description\": \"string\",\n        \"worker\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"partitionedStrategyInfo\": {\n            \"type\": \"string\",\n            \"workersPerInput\": 0,\n            \"weights\": {}\n          },\n          \"workers\": [\n            {\n              \"user\": {\n                \"id\": \"string\",\n                \"primaryEmail\": \"string\",\n                \"firstName\": \"string\",\n                \"lastName\": \"string\",\n                \"companyName\": \"string\",\n                \"jobTitle\": \"string\",\n                \"jobRole\": \"string\",\n                \"intention\": \"string\",\n                \"referralSource\": \"string\",\n                \"billType\": \"string\",\n                \"createdAt\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userDetail\": {\n                  \"primaryEmail\": \"string\",\n                  \"billType\": \"string\",\n                  \"dateGdprConsent\": \"string\",\n                  \"dateTosConsent\": \"string\",\n                  \"dateMarketingConsent\": \"string\",\n                  \"datePiiConsent\": \"string\",\n                  \"metadata\": {},\n                  \"emailAddresses\": [\n                    {\n                      \"email\": \"string\",\n                      \"primary\": true,\n                      \"verified\": true\n                    }\n                  ],\n                  \"twoFactorAuthEnabled\": true,\n                  \"teamsCount\": 0,\n                  \"country\": \"string\",\n                  \"state\": \"string\"\n                }\n              },\n              \"workflow\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"createdAt\": \"string\",\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"version\": {\n                  \"id\": \"string\",\n                  \"workflowId\": \"string\",\n                  \"createdAt\": \"string\",\n                  \"modifiedAt\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"nodes\": [\n                    {\n                      \"id\": \"string\",\n                      \"nodeInputs\": [\n                        {\n                          \"nodeId\": \"string\"\n                        }\n                      ],\n                      \"suppressOutput\": true,\n                      \"outputInfoOverride\": {\n                        \"outputConfig\": {\n                          \"conceptsMutuallyExclusive\": true,\n                          \"existingModelId\": \"string\",\n                          \"language\": \"string\",\n                          \"hyperParameters\": \"string\",\n                          \"maxConcepts\": 0,\n                          \"minValue\": null,\n                          \"selectConcepts\": [\n                            {\n                              \"id\": \"string\",\n                              \"name\": \"string\",\n                              \"value\": null,\n                              \"createdAt\": \"string\",\n                              \"language\": \"string\",\n                              \"appId\": \"string\",\n                              \"definition\": \"string\",\n                              \"vocabId\": \"string\",\n                              \"visibility\": {\n                                \"gettable\": \"string\"\n                              },\n                              \"userId\": \"string\",\n                              \"keypointInfo\": {\n                                \"keypointNames\": [\n                                  \"string\"\n                                ],\n                                \"skeleton\": [\n                                  {\n                                    \"k1\": 0,\n                                    \"k2\": 0\n                                  }\n                                ]\n                              },\n                              \"extraInfo\": {\n                                \"isRankable\": true\n                              }\n                            }\n                          ],\n                          \"trainingTimeout\": 0,\n                          \"sampleMs\": 0,\n                          \"hyperParams\": {},\n                          \"embedModelVersionId\": \"string\",\n                          \"failOnMissingPositiveExamples\": true,\n                          \"modelMetadata\": {}\n                        },\n                        \"message\": \"string\",\n                        \"fieldsMap\": {},\n                        \"params\": {},\n                        \"paramsSpecs\": [\n                          null\n                        ]\n                      }\n                    }\n                  ],\n                  \"metadata\": {},\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"description\": \"string\",\n                  \"license\": \"string\"\n                },\n                \"isStarred\": true,\n                \"starCount\": 0,\n                \"description\": \"string\",\n                \"notes\": \"string\",\n                \"useCases\": [\n                  \"string\"\n                ],\n                \"checkConsents\": [\n                  \"string\"\n                ],\n                \"bookmarkOrigin\": {\n                  \"id\": \"string\",\n                  \"appId\": \"string\",\n                  \"userId\": \"string\",\n                  \"resourceType\": \"string\"\n                },\n                \"image\": {\n                  \"url\": \"string\",\n                  \"base64\": \"string\",\n                  \"allowDuplicateUrl\": true,\n                  \"hosted\": {\n                    \"prefix\": \"string\",\n                    \"suffix\": \"string\",\n                    \"sizes\": [\n                      \"string\"\n                    ],\n                    \"crossorigin\": \"string\"\n                  },\n                  \"imageInfo\": {\n                    \"width\": 0,\n                    \"height\": 0,\n                    \"format\": \"string\",\n                    \"colorMode\": \"string\"\n                  }\n                }\n              }\n            }\n          ]\n        },\n        \"conceptIds\": [\n          \"string\"\n        ],\n        \"inputSource\": {\n          \"type\": \"string\",\n          \"id\": \"string\"\n        },\n        \"sampleMs\": 0,\n        \"aiAssistant\": {\n          \"workflowId\": \"string\"\n        },\n        \"review\": {\n          \"strategy\": \"string\",\n          \"userIds\": [\n            \"string\"\n          ],\n          \"users\": [\n            {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            }\n          ],\n          \"manualStrategyInfo\": {\n            \"samplePercentage\": null\n          },\n          \"consensusStrategyInfo\": {\n            \"approvalThreshold\": 0\n          }\n        },\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"name\": \"string\",\n        \"aiAssistParams\": {\n          \"minThreshold\": null,\n          \"maxThreshold\": null,\n          \"conceptRelationIds\": [\n            \"string\"\n          ]\n        },\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"labelOrderId\": \"string\",\n        \"concepts\": [\n          {\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"autoAnnotationConfig\": {\n              \"annotationDataTypes\": 0,\n              \"thresholdRange\": {\n                \"isLowerInclusive\": true,\n                \"isUpperInclusive\": true,\n                \"lower\": null,\n                \"upper\": null\n              },\n              \"statusCode\": \"string\"\n            }\n          }\n        ],\n        \"deletePreviousAnnotations\": true,\n        \"metrics\": {\n          \"work\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"review\": {\n            \"inputsCountEstimated\": \"string\",\n            \"inputsPercentEstimated\": 0\n          },\n          \"inputSource\": {\n            \"inputsCountEstimated\": \"string\"\n          }\n        }\n      },\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/label_orders',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/label_orders/{labelOrderId}": {
      "get": {
        "summary": "Get a label order.",
        "operationId": "V2_GetLabelOrder2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleLabelOrderResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "labelOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models": {
      "get": {
        "summary": "List all the models.",
        "operationId": "V2_ListModels3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByName",
            "description": "Whether to order by the name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByNumInputs",
            "description": "Whether to order by the number of training inputs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "Whether to order by the modified_at time of the latest model version.\nIf none of the sort options is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by count of stars",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "modelTypeId",
            "description": "Filtering options:\nFilter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's\nsupported.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainedOnly",
            "description": "If true, we only return models that have the status MODEL_TRAINED, which includes non-trainable model types.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inputFields",
            "description": "The list of input fields to the model.\nFor example, you can specify 'image', which will return models that make inferences on images like visual-classifier models.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "outputFields",
            "description": "The list of output fields to the model.\nFor example, you can specify 'regions[...].data.concepts', which will return visual-detector models.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "license",
            "description": "Filter by the license of the model version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "featuredOnly",
            "description": "If true, we only return models that are handpicked by clarifai staff",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "If true, we only return models that are starred by the requesting user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "toolkits",
            "description": "List of toolkit tags to filter by",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "useCases",
            "description": "List of use_case tags to filter by",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "description": "List of language tags to filter by",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dontFetchFromMain",
            "description": "Old API behavior resulted in returning clarifai main models when calling ListModels while scoped to an app. While we transition\naway from that, we can use this flag to not always fetch clarifai main models, unless that is the app we are explicitly listing for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter models by bookmark. If set, only return bookmarked models. Otherwise none bookmarked models only.\nNote: you can not filter `trained_only` and bookmark at the same time.\nWhen filter by bookmark, we will return trained and untrained models.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the model:\n  - id\n  - name\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Query name, description and id fields, that can contain the words in the query string. Does NOT support wildcards - full words only. Supports operators \"OR\" and \"-\" as NOT.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Filter by the description and id of the model. This supports wildcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterByUserId",
            "description": "Extends the name filter to include the user_id of the application owner that the model belongs to.\nDeprecated: use search instead of name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/models?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByName=&sortByNumInputs=&sortByModifiedAt=&sortByCreatedAt=&sortByStarCount=&modelTypeId=&trainedOnly=&inputFields=&outputFields=&license=&featuredOnly=&starredOnly=&toolkits=&useCases=&languages=&dontFetchFromMain=&bookmark=&search=&query=&name=&filterByUserId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/models?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByName=&sortByNumInputs=&sortByModifiedAt=&sortByCreatedAt=&sortByStarCount=&modelTypeId=&trainedOnly=&inputFields=&outputFields=&license=&featuredOnly=&starredOnly=&toolkits=&useCases=&languages=&dontFetchFromMain=&bookmark=&search=&query=&name=&filterByUserId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/models?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByName=&sortByNumInputs=&sortByModifiedAt=&sortByCreatedAt=&sortByStarCount=&modelTypeId=&trainedOnly=&inputFields=&outputFields=&license=&featuredOnly=&starredOnly=&toolkits=&useCases=&languages=&dontFetchFromMain=&bookmark=&search=&query=&name=&filterByUserId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete multiple models in one request.",
        "operationId": "V2_DeleteModels2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteModelsRequest"
              }
            }
          },
          "description": "Request to delete several things by the list of ids.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/models' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ],\n  \"deleteAll\": true\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ],\n  \"deleteAll\": true\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/models\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ],\n  \"deleteAll\": true\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/models',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Add a models to an app.",
        "operationId": "V2_PostModels2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostModelsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/models' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"models\": [\n    null\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"models\": [\n    null\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/models\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"models\": [\n    null\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/models',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more models.",
        "operationId": "V2_PatchModels2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchModelsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/models' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"models\": [\n    null\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"models\": [\n    null\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/models\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"models\": [\n    null\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/models',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/models/outputs/stream": {
      "post": {
        "summary": "Stream of requests and stream of responses",
        "operationId": "V2_StreamModelOutputs",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiMultiOutputResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  },
                  "title": "Stream result of apiMultiOutputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostModelOutputsRequest"
              }
            }
          },
          "description": "//////////////////////////////////////////////////\nModel prediction related stuff needs inputs and produces outputs.\n//////////////////////////////////////////////////\nModel prediction. (streaming inputs)",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/models/outputs/stream' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"modelId\": \"string\",\n  \"versionId\": \"string\",\n  \"inputs\": [\n    null\n  ],\n  \"runnerSelector\": {\n    \"nodepool\": {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"userId\": \"string\",\n      \"computeCluster\": {\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"cloudProvider\": {\n          \"id\": \"string\",\n          \"name\": \"string\"\n        },\n        \"region\": \"string\",\n        \"userId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\"\n      },\n      \"nodeCapacityType\": {\n        \"capacityTypes\": [\n          \"string\"\n        ]\n      },\n      \"instanceTypes\": [\n        {\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"computeInfo\": {\n            \"numCpus\": 0,\n            \"cpuMemory\": \"string\",\n            \"numAccelerators\": 0,\n            \"acceleratorMemory\": \"string\",\n            \"acceleratorType\": [\n              \"string\"\n            ]\n          }\n        }\n      ],\n      \"minInstances\": 0,\n      \"maxInstances\": 0,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metadata\": {}\n    },\n    \"runner\": {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"metadata\": {},\n      \"userId\": \"string\",\n      \"labels\": [\n        \"string\"\n      ],\n      \"worker\": {\n        \"user\": {\n          \"id\": \"string\",\n          \"primaryEmail\": \"string\",\n          \"firstName\": \"string\",\n          \"lastName\": \"string\",\n          \"companyName\": \"string\",\n          \"jobTitle\": \"string\",\n          \"jobRole\": \"string\",\n          \"intention\": \"string\",\n          \"referralSource\": \"string\",\n          \"billType\": \"string\",\n          \"createdAt\": \"string\",\n          \"dateGdprConsent\": \"string\",\n          \"dateTosConsent\": \"string\",\n          \"dateMarketingConsent\": \"string\",\n          \"datePiiConsent\": \"string\",\n          \"metadata\": {},\n          \"emailAddresses\": [\n            {\n              \"email\": \"string\",\n              \"primary\": true,\n              \"verified\": true\n            }\n          ],\n          \"twoFactorAuthEnabled\": true,\n          \"teamsCount\": 0,\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"userDetail\": {\n            \"primaryEmail\": \"string\",\n            \"billType\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"country\": \"string\",\n            \"state\": \"string\"\n          }\n        },\n        \"workflow\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"createdAt\": \"string\",\n          \"nodes\": [\n            {\n              \"id\": \"string\",\n              \"nodeInputs\": [\n                {\n                  \"nodeId\": \"string\"\n                }\n              ],\n              \"suppressOutput\": true,\n              \"outputInfoOverride\": {\n                \"outputConfig\": {\n                  \"conceptsMutuallyExclusive\": true,\n                  \"existingModelId\": \"string\",\n                  \"language\": \"string\",\n                  \"hyperParameters\": \"string\",\n                  \"maxConcepts\": 0,\n                  \"minValue\": null,\n                  \"selectConcepts\": [\n                    {\n                      \"id\": \"string\",\n                      \"name\": \"string\",\n                      \"value\": null,\n                      \"createdAt\": \"string\",\n                      \"language\": \"string\",\n                      \"appId\": \"string\",\n                      \"definition\": \"string\",\n                      \"vocabId\": \"string\",\n                      \"visibility\": {\n                        \"gettable\": \"string\"\n                      },\n                      \"userId\": \"string\",\n                      \"keypointInfo\": {\n                        \"keypointNames\": [\n                          \"string\"\n                        ],\n                        \"skeleton\": [\n                          {\n                            \"k1\": 0,\n                            \"k2\": 0\n                          }\n                        ]\n                      },\n                      \"extraInfo\": {\n                        \"isRankable\": true\n                      }\n                    }\n                  ],\n                  \"trainingTimeout\": 0,\n                  \"sampleMs\": 0,\n                  \"hyperParams\": {},\n                  \"embedModelVersionId\": \"string\",\n                  \"failOnMissingPositiveExamples\": true,\n                  \"modelMetadata\": {}\n                },\n                \"message\": \"string\",\n                \"fieldsMap\": {},\n                \"params\": {},\n                \"paramsSpecs\": [\n                  null\n                ]\n              }\n            }\n          ],\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"userId\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"workflowId\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"nodes\": [\n              {\n                \"id\": \"string\",\n                \"nodeInputs\": [\n                  {\n                    \"nodeId\": \"string\"\n                  }\n                ],\n                \"suppressOutput\": true,\n                \"outputInfoOverride\": {\n                  \"outputConfig\": {\n                    \"conceptsMutuallyExclusive\": true,\n                    \"existingModelId\": \"string\",\n                    \"language\": \"string\",\n                    \"hyperParameters\": \"string\",\n                    \"maxConcepts\": 0,\n                    \"minValue\": null,\n                    \"selectConcepts\": [\n                      {\n                        \"id\": \"string\",\n                        \"name\": \"string\",\n                        \"value\": null,\n                        \"createdAt\": \"string\",\n                        \"language\": \"string\",\n                        \"appId\": \"string\",\n                        \"definition\": \"string\",\n                        \"vocabId\": \"string\",\n                        \"visibility\": {\n                          \"gettable\": \"string\"\n                        },\n                        \"userId\": \"string\",\n                        \"keypointInfo\": {\n                          \"keypointNames\": [\n                            \"string\"\n                          ],\n                          \"skeleton\": [\n                            {\n                              \"k1\": 0,\n                              \"k2\": 0\n                            }\n                          ]\n                        },\n                        \"extraInfo\": {\n                          \"isRankable\": true\n                        }\n                      }\n                    ],\n                    \"trainingTimeout\": 0,\n                    \"sampleMs\": 0,\n                    \"hyperParams\": {},\n                    \"embedModelVersionId\": \"string\",\n                    \"failOnMissingPositiveExamples\": true,\n                    \"modelMetadata\": {}\n                  },\n                  \"message\": \"string\",\n                  \"fieldsMap\": {},\n                  \"params\": {},\n                  \"paramsSpecs\": [\n                    null\n                  ]\n                }\n              }\n            ],\n            \"metadata\": {},\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"description\": \"string\",\n            \"license\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"description\": \"string\",\n          \"notes\": \"string\",\n          \"useCases\": [\n            \"string\"\n          ],\n          \"checkConsents\": [\n            \"string\"\n          ],\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        }\n      },\n      \"nodepool\": {\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"userId\": \"string\",\n        \"computeCluster\": {\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"cloudProvider\": {\n            \"id\": \"string\",\n            \"name\": \"string\"\n          },\n          \"region\": \"string\",\n          \"userId\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\"\n        },\n        \"nodeCapacityType\": {\n          \"capacityTypes\": [\n            \"string\"\n          ]\n        },\n        \"instanceTypes\": [\n          {\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"computeInfo\": {\n              \"numCpus\": 0,\n              \"cpuMemory\": \"string\",\n              \"numAccelerators\": 0,\n              \"acceleratorMemory\": \"string\",\n              \"acceleratorType\": [\n                \"string\"\n              ]\n            }\n          }\n        ],\n        \"minInstances\": 0,\n        \"maxInstances\": 0,\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"metadata\": {}\n      },\n      \"computeInfo\": {\n        \"numCpus\": 0,\n        \"cpuMemory\": \"string\",\n        \"numAccelerators\": 0,\n        \"acceleratorMemory\": \"string\",\n        \"acceleratorType\": [\n          \"string\"\n        ]\n      },\n      \"numReplicas\": 0\n    },\n    \"deployment\": {\n      \"id\": \"string\",\n      \"userId\": \"string\",\n      \"autoscaleConfig\": {\n        \"minReplicas\": 0,\n        \"maxReplicas\": 0,\n        \"trafficHistorySeconds\": 0,\n        \"scaleDownDelaySeconds\": 0,\n        \"scaleUpDelaySeconds\": 0,\n        \"enablePacking\": true\n      },\n      \"nodepools\": [\n        {\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"userId\": \"string\",\n          \"computeCluster\": {\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"cloudProvider\": {\n              \"id\": \"string\",\n              \"name\": \"string\"\n            },\n            \"region\": \"string\",\n            \"userId\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\"\n          },\n          \"nodeCapacityType\": {\n            \"capacityTypes\": [\n              \"string\"\n            ]\n          },\n          \"instanceTypes\": [\n            {\n              \"id\": \"string\",\n              \"description\": \"string\",\n              \"computeInfo\": {\n                \"numCpus\": 0,\n                \"cpuMemory\": \"string\",\n                \"numAccelerators\": 0,\n                \"acceleratorMemory\": \"string\",\n                \"acceleratorType\": [\n                  \"string\"\n                ]\n              }\n            }\n          ],\n          \"minInstances\": 0,\n          \"maxInstances\": 0,\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"metadata\": {}\n        }\n      ],\n      \"workflow\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"createdAt\": \"string\",\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"userId\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"workflowId\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"nodes\": [\n            {\n              \"id\": \"string\",\n              \"nodeInputs\": [\n                {\n                  \"nodeId\": \"string\"\n                }\n              ],\n              \"suppressOutput\": true,\n              \"outputInfoOverride\": {\n                \"outputConfig\": {\n                  \"conceptsMutuallyExclusive\": true,\n                  \"existingModelId\": \"string\",\n                  \"language\": \"string\",\n                  \"hyperParameters\": \"string\",\n                  \"maxConcepts\": 0,\n                  \"minValue\": null,\n                  \"selectConcepts\": [\n                    {\n                      \"id\": \"string\",\n                      \"name\": \"string\",\n                      \"value\": null,\n                      \"createdAt\": \"string\",\n                      \"language\": \"string\",\n                      \"appId\": \"string\",\n                      \"definition\": \"string\",\n                      \"vocabId\": \"string\",\n                      \"visibility\": {\n                        \"gettable\": \"string\"\n                      },\n                      \"userId\": \"string\",\n                      \"keypointInfo\": {\n                        \"keypointNames\": [\n                          \"string\"\n                        ],\n                        \"skeleton\": [\n                          {\n                            \"k1\": 0,\n                            \"k2\": 0\n                          }\n                        ]\n                      },\n                      \"extraInfo\": {\n                        \"isRankable\": true\n                      }\n                    }\n                  ],\n                  \"trainingTimeout\": 0,\n                  \"sampleMs\": 0,\n                  \"hyperParams\": {},\n                  \"embedModelVersionId\": \"string\",\n                  \"failOnMissingPositiveExamples\": true,\n                  \"modelMetadata\": {}\n                },\n                \"message\": \"string\",\n                \"fieldsMap\": {},\n                \"params\": {},\n                \"paramsSpecs\": [\n                  null\n                ]\n              }\n            }\n          ],\n          \"metadata\": {},\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"license\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"description\": \"string\",\n        \"notes\": \"string\",\n        \"useCases\": [\n          \"string\"\n        ],\n        \"checkConsents\": [\n          \"string\"\n        ],\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"schedulingChoice\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metadata\": {}\n    }\n  }\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"modelId\": \"string\",\n  \"versionId\": \"string\",\n  \"inputs\": [\n    null\n  ],\n  \"runnerSelector\": {\n    \"nodepool\": {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"userId\": \"string\",\n      \"computeCluster\": {\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"cloudProvider\": {\n          \"id\": \"string\",\n          \"name\": \"string\"\n        },\n        \"region\": \"string\",\n        \"userId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\"\n      },\n      \"nodeCapacityType\": {\n        \"capacityTypes\": [\n          \"string\"\n        ]\n      },\n      \"instanceTypes\": [\n        {\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"computeInfo\": {\n            \"numCpus\": 0,\n            \"cpuMemory\": \"string\",\n            \"numAccelerators\": 0,\n            \"acceleratorMemory\": \"string\",\n            \"acceleratorType\": [\n              \"string\"\n            ]\n          }\n        }\n      ],\n      \"minInstances\": 0,\n      \"maxInstances\": 0,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metadata\": {}\n    },\n    \"runner\": {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"metadata\": {},\n      \"userId\": \"string\",\n      \"labels\": [\n        \"string\"\n      ],\n      \"worker\": {\n        \"user\": {\n          \"id\": \"string\",\n          \"primaryEmail\": \"string\",\n          \"firstName\": \"string\",\n          \"lastName\": \"string\",\n          \"companyName\": \"string\",\n          \"jobTitle\": \"string\",\n          \"jobRole\": \"string\",\n          \"intention\": \"string\",\n          \"referralSource\": \"string\",\n          \"billType\": \"string\",\n          \"createdAt\": \"string\",\n          \"dateGdprConsent\": \"string\",\n          \"dateTosConsent\": \"string\",\n          \"dateMarketingConsent\": \"string\",\n          \"datePiiConsent\": \"string\",\n          \"metadata\": {},\n          \"emailAddresses\": [\n            {\n              \"email\": \"string\",\n              \"primary\": true,\n              \"verified\": true\n            }\n          ],\n          \"twoFactorAuthEnabled\": true,\n          \"teamsCount\": 0,\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"userDetail\": {\n            \"primaryEmail\": \"string\",\n            \"billType\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"country\": \"string\",\n            \"state\": \"string\"\n          }\n        },\n        \"workflow\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"createdAt\": \"string\",\n          \"nodes\": [\n            {\n              \"id\": \"string\",\n              \"nodeInputs\": [\n                {\n                  \"nodeId\": \"string\"\n                }\n              ],\n              \"suppressOutput\": true,\n              \"outputInfoOverride\": {\n                \"outputConfig\": {\n                  \"conceptsMutuallyExclusive\": true,\n                  \"existingModelId\": \"string\",\n                  \"language\": \"string\",\n                  \"hyperParameters\": \"string\",\n                  \"maxConcepts\": 0,\n                  \"minValue\": null,\n                  \"selectConcepts\": [\n                    {\n                      \"id\": \"string\",\n                      \"name\": \"string\",\n                      \"value\": null,\n                      \"createdAt\": \"string\",\n                      \"language\": \"string\",\n                      \"appId\": \"string\",\n                      \"definition\": \"string\",\n                      \"vocabId\": \"string\",\n                      \"visibility\": {\n                        \"gettable\": \"string\"\n                      },\n                      \"userId\": \"string\",\n                      \"keypointInfo\": {\n                        \"keypointNames\": [\n                          \"string\"\n                        ],\n                        \"skeleton\": [\n                          {\n                            \"k1\": 0,\n                            \"k2\": 0\n                          }\n                        ]\n                      },\n                      \"extraInfo\": {\n                        \"isRankable\": true\n                      }\n                    }\n                  ],\n                  \"trainingTimeout\": 0,\n                  \"sampleMs\": 0,\n                  \"hyperParams\": {},\n                  \"embedModelVersionId\": \"string\",\n                  \"failOnMissingPositiveExamples\": true,\n                  \"modelMetadata\": {}\n                },\n                \"message\": \"string\",\n                \"fieldsMap\": {},\n                \"params\": {},\n                \"paramsSpecs\": [\n                  null\n                ]\n              }\n            }\n          ],\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"userId\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"workflowId\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"nodes\": [\n              {\n                \"id\": \"string\",\n                \"nodeInputs\": [\n                  {\n                    \"nodeId\": \"string\"\n                  }\n                ],\n                \"suppressOutput\": true,\n                \"outputInfoOverride\": {\n                  \"outputConfig\": {\n                    \"conceptsMutuallyExclusive\": true,\n                    \"existingModelId\": \"string\",\n                    \"language\": \"string\",\n                    \"hyperParameters\": \"string\",\n                    \"maxConcepts\": 0,\n                    \"minValue\": null,\n                    \"selectConcepts\": [\n                      {\n                        \"id\": \"string\",\n                        \"name\": \"string\",\n                        \"value\": null,\n                        \"createdAt\": \"string\",\n                        \"language\": \"string\",\n                        \"appId\": \"string\",\n                        \"definition\": \"string\",\n                        \"vocabId\": \"string\",\n                        \"visibility\": {\n                          \"gettable\": \"string\"\n                        },\n                        \"userId\": \"string\",\n                        \"keypointInfo\": {\n                          \"keypointNames\": [\n                            \"string\"\n                          ],\n                          \"skeleton\": [\n                            {\n                              \"k1\": 0,\n                              \"k2\": 0\n                            }\n                          ]\n                        },\n                        \"extraInfo\": {\n                          \"isRankable\": true\n                        }\n                      }\n                    ],\n                    \"trainingTimeout\": 0,\n                    \"sampleMs\": 0,\n                    \"hyperParams\": {},\n                    \"embedModelVersionId\": \"string\",\n                    \"failOnMissingPositiveExamples\": true,\n                    \"modelMetadata\": {}\n                  },\n                  \"message\": \"string\",\n                  \"fieldsMap\": {},\n                  \"params\": {},\n                  \"paramsSpecs\": [\n                    null\n                  ]\n                }\n              }\n            ],\n            \"metadata\": {},\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"description\": \"string\",\n            \"license\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"description\": \"string\",\n          \"notes\": \"string\",\n          \"useCases\": [\n            \"string\"\n          ],\n          \"checkConsents\": [\n            \"string\"\n          ],\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        }\n      },\n      \"nodepool\": {\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"userId\": \"string\",\n        \"computeCluster\": {\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"cloudProvider\": {\n            \"id\": \"string\",\n            \"name\": \"string\"\n          },\n          \"region\": \"string\",\n          \"userId\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\"\n        },\n        \"nodeCapacityType\": {\n          \"capacityTypes\": [\n            \"string\"\n          ]\n        },\n        \"instanceTypes\": [\n          {\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"computeInfo\": {\n              \"numCpus\": 0,\n              \"cpuMemory\": \"string\",\n              \"numAccelerators\": 0,\n              \"acceleratorMemory\": \"string\",\n              \"acceleratorType\": [\n                \"string\"\n              ]\n            }\n          }\n        ],\n        \"minInstances\": 0,\n        \"maxInstances\": 0,\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"metadata\": {}\n      },\n      \"computeInfo\": {\n        \"numCpus\": 0,\n        \"cpuMemory\": \"string\",\n        \"numAccelerators\": 0,\n        \"acceleratorMemory\": \"string\",\n        \"acceleratorType\": [\n          \"string\"\n        ]\n      },\n      \"numReplicas\": 0\n    },\n    \"deployment\": {\n      \"id\": \"string\",\n      \"userId\": \"string\",\n      \"autoscaleConfig\": {\n        \"minReplicas\": 0,\n        \"maxReplicas\": 0,\n        \"trafficHistorySeconds\": 0,\n        \"scaleDownDelaySeconds\": 0,\n        \"scaleUpDelaySeconds\": 0,\n        \"enablePacking\": true\n      },\n      \"nodepools\": [\n        {\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"userId\": \"string\",\n          \"computeCluster\": {\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"cloudProvider\": {\n              \"id\": \"string\",\n              \"name\": \"string\"\n            },\n            \"region\": \"string\",\n            \"userId\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\"\n          },\n          \"nodeCapacityType\": {\n            \"capacityTypes\": [\n              \"string\"\n            ]\n          },\n          \"instanceTypes\": [\n            {\n              \"id\": \"string\",\n              \"description\": \"string\",\n              \"computeInfo\": {\n                \"numCpus\": 0,\n                \"cpuMemory\": \"string\",\n                \"numAccelerators\": 0,\n                \"acceleratorMemory\": \"string\",\n                \"acceleratorType\": [\n                  \"string\"\n                ]\n              }\n            }\n          ],\n          \"minInstances\": 0,\n          \"maxInstances\": 0,\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"metadata\": {}\n        }\n      ],\n      \"workflow\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"createdAt\": \"string\",\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"userId\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"workflowId\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"nodes\": [\n            {\n              \"id\": \"string\",\n              \"nodeInputs\": [\n                {\n                  \"nodeId\": \"string\"\n                }\n              ],\n              \"suppressOutput\": true,\n              \"outputInfoOverride\": {\n                \"outputConfig\": {\n                  \"conceptsMutuallyExclusive\": true,\n                  \"existingModelId\": \"string\",\n                  \"language\": \"string\",\n                  \"hyperParameters\": \"string\",\n                  \"maxConcepts\": 0,\n                  \"minValue\": null,\n                  \"selectConcepts\": [\n                    {\n                      \"id\": \"string\",\n                      \"name\": \"string\",\n                      \"value\": null,\n                      \"createdAt\": \"string\",\n                      \"language\": \"string\",\n                      \"appId\": \"string\",\n                      \"definition\": \"string\",\n                      \"vocabId\": \"string\",\n                      \"visibility\": {\n                        \"gettable\": \"string\"\n                      },\n                      \"userId\": \"string\",\n                      \"keypointInfo\": {\n                        \"keypointNames\": [\n                          \"string\"\n                        ],\n                        \"skeleton\": [\n                          {\n                            \"k1\": 0,\n                            \"k2\": 0\n                          }\n                        ]\n                      },\n                      \"extraInfo\": {\n                        \"isRankable\": true\n                      }\n                    }\n                  ],\n                  \"trainingTimeout\": 0,\n                  \"sampleMs\": 0,\n                  \"hyperParams\": {},\n                  \"embedModelVersionId\": \"string\",\n                  \"failOnMissingPositiveExamples\": true,\n                  \"modelMetadata\": {}\n                },\n                \"message\": \"string\",\n                \"fieldsMap\": {},\n                \"params\": {},\n                \"paramsSpecs\": [\n                  null\n                ]\n              }\n            }\n          ],\n          \"metadata\": {},\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"license\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"description\": \"string\",\n        \"notes\": \"string\",\n        \"useCases\": [\n          \"string\"\n        ],\n        \"checkConsents\": [\n          \"string\"\n        ],\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"schedulingChoice\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metadata\": {}\n    }\n  }\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/models/outputs/stream\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"modelId\": \"string\",\n  \"versionId\": \"string\",\n  \"inputs\": [\n    null\n  ],\n  \"runnerSelector\": {\n    \"nodepool\": {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"userId\": \"string\",\n      \"computeCluster\": {\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"cloudProvider\": {\n          \"id\": \"string\",\n          \"name\": \"string\"\n        },\n        \"region\": \"string\",\n        \"userId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\"\n      },\n      \"nodeCapacityType\": {\n        \"capacityTypes\": [\n          \"string\"\n        ]\n      },\n      \"instanceTypes\": [\n        {\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"computeInfo\": {\n            \"numCpus\": 0,\n            \"cpuMemory\": \"string\",\n            \"numAccelerators\": 0,\n            \"acceleratorMemory\": \"string\",\n            \"acceleratorType\": [\n              \"string\"\n            ]\n          }\n        }\n      ],\n      \"minInstances\": 0,\n      \"maxInstances\": 0,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metadata\": {}\n    },\n    \"runner\": {\n      \"id\": \"string\",\n      \"description\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"metadata\": {},\n      \"userId\": \"string\",\n      \"labels\": [\n        \"string\"\n      ],\n      \"worker\": {\n        \"user\": {\n          \"id\": \"string\",\n          \"primaryEmail\": \"string\",\n          \"firstName\": \"string\",\n          \"lastName\": \"string\",\n          \"companyName\": \"string\",\n          \"jobTitle\": \"string\",\n          \"jobRole\": \"string\",\n          \"intention\": \"string\",\n          \"referralSource\": \"string\",\n          \"billType\": \"string\",\n          \"createdAt\": \"string\",\n          \"dateGdprConsent\": \"string\",\n          \"dateTosConsent\": \"string\",\n          \"dateMarketingConsent\": \"string\",\n          \"datePiiConsent\": \"string\",\n          \"metadata\": {},\n          \"emailAddresses\": [\n            {\n              \"email\": \"string\",\n              \"primary\": true,\n              \"verified\": true\n            }\n          ],\n          \"twoFactorAuthEnabled\": true,\n          \"teamsCount\": 0,\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"userDetail\": {\n            \"primaryEmail\": \"string\",\n            \"billType\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"country\": \"string\",\n            \"state\": \"string\"\n          }\n        },\n        \"workflow\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"createdAt\": \"string\",\n          \"nodes\": [\n            {\n              \"id\": \"string\",\n              \"nodeInputs\": [\n                {\n                  \"nodeId\": \"string\"\n                }\n              ],\n              \"suppressOutput\": true,\n              \"outputInfoOverride\": {\n                \"outputConfig\": {\n                  \"conceptsMutuallyExclusive\": true,\n                  \"existingModelId\": \"string\",\n                  \"language\": \"string\",\n                  \"hyperParameters\": \"string\",\n                  \"maxConcepts\": 0,\n                  \"minValue\": null,\n                  \"selectConcepts\": [\n                    {\n                      \"id\": \"string\",\n                      \"name\": \"string\",\n                      \"value\": null,\n                      \"createdAt\": \"string\",\n                      \"language\": \"string\",\n                      \"appId\": \"string\",\n                      \"definition\": \"string\",\n                      \"vocabId\": \"string\",\n                      \"visibility\": {\n                        \"gettable\": \"string\"\n                      },\n                      \"userId\": \"string\",\n                      \"keypointInfo\": {\n                        \"keypointNames\": [\n                          \"string\"\n                        ],\n                        \"skeleton\": [\n                          {\n                            \"k1\": 0,\n                            \"k2\": 0\n                          }\n                        ]\n                      },\n                      \"extraInfo\": {\n                        \"isRankable\": true\n                      }\n                    }\n                  ],\n                  \"trainingTimeout\": 0,\n                  \"sampleMs\": 0,\n                  \"hyperParams\": {},\n                  \"embedModelVersionId\": \"string\",\n                  \"failOnMissingPositiveExamples\": true,\n                  \"modelMetadata\": {}\n                },\n                \"message\": \"string\",\n                \"fieldsMap\": {},\n                \"params\": {},\n                \"paramsSpecs\": [\n                  null\n                ]\n              }\n            }\n          ],\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"userId\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"workflowId\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"nodes\": [\n              {\n                \"id\": \"string\",\n                \"nodeInputs\": [\n                  {\n                    \"nodeId\": \"string\"\n                  }\n                ],\n                \"suppressOutput\": true,\n                \"outputInfoOverride\": {\n                  \"outputConfig\": {\n                    \"conceptsMutuallyExclusive\": true,\n                    \"existingModelId\": \"string\",\n                    \"language\": \"string\",\n                    \"hyperParameters\": \"string\",\n                    \"maxConcepts\": 0,\n                    \"minValue\": null,\n                    \"selectConcepts\": [\n                      {\n                        \"id\": \"string\",\n                        \"name\": \"string\",\n                        \"value\": null,\n                        \"createdAt\": \"string\",\n                        \"language\": \"string\",\n                        \"appId\": \"string\",\n                        \"definition\": \"string\",\n                        \"vocabId\": \"string\",\n                        \"visibility\": {\n                          \"gettable\": \"string\"\n                        },\n                        \"userId\": \"string\",\n                        \"keypointInfo\": {\n                          \"keypointNames\": [\n                            \"string\"\n                          ],\n                          \"skeleton\": [\n                            {\n                              \"k1\": 0,\n                              \"k2\": 0\n                            }\n                          ]\n                        },\n                        \"extraInfo\": {\n                          \"isRankable\": true\n                        }\n                      }\n                    ],\n                    \"trainingTimeout\": 0,\n                    \"sampleMs\": 0,\n                    \"hyperParams\": {},\n                    \"embedModelVersionId\": \"string\",\n                    \"failOnMissingPositiveExamples\": true,\n                    \"modelMetadata\": {}\n                  },\n                  \"message\": \"string\",\n                  \"fieldsMap\": {},\n                  \"params\": {},\n                  \"paramsSpecs\": [\n                    null\n                  ]\n                }\n              }\n            ],\n            \"metadata\": {},\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"description\": \"string\",\n            \"license\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"description\": \"string\",\n          \"notes\": \"string\",\n          \"useCases\": [\n            \"string\"\n          ],\n          \"checkConsents\": [\n            \"string\"\n          ],\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        }\n      },\n      \"nodepool\": {\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"userId\": \"string\",\n        \"computeCluster\": {\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"cloudProvider\": {\n            \"id\": \"string\",\n            \"name\": \"string\"\n          },\n          \"region\": \"string\",\n          \"userId\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\"\n        },\n        \"nodeCapacityType\": {\n          \"capacityTypes\": [\n            \"string\"\n          ]\n        },\n        \"instanceTypes\": [\n          {\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"computeInfo\": {\n              \"numCpus\": 0,\n              \"cpuMemory\": \"string\",\n              \"numAccelerators\": 0,\n              \"acceleratorMemory\": \"string\",\n              \"acceleratorType\": [\n                \"string\"\n              ]\n            }\n          }\n        ],\n        \"minInstances\": 0,\n        \"maxInstances\": 0,\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"metadata\": {}\n      },\n      \"computeInfo\": {\n        \"numCpus\": 0,\n        \"cpuMemory\": \"string\",\n        \"numAccelerators\": 0,\n        \"acceleratorMemory\": \"string\",\n        \"acceleratorType\": [\n          \"string\"\n        ]\n      },\n      \"numReplicas\": 0\n    },\n    \"deployment\": {\n      \"id\": \"string\",\n      \"userId\": \"string\",\n      \"autoscaleConfig\": {\n        \"minReplicas\": 0,\n        \"maxReplicas\": 0,\n        \"trafficHistorySeconds\": 0,\n        \"scaleDownDelaySeconds\": 0,\n        \"scaleUpDelaySeconds\": 0,\n        \"enablePacking\": true\n      },\n      \"nodepools\": [\n        {\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"userId\": \"string\",\n          \"computeCluster\": {\n            \"id\": \"string\",\n            \"description\": \"string\",\n            \"cloudProvider\": {\n              \"id\": \"string\",\n              \"name\": \"string\"\n            },\n            \"region\": \"string\",\n            \"userId\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\"\n          },\n          \"nodeCapacityType\": {\n            \"capacityTypes\": [\n              \"string\"\n            ]\n          },\n          \"instanceTypes\": [\n            {\n              \"id\": \"string\",\n              \"description\": \"string\",\n              \"computeInfo\": {\n                \"numCpus\": 0,\n                \"cpuMemory\": \"string\",\n                \"numAccelerators\": 0,\n                \"acceleratorMemory\": \"string\",\n                \"acceleratorType\": [\n                  \"string\"\n                ]\n              }\n            }\n          ],\n          \"minInstances\": 0,\n          \"maxInstances\": 0,\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"metadata\": {}\n        }\n      ],\n      \"workflow\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"createdAt\": \"string\",\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"userId\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"version\": {\n          \"id\": \"string\",\n          \"workflowId\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"nodes\": [\n            {\n              \"id\": \"string\",\n              \"nodeInputs\": [\n                {\n                  \"nodeId\": \"string\"\n                }\n              ],\n              \"suppressOutput\": true,\n              \"outputInfoOverride\": {\n                \"outputConfig\": {\n                  \"conceptsMutuallyExclusive\": true,\n                  \"existingModelId\": \"string\",\n                  \"language\": \"string\",\n                  \"hyperParameters\": \"string\",\n                  \"maxConcepts\": 0,\n                  \"minValue\": null,\n                  \"selectConcepts\": [\n                    {\n                      \"id\": \"string\",\n                      \"name\": \"string\",\n                      \"value\": null,\n                      \"createdAt\": \"string\",\n                      \"language\": \"string\",\n                      \"appId\": \"string\",\n                      \"definition\": \"string\",\n                      \"vocabId\": \"string\",\n                      \"visibility\": {\n                        \"gettable\": \"string\"\n                      },\n                      \"userId\": \"string\",\n                      \"keypointInfo\": {\n                        \"keypointNames\": [\n                          \"string\"\n                        ],\n                        \"skeleton\": [\n                          {\n                            \"k1\": 0,\n                            \"k2\": 0\n                          }\n                        ]\n                      },\n                      \"extraInfo\": {\n                        \"isRankable\": true\n                      }\n                    }\n                  ],\n                  \"trainingTimeout\": 0,\n                  \"sampleMs\": 0,\n                  \"hyperParams\": {},\n                  \"embedModelVersionId\": \"string\",\n                  \"failOnMissingPositiveExamples\": true,\n                  \"modelMetadata\": {}\n                },\n                \"message\": \"string\",\n                \"fieldsMap\": {},\n                \"params\": {},\n                \"paramsSpecs\": [\n                  null\n                ]\n              }\n            }\n          ],\n          \"metadata\": {},\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"license\": \"string\"\n        },\n        \"isStarred\": true,\n        \"starCount\": 0,\n        \"description\": \"string\",\n        \"notes\": \"string\",\n        \"useCases\": [\n          \"string\"\n        ],\n        \"checkConsents\": [\n          \"string\"\n        ],\n        \"bookmarkOrigin\": {\n          \"id\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"resourceType\": \"string\"\n        },\n        \"image\": {\n          \"url\": \"string\",\n          \"base64\": \"string\",\n          \"allowDuplicateUrl\": true,\n          \"hosted\": {\n            \"prefix\": \"string\",\n            \"suffix\": \"string\",\n            \"sizes\": [\n              \"string\"\n            ],\n            \"crossorigin\": \"string\"\n          },\n          \"imageInfo\": {\n            \"width\": 0,\n            \"height\": 0,\n            \"format\": \"string\",\n            \"colorMode\": \"string\"\n          }\n        }\n      },\n      \"schedulingChoice\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metadata\": {}\n    }\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/models/outputs/stream',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/models/searches": {
      "post": {
        "summary": "Search over the models to find one or more you're looking for.\nThis leverage the \"body\" parameter because we also have page and\nper_page as url query param variables in this request.",
        "operationId": "V2_PostModelsSearches2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostModelsSearchesRequest"
              }
            }
          },
          "description": "Search over the available models.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/models/searches' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"modelQuery\": {\n    \"name\": \"string\",\n    \"modelTypeId\": \"string\"\n  },\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"modelQuery\": {\n    \"name\": \"string\",\n    \"modelTypeId\": \"string\"\n  },\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/models/searches\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"modelQuery\": {\n    \"name\": \"string\",\n    \"modelTypeId\": \"string\"\n  },\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/models/searches',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/models/types": {
      "get": {
        "summary": "List all the model types available in the platform.\nThis MUST be above ListModels so that the /models/types endpoint takes precedence.",
        "operationId": "V2_ListModelTypes2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelTypeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/models/types?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/models/types?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/models/types?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/models/types/{modelTypeId}": {
      "get": {
        "summary": "Get a specific model type.",
        "operationId": "V2_GetModelType2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelTypeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelTypeId",
            "description": "The specific ModelType.Id you want to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/versions/upload": {
      "post": {
        "summary": "This is a streaming endpoint, the request has a field, upload_data, which can either be the config for the upload or the actual data to upload.\nThe config must be sent first before the model_bytes can be uploaded.\nOnce the config has been sent, the server will respond with a confirmation containing the model_version_id.\nThis is so that if your upload is interrupted, you can resume the upload by sending the config again with the model_version_id specified for your model_version.\nThe actual upload will be done via a multipart upload, the latest successful part_id will be sent from the server in the response to the model_bytes.",
        "operationId": "V2_PostModelVersionsUpload",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiPostModelVersionsUploadResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  },
                  "title": "Stream result of apiPostModelVersionsUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostModelVersionsUploadRequest"
              }
            }
          },
          "description": " (streaming inputs)",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/models/versions/upload' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"uploadConfig\": {\n    \"userAppId\": {\n      \"userId\": \"string\",\n      \"appId\": \"string\"\n    },\n    \"modelId\": \"string\",\n    \"modelVersion\": {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"activeConceptCount\": 0,\n      \"metrics\": {\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"userId\": \"string\",\n        \"appId\": \"string\",\n        \"id\": \"string\",\n        \"groundTruthDataset\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"defaultProcessingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"notes\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"datasetId\": \"string\",\n            \"annotationFilterConfig\": {\n              \"ignoreEmptyInputs\": true\n            },\n            \"modelPredictConfig\": {},\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"description\": \"string\",\n            \"processingInfo\": {\n              \"frameInterpolationInfo\": {\n                \"sampleMs\": 0\n              }\n            },\n            \"metrics\": {},\n            \"exportInfo\": {\n              \"clarifaiDataProtobuf\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"clarifaiDataJson\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"coco\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              }\n            },\n            \"metadata\": {},\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"embedModelVersionIds\": [\n              \"string\"\n            ],\n            \"requestOrigin\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        },\n        \"predictionsDataset\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"defaultProcessingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"notes\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"datasetId\": \"string\",\n            \"annotationFilterConfig\": {\n              \"ignoreEmptyInputs\": true\n            },\n            \"modelPredictConfig\": {},\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"description\": \"string\",\n            \"processingInfo\": {\n              \"frameInterpolationInfo\": {\n                \"sampleMs\": 0\n              }\n            },\n            \"metrics\": {},\n            \"exportInfo\": {\n              \"clarifaiDataProtobuf\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"clarifaiDataJson\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"coco\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              }\n            },\n            \"metadata\": {},\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"embedModelVersionIds\": [\n              \"string\"\n            ],\n            \"requestOrigin\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        },\n        \"summary\": {\n          \"top1Accuracy\": null,\n          \"top5Accuracy\": null,\n          \"macroAvgRocAuc\": null,\n          \"macroStdRocAuc\": null,\n          \"macroAvgF1Score\": null,\n          \"macroStdF1Score\": null,\n          \"macroAvgPrecision\": null,\n          \"macroAvgRecall\": null,\n          \"meanAvgPrecisionIou50\": null,\n          \"meanAvgPrecisionIouRange\": null,\n          \"lopqMetrics\": [\n            {\n              \"k\": 0,\n              \"recallVsBruteForce\": null,\n              \"kendallTauVsBruteForce\": null,\n              \"mostFrequentCodePercent\": null,\n              \"lopqNdcg\": null,\n              \"bruteForceNdcg\": null\n            }\n          ]\n        },\n        \"confusionMatrix\": {\n          \"matrix\": [\n            {\n              \"predicted\": \"string\",\n              \"actual\": \"string\",\n              \"value\": null,\n              \"predictedConcept\": {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              },\n              \"actualConcept\": {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            }\n          ],\n          \"conceptIds\": [\n            \"string\"\n          ]\n        },\n        \"cooccurrenceMatrix\": {\n          \"matrix\": [\n            {\n              \"row\": \"string\",\n              \"col\": \"string\",\n              \"count\": 0\n            }\n          ],\n          \"conceptIds\": [\n            \"string\"\n          ]\n        },\n        \"labelCounts\": {\n          \"positiveLabelCounts\": [\n            {\n              \"conceptName\": \"string\",\n              \"count\": 0,\n              \"concept\": {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            }\n          ]\n        },\n        \"binaryMetrics\": [\n          {\n            \"numPos\": 0,\n            \"numNeg\": 0,\n            \"numTot\": 0,\n            \"rocAuc\": null,\n            \"f1\": null,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"rocCurve\": {\n              \"fpr\": [\n                null\n              ],\n              \"tpr\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ],\n              \"fprPerImage\": [\n                null\n              ],\n              \"fprPerObject\": [\n                null\n              ]\n            },\n            \"precisionRecallCurve\": {\n              \"recall\": [\n                null\n              ],\n              \"precision\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ]\n            },\n            \"avgPrecision\": null,\n            \"areaName\": \"string\",\n            \"areaMin\": null,\n            \"areaMax\": null,\n            \"iou\": null\n          }\n        ],\n        \"testSet\": [\n          {\n            \"predictedConcepts\": [\n              {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            ],\n            \"groundTruthConcepts\": [\n              {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            ]\n          }\n        ],\n        \"metricsByArea\": [\n          {\n            \"numPos\": 0,\n            \"numNeg\": 0,\n            \"numTot\": 0,\n            \"rocAuc\": null,\n            \"f1\": null,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"rocCurve\": {\n              \"fpr\": [\n                null\n              ],\n              \"tpr\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ],\n              \"fprPerImage\": [\n                null\n              ],\n              \"fprPerObject\": [\n                null\n              ]\n            },\n            \"precisionRecallCurve\": {\n              \"recall\": [\n                null\n              ],\n              \"precision\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ]\n            },\n            \"avgPrecision\": null,\n            \"areaName\": \"string\",\n            \"areaMin\": null,\n            \"areaMax\": null,\n            \"iou\": null\n          }\n        ],\n        \"metricsByClass\": [\n          {\n            \"numPos\": 0,\n            \"numNeg\": 0,\n            \"numTot\": 0,\n            \"rocAuc\": null,\n            \"f1\": null,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"rocCurve\": {\n              \"fpr\": [\n                null\n              ],\n              \"tpr\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ],\n              \"fprPerImage\": [\n                null\n              ],\n              \"fprPerObject\": [\n                null\n              ]\n            },\n            \"precisionRecallCurve\": {\n              \"recall\": [\n                null\n              ],\n              \"precision\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ]\n            },\n            \"avgPrecision\": null,\n            \"areaName\": \"string\",\n            \"areaMin\": null,\n            \"areaMax\": null,\n            \"iou\": null\n          }\n        ],\n        \"trackerMetrics\": [\n          {\n            \"motMota\": null,\n            \"motNumSwitches\": 0,\n            \"morseFrag\": null,\n            \"avgPrecision\": null,\n            \"aiid\": \"string\",\n            \"uniqueSwitchRate\": null\n          }\n        ],\n        \"evalInfo\": {\n          \"params\": {}\n        },\n        \"extendedMetrics\": {\n          \"userMetrics\": {}\n        }\n      },\n      \"totalInputCount\": 0,\n      \"pretrainedModelConfig\": {\n        \"inputFieldsMap\": {},\n        \"outputFieldsMap\": {},\n        \"modelZipUrl\": \"string\"\n      },\n      \"completedAt\": \"string\",\n      \"description\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"metadata\": {},\n      \"license\": \"string\",\n      \"outputInfo\": {\n        \"outputConfig\": {\n          \"conceptsMutuallyExclusive\": true,\n          \"existingModelId\": \"string\",\n          \"language\": \"string\",\n          \"hyperParameters\": \"string\",\n          \"maxConcepts\": 0,\n          \"minValue\": null,\n          \"selectConcepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ],\n          \"trainingTimeout\": 0,\n          \"sampleMs\": 0,\n          \"hyperParams\": {},\n          \"embedModelVersionId\": \"string\",\n          \"failOnMissingPositiveExamples\": true,\n          \"modelMetadata\": {}\n        },\n        \"message\": \"string\",\n        \"fieldsMap\": {},\n        \"params\": {},\n        \"paramsSpecs\": [\n          null\n        ]\n      },\n      \"inputInfo\": {\n        \"fieldsMap\": {},\n        \"params\": {}\n      },\n      \"trainInfo\": {\n        \"params\": {},\n        \"dataset\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"defaultProcessingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"notes\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"datasetId\": \"string\",\n            \"annotationFilterConfig\": {\n              \"ignoreEmptyInputs\": true\n            },\n            \"modelPredictConfig\": {},\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"description\": \"string\",\n            \"processingInfo\": {\n              \"frameInterpolationInfo\": {\n                \"sampleMs\": 0\n              }\n            },\n            \"metrics\": {},\n            \"exportInfo\": {\n              \"clarifaiDataProtobuf\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"clarifaiDataJson\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"coco\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              }\n            },\n            \"metadata\": {},\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"embedModelVersionIds\": [\n              \"string\"\n            ],\n            \"requestOrigin\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        }\n      },\n      \"importInfo\": {\n        \"params\": {}\n      },\n      \"trainLog\": \"string\",\n      \"inferenceComputeInfo\": {\n        \"numCpus\": 0,\n        \"cpuMemory\": \"string\",\n        \"numAccelerators\": 0,\n        \"acceleratorMemory\": \"string\",\n        \"acceleratorType\": [\n          \"string\"\n        ]\n      },\n      \"buildInfo\": {\n        \"dockerImageName\": \"string\",\n        \"dockerImageTag\": \"string\",\n        \"dockerImageDigest\": \"string\"\n      }\n    },\n    \"totalSize\": \"string\",\n    \"isV3\": true\n  },\n  \"contentPart\": {\n    \"rangeStart\": \"string\",\n    \"partNumber\": \"string\",\n    \"data\": \"string\"\n  }\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"uploadConfig\": {\n    \"userAppId\": {\n      \"userId\": \"string\",\n      \"appId\": \"string\"\n    },\n    \"modelId\": \"string\",\n    \"modelVersion\": {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"activeConceptCount\": 0,\n      \"metrics\": {\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"userId\": \"string\",\n        \"appId\": \"string\",\n        \"id\": \"string\",\n        \"groundTruthDataset\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"defaultProcessingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"notes\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"datasetId\": \"string\",\n            \"annotationFilterConfig\": {\n              \"ignoreEmptyInputs\": true\n            },\n            \"modelPredictConfig\": {},\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"description\": \"string\",\n            \"processingInfo\": {\n              \"frameInterpolationInfo\": {\n                \"sampleMs\": 0\n              }\n            },\n            \"metrics\": {},\n            \"exportInfo\": {\n              \"clarifaiDataProtobuf\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"clarifaiDataJson\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"coco\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              }\n            },\n            \"metadata\": {},\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"embedModelVersionIds\": [\n              \"string\"\n            ],\n            \"requestOrigin\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        },\n        \"predictionsDataset\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"defaultProcessingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"notes\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"datasetId\": \"string\",\n            \"annotationFilterConfig\": {\n              \"ignoreEmptyInputs\": true\n            },\n            \"modelPredictConfig\": {},\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"description\": \"string\",\n            \"processingInfo\": {\n              \"frameInterpolationInfo\": {\n                \"sampleMs\": 0\n              }\n            },\n            \"metrics\": {},\n            \"exportInfo\": {\n              \"clarifaiDataProtobuf\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"clarifaiDataJson\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"coco\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              }\n            },\n            \"metadata\": {},\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"embedModelVersionIds\": [\n              \"string\"\n            ],\n            \"requestOrigin\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        },\n        \"summary\": {\n          \"top1Accuracy\": null,\n          \"top5Accuracy\": null,\n          \"macroAvgRocAuc\": null,\n          \"macroStdRocAuc\": null,\n          \"macroAvgF1Score\": null,\n          \"macroStdF1Score\": null,\n          \"macroAvgPrecision\": null,\n          \"macroAvgRecall\": null,\n          \"meanAvgPrecisionIou50\": null,\n          \"meanAvgPrecisionIouRange\": null,\n          \"lopqMetrics\": [\n            {\n              \"k\": 0,\n              \"recallVsBruteForce\": null,\n              \"kendallTauVsBruteForce\": null,\n              \"mostFrequentCodePercent\": null,\n              \"lopqNdcg\": null,\n              \"bruteForceNdcg\": null\n            }\n          ]\n        },\n        \"confusionMatrix\": {\n          \"matrix\": [\n            {\n              \"predicted\": \"string\",\n              \"actual\": \"string\",\n              \"value\": null,\n              \"predictedConcept\": {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              },\n              \"actualConcept\": {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            }\n          ],\n          \"conceptIds\": [\n            \"string\"\n          ]\n        },\n        \"cooccurrenceMatrix\": {\n          \"matrix\": [\n            {\n              \"row\": \"string\",\n              \"col\": \"string\",\n              \"count\": 0\n            }\n          ],\n          \"conceptIds\": [\n            \"string\"\n          ]\n        },\n        \"labelCounts\": {\n          \"positiveLabelCounts\": [\n            {\n              \"conceptName\": \"string\",\n              \"count\": 0,\n              \"concept\": {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            }\n          ]\n        },\n        \"binaryMetrics\": [\n          {\n            \"numPos\": 0,\n            \"numNeg\": 0,\n            \"numTot\": 0,\n            \"rocAuc\": null,\n            \"f1\": null,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"rocCurve\": {\n              \"fpr\": [\n                null\n              ],\n              \"tpr\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ],\n              \"fprPerImage\": [\n                null\n              ],\n              \"fprPerObject\": [\n                null\n              ]\n            },\n            \"precisionRecallCurve\": {\n              \"recall\": [\n                null\n              ],\n              \"precision\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ]\n            },\n            \"avgPrecision\": null,\n            \"areaName\": \"string\",\n            \"areaMin\": null,\n            \"areaMax\": null,\n            \"iou\": null\n          }\n        ],\n        \"testSet\": [\n          {\n            \"predictedConcepts\": [\n              {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            ],\n            \"groundTruthConcepts\": [\n              {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            ]\n          }\n        ],\n        \"metricsByArea\": [\n          {\n            \"numPos\": 0,\n            \"numNeg\": 0,\n            \"numTot\": 0,\n            \"rocAuc\": null,\n            \"f1\": null,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"rocCurve\": {\n              \"fpr\": [\n                null\n              ],\n              \"tpr\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ],\n              \"fprPerImage\": [\n                null\n              ],\n              \"fprPerObject\": [\n                null\n              ]\n            },\n            \"precisionRecallCurve\": {\n              \"recall\": [\n                null\n              ],\n              \"precision\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ]\n            },\n            \"avgPrecision\": null,\n            \"areaName\": \"string\",\n            \"areaMin\": null,\n            \"areaMax\": null,\n            \"iou\": null\n          }\n        ],\n        \"metricsByClass\": [\n          {\n            \"numPos\": 0,\n            \"numNeg\": 0,\n            \"numTot\": 0,\n            \"rocAuc\": null,\n            \"f1\": null,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"rocCurve\": {\n              \"fpr\": [\n                null\n              ],\n              \"tpr\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ],\n              \"fprPerImage\": [\n                null\n              ],\n              \"fprPerObject\": [\n                null\n              ]\n            },\n            \"precisionRecallCurve\": {\n              \"recall\": [\n                null\n              ],\n              \"precision\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ]\n            },\n            \"avgPrecision\": null,\n            \"areaName\": \"string\",\n            \"areaMin\": null,\n            \"areaMax\": null,\n            \"iou\": null\n          }\n        ],\n        \"trackerMetrics\": [\n          {\n            \"motMota\": null,\n            \"motNumSwitches\": 0,\n            \"morseFrag\": null,\n            \"avgPrecision\": null,\n            \"aiid\": \"string\",\n            \"uniqueSwitchRate\": null\n          }\n        ],\n        \"evalInfo\": {\n          \"params\": {}\n        },\n        \"extendedMetrics\": {\n          \"userMetrics\": {}\n        }\n      },\n      \"totalInputCount\": 0,\n      \"pretrainedModelConfig\": {\n        \"inputFieldsMap\": {},\n        \"outputFieldsMap\": {},\n        \"modelZipUrl\": \"string\"\n      },\n      \"completedAt\": \"string\",\n      \"description\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"metadata\": {},\n      \"license\": \"string\",\n      \"outputInfo\": {\n        \"outputConfig\": {\n          \"conceptsMutuallyExclusive\": true,\n          \"existingModelId\": \"string\",\n          \"language\": \"string\",\n          \"hyperParameters\": \"string\",\n          \"maxConcepts\": 0,\n          \"minValue\": null,\n          \"selectConcepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ],\n          \"trainingTimeout\": 0,\n          \"sampleMs\": 0,\n          \"hyperParams\": {},\n          \"embedModelVersionId\": \"string\",\n          \"failOnMissingPositiveExamples\": true,\n          \"modelMetadata\": {}\n        },\n        \"message\": \"string\",\n        \"fieldsMap\": {},\n        \"params\": {},\n        \"paramsSpecs\": [\n          null\n        ]\n      },\n      \"inputInfo\": {\n        \"fieldsMap\": {},\n        \"params\": {}\n      },\n      \"trainInfo\": {\n        \"params\": {},\n        \"dataset\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"defaultProcessingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"notes\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"datasetId\": \"string\",\n            \"annotationFilterConfig\": {\n              \"ignoreEmptyInputs\": true\n            },\n            \"modelPredictConfig\": {},\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"description\": \"string\",\n            \"processingInfo\": {\n              \"frameInterpolationInfo\": {\n                \"sampleMs\": 0\n              }\n            },\n            \"metrics\": {},\n            \"exportInfo\": {\n              \"clarifaiDataProtobuf\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"clarifaiDataJson\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"coco\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              }\n            },\n            \"metadata\": {},\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"embedModelVersionIds\": [\n              \"string\"\n            ],\n            \"requestOrigin\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        }\n      },\n      \"importInfo\": {\n        \"params\": {}\n      },\n      \"trainLog\": \"string\",\n      \"inferenceComputeInfo\": {\n        \"numCpus\": 0,\n        \"cpuMemory\": \"string\",\n        \"numAccelerators\": 0,\n        \"acceleratorMemory\": \"string\",\n        \"acceleratorType\": [\n          \"string\"\n        ]\n      },\n      \"buildInfo\": {\n        \"dockerImageName\": \"string\",\n        \"dockerImageTag\": \"string\",\n        \"dockerImageDigest\": \"string\"\n      }\n    },\n    \"totalSize\": \"string\",\n    \"isV3\": true\n  },\n  \"contentPart\": {\n    \"rangeStart\": \"string\",\n    \"partNumber\": \"string\",\n    \"data\": \"string\"\n  }\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/models/versions/upload\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"uploadConfig\": {\n    \"userAppId\": {\n      \"userId\": \"string\",\n      \"appId\": \"string\"\n    },\n    \"modelId\": \"string\",\n    \"modelVersion\": {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"activeConceptCount\": 0,\n      \"metrics\": {\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"userId\": \"string\",\n        \"appId\": \"string\",\n        \"id\": \"string\",\n        \"groundTruthDataset\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"defaultProcessingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"notes\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"datasetId\": \"string\",\n            \"annotationFilterConfig\": {\n              \"ignoreEmptyInputs\": true\n            },\n            \"modelPredictConfig\": {},\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"description\": \"string\",\n            \"processingInfo\": {\n              \"frameInterpolationInfo\": {\n                \"sampleMs\": 0\n              }\n            },\n            \"metrics\": {},\n            \"exportInfo\": {\n              \"clarifaiDataProtobuf\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"clarifaiDataJson\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"coco\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              }\n            },\n            \"metadata\": {},\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"embedModelVersionIds\": [\n              \"string\"\n            ],\n            \"requestOrigin\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        },\n        \"predictionsDataset\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"defaultProcessingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"notes\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"datasetId\": \"string\",\n            \"annotationFilterConfig\": {\n              \"ignoreEmptyInputs\": true\n            },\n            \"modelPredictConfig\": {},\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"description\": \"string\",\n            \"processingInfo\": {\n              \"frameInterpolationInfo\": {\n                \"sampleMs\": 0\n              }\n            },\n            \"metrics\": {},\n            \"exportInfo\": {\n              \"clarifaiDataProtobuf\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"clarifaiDataJson\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"coco\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              }\n            },\n            \"metadata\": {},\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"embedModelVersionIds\": [\n              \"string\"\n            ],\n            \"requestOrigin\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        },\n        \"summary\": {\n          \"top1Accuracy\": null,\n          \"top5Accuracy\": null,\n          \"macroAvgRocAuc\": null,\n          \"macroStdRocAuc\": null,\n          \"macroAvgF1Score\": null,\n          \"macroStdF1Score\": null,\n          \"macroAvgPrecision\": null,\n          \"macroAvgRecall\": null,\n          \"meanAvgPrecisionIou50\": null,\n          \"meanAvgPrecisionIouRange\": null,\n          \"lopqMetrics\": [\n            {\n              \"k\": 0,\n              \"recallVsBruteForce\": null,\n              \"kendallTauVsBruteForce\": null,\n              \"mostFrequentCodePercent\": null,\n              \"lopqNdcg\": null,\n              \"bruteForceNdcg\": null\n            }\n          ]\n        },\n        \"confusionMatrix\": {\n          \"matrix\": [\n            {\n              \"predicted\": \"string\",\n              \"actual\": \"string\",\n              \"value\": null,\n              \"predictedConcept\": {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              },\n              \"actualConcept\": {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            }\n          ],\n          \"conceptIds\": [\n            \"string\"\n          ]\n        },\n        \"cooccurrenceMatrix\": {\n          \"matrix\": [\n            {\n              \"row\": \"string\",\n              \"col\": \"string\",\n              \"count\": 0\n            }\n          ],\n          \"conceptIds\": [\n            \"string\"\n          ]\n        },\n        \"labelCounts\": {\n          \"positiveLabelCounts\": [\n            {\n              \"conceptName\": \"string\",\n              \"count\": 0,\n              \"concept\": {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            }\n          ]\n        },\n        \"binaryMetrics\": [\n          {\n            \"numPos\": 0,\n            \"numNeg\": 0,\n            \"numTot\": 0,\n            \"rocAuc\": null,\n            \"f1\": null,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"rocCurve\": {\n              \"fpr\": [\n                null\n              ],\n              \"tpr\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ],\n              \"fprPerImage\": [\n                null\n              ],\n              \"fprPerObject\": [\n                null\n              ]\n            },\n            \"precisionRecallCurve\": {\n              \"recall\": [\n                null\n              ],\n              \"precision\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ]\n            },\n            \"avgPrecision\": null,\n            \"areaName\": \"string\",\n            \"areaMin\": null,\n            \"areaMax\": null,\n            \"iou\": null\n          }\n        ],\n        \"testSet\": [\n          {\n            \"predictedConcepts\": [\n              {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            ],\n            \"groundTruthConcepts\": [\n              {\n                \"id\": \"string\",\n                \"name\": \"string\",\n                \"value\": null,\n                \"createdAt\": \"string\",\n                \"language\": \"string\",\n                \"appId\": \"string\",\n                \"definition\": \"string\",\n                \"vocabId\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"userId\": \"string\",\n                \"keypointInfo\": {\n                  \"keypointNames\": [\n                    \"string\"\n                  ],\n                  \"skeleton\": [\n                    {\n                      \"k1\": 0,\n                      \"k2\": 0\n                    }\n                  ]\n                },\n                \"extraInfo\": {\n                  \"isRankable\": true\n                }\n              }\n            ]\n          }\n        ],\n        \"metricsByArea\": [\n          {\n            \"numPos\": 0,\n            \"numNeg\": 0,\n            \"numTot\": 0,\n            \"rocAuc\": null,\n            \"f1\": null,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"rocCurve\": {\n              \"fpr\": [\n                null\n              ],\n              \"tpr\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ],\n              \"fprPerImage\": [\n                null\n              ],\n              \"fprPerObject\": [\n                null\n              ]\n            },\n            \"precisionRecallCurve\": {\n              \"recall\": [\n                null\n              ],\n              \"precision\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ]\n            },\n            \"avgPrecision\": null,\n            \"areaName\": \"string\",\n            \"areaMin\": null,\n            \"areaMax\": null,\n            \"iou\": null\n          }\n        ],\n        \"metricsByClass\": [\n          {\n            \"numPos\": 0,\n            \"numNeg\": 0,\n            \"numTot\": 0,\n            \"rocAuc\": null,\n            \"f1\": null,\n            \"concept\": {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            },\n            \"rocCurve\": {\n              \"fpr\": [\n                null\n              ],\n              \"tpr\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ],\n              \"fprPerImage\": [\n                null\n              ],\n              \"fprPerObject\": [\n                null\n              ]\n            },\n            \"precisionRecallCurve\": {\n              \"recall\": [\n                null\n              ],\n              \"precision\": [\n                null\n              ],\n              \"thresholds\": [\n                null\n              ]\n            },\n            \"avgPrecision\": null,\n            \"areaName\": \"string\",\n            \"areaMin\": null,\n            \"areaMax\": null,\n            \"iou\": null\n          }\n        ],\n        \"trackerMetrics\": [\n          {\n            \"motMota\": null,\n            \"motNumSwitches\": 0,\n            \"morseFrag\": null,\n            \"avgPrecision\": null,\n            \"aiid\": \"string\",\n            \"uniqueSwitchRate\": null\n          }\n        ],\n        \"evalInfo\": {\n          \"params\": {}\n        },\n        \"extendedMetrics\": {\n          \"userMetrics\": {}\n        }\n      },\n      \"totalInputCount\": 0,\n      \"pretrainedModelConfig\": {\n        \"inputFieldsMap\": {},\n        \"outputFieldsMap\": {},\n        \"modelZipUrl\": \"string\"\n      },\n      \"completedAt\": \"string\",\n      \"description\": \"string\",\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"metadata\": {},\n      \"license\": \"string\",\n      \"outputInfo\": {\n        \"outputConfig\": {\n          \"conceptsMutuallyExclusive\": true,\n          \"existingModelId\": \"string\",\n          \"language\": \"string\",\n          \"hyperParameters\": \"string\",\n          \"maxConcepts\": 0,\n          \"minValue\": null,\n          \"selectConcepts\": [\n            {\n              \"id\": \"string\",\n              \"name\": \"string\",\n              \"value\": null,\n              \"createdAt\": \"string\",\n              \"language\": \"string\",\n              \"appId\": \"string\",\n              \"definition\": \"string\",\n              \"vocabId\": \"string\",\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"keypointInfo\": {\n                \"keypointNames\": [\n                  \"string\"\n                ],\n                \"skeleton\": [\n                  {\n                    \"k1\": 0,\n                    \"k2\": 0\n                  }\n                ]\n              },\n              \"extraInfo\": {\n                \"isRankable\": true\n              }\n            }\n          ],\n          \"trainingTimeout\": 0,\n          \"sampleMs\": 0,\n          \"hyperParams\": {},\n          \"embedModelVersionId\": \"string\",\n          \"failOnMissingPositiveExamples\": true,\n          \"modelMetadata\": {}\n        },\n        \"message\": \"string\",\n        \"fieldsMap\": {},\n        \"params\": {},\n        \"paramsSpecs\": [\n          null\n        ]\n      },\n      \"inputInfo\": {\n        \"fieldsMap\": {},\n        \"params\": {}\n      },\n      \"trainInfo\": {\n        \"params\": {},\n        \"dataset\": {\n          \"id\": \"string\",\n          \"createdAt\": \"string\",\n          \"modifiedAt\": \"string\",\n          \"appId\": \"string\",\n          \"userId\": \"string\",\n          \"description\": \"string\",\n          \"metadata\": {},\n          \"visibility\": {\n            \"gettable\": \"string\"\n          },\n          \"defaultProcessingInfo\": {\n            \"frameInterpolationInfo\": {\n              \"sampleMs\": 0\n            }\n          },\n          \"notes\": \"string\",\n          \"version\": {\n            \"id\": \"string\",\n            \"createdAt\": \"string\",\n            \"modifiedAt\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"datasetId\": \"string\",\n            \"annotationFilterConfig\": {\n              \"ignoreEmptyInputs\": true\n            },\n            \"modelPredictConfig\": {},\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"description\": \"string\",\n            \"processingInfo\": {\n              \"frameInterpolationInfo\": {\n                \"sampleMs\": 0\n              }\n            },\n            \"metrics\": {},\n            \"exportInfo\": {\n              \"clarifaiDataProtobuf\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"clarifaiDataJson\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              },\n              \"coco\": {\n                \"format\": \"string\",\n                \"status\": {\n                  \"code\": \"string\",\n                  \"description\": \"string\",\n                  \"details\": \"string\",\n                  \"stackTrace\": [\n                    \"string\"\n                  ],\n                  \"percentCompleted\": 0,\n                  \"timeRemaining\": 0,\n                  \"reqId\": \"string\",\n                  \"internalDetails\": \"string\",\n                  \"redirectInfo\": {\n                    \"url\": \"string\",\n                    \"resourceType\": \"string\",\n                    \"oldResourceId\": \"string\",\n                    \"newResourceId\": \"string\"\n                  },\n                  \"developerNotes\": \"string\"\n                },\n                \"url\": \"string\",\n                \"size\": \"string\",\n                \"includeEmbeddings\": true\n              }\n            },\n            \"metadata\": {},\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"embedModelVersionIds\": [\n              \"string\"\n            ],\n            \"requestOrigin\": \"string\"\n          },\n          \"isStarred\": true,\n          \"starCount\": 0,\n          \"bookmarkOrigin\": {\n            \"id\": \"string\",\n            \"appId\": \"string\",\n            \"userId\": \"string\",\n            \"resourceType\": \"string\"\n          },\n          \"image\": {\n            \"url\": \"string\",\n            \"base64\": \"string\",\n            \"allowDuplicateUrl\": true,\n            \"hosted\": {\n              \"prefix\": \"string\",\n              \"suffix\": \"string\",\n              \"sizes\": [\n                \"string\"\n              ],\n              \"crossorigin\": \"string\"\n            },\n            \"imageInfo\": {\n              \"width\": 0,\n              \"height\": 0,\n              \"format\": \"string\",\n              \"colorMode\": \"string\"\n            }\n          }\n        }\n      },\n      \"importInfo\": {\n        \"params\": {}\n      },\n      \"trainLog\": \"string\",\n      \"inferenceComputeInfo\": {\n        \"numCpus\": 0,\n        \"cpuMemory\": \"string\",\n        \"numAccelerators\": 0,\n        \"acceleratorMemory\": \"string\",\n        \"acceleratorType\": [\n          \"string\"\n        ]\n      },\n      \"buildInfo\": {\n        \"dockerImageName\": \"string\",\n        \"dockerImageTag\": \"string\",\n        \"dockerImageDigest\": \"string\"\n      }\n    },\n    \"totalSize\": \"string\",\n    \"isV3\": true\n  },\n  \"contentPart\": {\n    \"rangeStart\": \"string\",\n    \"partNumber\": \"string\",\n    \"data\": \"string\"\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/models/versions/upload',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/models/{modelId}": {
      "get": {
        "summary": "Get a specific model from an app.",
        "operationId": "V2_GetModel2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "This is included so that we can re-use this request for multiple\nrpcs with and without the version_id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainedBefore",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single model.",
        "operationId": "V2_DeleteModel2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/check_consents": {
      "patch": {
        "summary": "Update model check consents",
        "operationId": "V2_PatchModelCheckConsents2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelCheckConsentResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "description": "the model id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "checkConsents": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "the consents"
                  },
                  "action": {
                    "type": "string",
                    "title": "overwrite supported"
                  }
                },
                "title": "PatchModelCheckConsentsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/inputs": {
      "get": {
        "summary": "Deprecated: Unmaintained and ideally replaced with usage of datasets\n  The server may refuse to accept requests to this endpoint.",
        "operationId": "V2_ListModelInputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/languages": {
      "patch": {
        "summary": "Update model languages tags",
        "operationId": "V2_PatchModelLanguages2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "Only overwrite supported"
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/output_info": {
      "get": {
        "summary": "Get a the output info for a given model_id or model_id/version_id\ncombo.",
        "operationId": "V2_GetModelOutputInfo2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "This is included so that we can re-use this request for multiple\nrpcs with and without the version_id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainedBefore",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/outputs": {
      "post": {
        "summary": "Get predicted outputs from the model.",
        "operationId": "V2_PostModelOutputs4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiOutputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "versionId": {
                    "type": "string"
                  },
                  "inputs": {
                    "type": "array",
                    "items": {}
                  },
                  "runnerSelector": {
                    "$ref": "#/components/schemas/apiRunnerSelector"
                  }
                },
                "description": "//////////////////////////////////////////////////\nModel prediction related stuff needs inputs and produces outputs.\n//////////////////////////////////////////////////\nModel prediction."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/publish": {
      "post": {
        "summary": "PostModelVersionsPublish",
        "operationId": "V2_PostModelVersionsPublish2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "publications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModelVersionPublishRequest"
                    }
                  }
                },
                "title": "PostModelVersionsPublishRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/references": {
      "get": {
        "summary": "Lists model references tied to a particular model id.",
        "operationId": "V2_ListModelReferences2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelReferenceResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Optional, defaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "Optional, defaults to 128 references per page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/toolkits": {
      "patch": {
        "summary": "Update model toolkits tags",
        "operationId": "V2_PatchModelToolkits2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelToolkitResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "toolkits": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "overwrite supported"
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/unpublish": {
      "post": {
        "summary": "PostModelVersionsUnPublish",
        "operationId": "V2_PostModelVersionsUnPublish2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "publications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModelVersionUnpublishRequest"
                    }
                  }
                },
                "title": "PostModelVersionsUnPublishRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/usecases": {
      "patch": {
        "summary": "Update model use_cases tags",
        "operationId": "V2_PatchModelUseCases2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelUseCaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "usecases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "overwrite supported"
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions": {
      "get": {
        "summary": "List all the models.",
        "operationId": "V2_ListModelVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "conceptIds",
            "description": "Filtering options:\nTo list only the model versions that have these concept ids present in them.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "trainedOnly",
            "description": "To list only the model versions that have been trained.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStatusCode",
            "description": "Whether to order by the status code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByNumInputs",
            "description": "Whether to order by the number of training inputs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByDescription",
            "description": "Whether to sort by the description",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time\nIf neither sort option is set to true, will sort by created_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Create a new model version to trigger training of the model.",
        "operationId": "V2_PostModelVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "modelVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModelVersion"
                    }
                  },
                  "description": {
                    "type": "string",
                    "title": "Description about this training run"
                  },
                  "evalInfo": {
                    "$ref": "#/components/schemas/apiEvalInfo"
                  }
                },
                "description": "Create (train) a new model version."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/time_estimate": {
      "post": {
        "summary": "Get the training time estimate based off train request and estimated input count.",
        "operationId": "V2_PostModelVersionsTrainingTimeEstimate2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTrainingTimeEstimateResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "modelVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModelVersion"
                    }
                  },
                  "estimatedInputCount": {
                    "type": "string",
                    "format": "uint64"
                  }
                },
                "title": "Get the estimated training time for a model version"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{modelVersionId}/evaluations": {
      "get": {
        "summary": "Deprecated, use GetEvaluation instead\nList the evaluation metrics for a model version.",
        "operationId": "V2_ListModelVersionEvaluations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Deprecated, use PostEvaluations instead",
        "operationId": "V2_PostModelVersionEvaluations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "evalMetrics": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiEvalMetrics"
                    },
                    "title": "EvalInfo and ID will be used when creating the evaluation"
                  }
                },
                "title": "Evaluate this model vesion"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{modelVersionId}/evaluations/{evaluationId}": {
      "get": {
        "summary": "Deprecated, use GetEvaluation instead\nGet an evaluation metrics for a model version.",
        "operationId": "V2_GetModelVersionEvaluation2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields.confusionMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.cooccurrenceMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.labelCounts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.binaryMetrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.testSet",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByArea",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByClass",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{modelVersionId}/input_examples": {
      "get": {
        "summary": "ListModelVersionInputExamples",
        "operationId": "V2_ListModelVersionInputExamples2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelVersionInputExampleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "description": "id of model the example belongs to",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "description": "specific version the example belongs to",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Optional, defaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "Optional, defaults to 128 references per page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{modelVersionId}/input_examples/{exampleId}": {
      "get": {
        "summary": "GetModelVersionInputExample",
        "operationId": "V2_GetModelVersionInputExample2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionInputExampleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "description": "id of model the example belongs to",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "description": "specific version the example belongs to",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exampleId",
            "description": "Id of example to fetch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{versionId}": {
      "get": {
        "summary": "Get a specific model from an app.",
        "operationId": "V2_GetModelVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single model.",
        "operationId": "V2_DeleteModelVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{versionId}/exports": {
      "get": {
        "summary": "GetModelVersionExport",
        "operationId": "V2_GetModelVersionExport2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionExportResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "put": {
        "summary": "Export a model",
        "operationId": "V2_PutModelVersionExports2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionExportResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{versionId}/inputs": {
      "get": {
        "summary": "Deprecated: Unmaintained and ideally replaced with usage of datasets\n  The server may refuse to accept requests to this endpoint.",
        "operationId": "V2_ListModelInputs4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{versionId}/metrics": {
      "get": {
        "summary": "Get the evaluation metrics for a model version.\nDeprecated: Use GetEvaluation instead\n  The server may refuse to accept requests to this endpoint.",
        "operationId": "V2_GetModelVersionMetrics2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields.confusionMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.cooccurrenceMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.labelCounts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.binaryMetrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.testSet",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByArea",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByClass",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Deprecated, use PostEvaluations instead\nRun the evaluation metrics for a model version.",
        "operationId": "V2_PostModelVersionMetrics2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "testSearch": {
                    "$ref": "#/components/schemas/apiSearch"
                  },
                  "evalInfo": {
                    "$ref": "#/components/schemas/apiEvalInfo"
                  }
                },
                "description": "Evaluate this model version."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{versionId}/output_info": {
      "get": {
        "summary": "Get a the output info for a given model_id or model_id/version_id\ncombo.",
        "operationId": "V2_GetModelOutputInfo4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "This is included so that we can re-use this request for multiple\nrpcs with and without the version_id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainedBefore",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/models/{modelId}/versions/{versionId}/outputs": {
      "post": {
        "summary": "Get predicted outputs from the model.",
        "operationId": "V2_PostModelOutputs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiOutputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "inputs": {
                    "type": "array",
                    "items": {}
                  },
                  "runnerSelector": {
                    "$ref": "#/components/schemas/apiRunnerSelector"
                  }
                },
                "description": "//////////////////////////////////////////////////\nModel prediction related stuff needs inputs and produces outputs.\n//////////////////////////////////////////////////\nModel prediction."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/modules": {
      "get": {
        "summary": "List all the modules in community, by user or by app.",
        "operationId": "V2_ListModules3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModuleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the app",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "If neither sort option is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortById",
            "description": "Whether to order by the external id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "Filtering options:",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter modules by bookmark. If set, only return bookmarked modules. Otherwise none bookmarked modules only.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the module:\n  - id\n  - description\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Filter by the id and description of the module. This supports wildcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterByUserId",
            "description": "Filter by the application owner whose this module belongs to\nDeprecated: use search instead of name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/modules?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByCreatedAt=&sortByStarCount=&sortByModifiedAt=&sortById=&starredOnly=&bookmark=&search=&name=&filterByUserId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/modules?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByCreatedAt=&sortByStarCount=&sortByModifiedAt=&sortById=&starredOnly=&bookmark=&search=&name=&filterByUserId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/modules?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortByCreatedAt=&sortByStarCount=&sortByModifiedAt=&sortById=&starredOnly=&bookmark=&search=&name=&filterByUserId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/my_scopes": {
      "get": {
        "summary": "API Keys in the public API -- request is itself Key authorized, and will tell\nthe user the scopes/access of the key/credential they're providing, as computed by\nour authorizer:",
        "operationId": "V2_MyScopes3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiScopeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/my_scopes?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/my_scopes?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/my_scopes?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/myscopes": {
      "get": {
        "summary": "API Keys in the public API -- request is itself Key authorized, and will tell\nthe user the scopes/access of the key/credential they're providing, as computed by\nour authorizer:",
        "operationId": "V2_MyScopes2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiScopeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/myscopes?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/myscopes?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/myscopes?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/myscopesroot": {
      "get": {
        "operationId": "V2_MyScopesRoot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiScopeRootResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/myscopesroot' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/myscopesroot\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/myscopesroot',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/open_source_licenses": {
      "get": {
        "summary": "List all the supported open source licenses in the platform.",
        "operationId": "V2_ListOpenSourceLicenses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiListOpenSourceLicensesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/open_source_licenses' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/open_source_licenses\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/open_source_licenses',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/resource_counts": {
      "get": {
        "summary": "List the resource counts for the app.",
        "operationId": "V2_GetResourceCounts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiGetResourceCountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/resource_counts?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/resource_counts?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/resource_counts?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/runners/items/process": {
      "post": {
        "summary": "This maintains a single request for asking the API if there is any work to be done, processing\nit and streaming back results.\nTo do that first handshake the MultiRunnerItemOutputResponse will have RUNNER_STREAM_START\nstatus filled in so that the API knows to respond with a MultiRunnerItemResponse.\nFor now there will only be one of those if the model prediction only has one request.\nNOTE(zeiler): downside of this is you can't use HTTP REST requests to do runner work.",
        "operationId": "V2_ProcessRunnerItems",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiMultiRunnerItemResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  },
                  "title": "Stream result of apiMultiRunnerItemResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostRunnerItemOutputsRequest"
              }
            }
          },
          "description": "PostRunnerItemOutputsRequest\nThis is the message that runners send to the API to communicate.\nAt the end of the request it will have the RunnerItemOutput filled in\nwith results of the workload the runner is processing. Other messages\nfrom the runner use this same proto to communicate over to the API\nand do handshakes. (streaming inputs)",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/runners/items/process' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"nodepoolId\": \"string\",\n  \"runnerId\": \"string\",\n  \"runnerItemId\": \"string\",\n  \"runnerItemOutputs\": [\n    {\n      \"multiOutputResponse\": {\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"outputs\": [\n          {\n            \"id\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"createdAt\": \"string\"\n          }\n        ]\n      }\n    }\n  ],\n  \"status\": {\n    \"code\": \"string\",\n    \"description\": \"string\",\n    \"details\": \"string\",\n    \"stackTrace\": [\n      \"string\"\n    ],\n    \"percentCompleted\": 0,\n    \"timeRemaining\": 0,\n    \"reqId\": \"string\",\n    \"internalDetails\": \"string\",\n    \"redirectInfo\": {\n      \"url\": \"string\",\n      \"resourceType\": \"string\",\n      \"oldResourceId\": \"string\",\n      \"newResourceId\": \"string\"\n    },\n    \"developerNotes\": \"string\"\n  },\n  \"runnerReplicaId\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"nodepoolId\": \"string\",\n  \"runnerId\": \"string\",\n  \"runnerItemId\": \"string\",\n  \"runnerItemOutputs\": [\n    {\n      \"multiOutputResponse\": {\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"outputs\": [\n          {\n            \"id\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"createdAt\": \"string\"\n          }\n        ]\n      }\n    }\n  ],\n  \"status\": {\n    \"code\": \"string\",\n    \"description\": \"string\",\n    \"details\": \"string\",\n    \"stackTrace\": [\n      \"string\"\n    ],\n    \"percentCompleted\": 0,\n    \"timeRemaining\": 0,\n    \"reqId\": \"string\",\n    \"internalDetails\": \"string\",\n    \"redirectInfo\": {\n      \"url\": \"string\",\n      \"resourceType\": \"string\",\n      \"oldResourceId\": \"string\",\n      \"newResourceId\": \"string\"\n    },\n    \"developerNotes\": \"string\"\n  },\n  \"runnerReplicaId\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/runners/items/process\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"nodepoolId\": \"string\",\n  \"runnerId\": \"string\",\n  \"runnerItemId\": \"string\",\n  \"runnerItemOutputs\": [\n    {\n      \"multiOutputResponse\": {\n        \"status\": {\n          \"code\": \"string\",\n          \"description\": \"string\",\n          \"details\": \"string\",\n          \"stackTrace\": [\n            \"string\"\n          ],\n          \"percentCompleted\": 0,\n          \"timeRemaining\": 0,\n          \"reqId\": \"string\",\n          \"internalDetails\": \"string\",\n          \"redirectInfo\": {\n            \"url\": \"string\",\n            \"resourceType\": \"string\",\n            \"oldResourceId\": \"string\",\n            \"newResourceId\": \"string\"\n          },\n          \"developerNotes\": \"string\"\n        },\n        \"outputs\": [\n          {\n            \"id\": \"string\",\n            \"status\": {\n              \"code\": \"string\",\n              \"description\": \"string\",\n              \"details\": \"string\",\n              \"stackTrace\": [\n                \"string\"\n              ],\n              \"percentCompleted\": 0,\n              \"timeRemaining\": 0,\n              \"reqId\": \"string\",\n              \"internalDetails\": \"string\",\n              \"redirectInfo\": {\n                \"url\": \"string\",\n                \"resourceType\": \"string\",\n                \"oldResourceId\": \"string\",\n                \"newResourceId\": \"string\"\n              },\n              \"developerNotes\": \"string\"\n            },\n            \"createdAt\": \"string\"\n          }\n        ]\n      }\n    }\n  ],\n  \"status\": {\n    \"code\": \"string\",\n    \"description\": \"string\",\n    \"details\": \"string\",\n    \"stackTrace\": [\n      \"string\"\n    ],\n    \"percentCompleted\": 0,\n    \"timeRemaining\": 0,\n    \"reqId\": \"string\",\n    \"internalDetails\": \"string\",\n    \"redirectInfo\": {\n      \"url\": \"string\",\n      \"resourceType\": \"string\",\n      \"oldResourceId\": \"string\",\n      \"newResourceId\": \"string\"\n    },\n    \"developerNotes\": \"string\"\n  },\n  \"runnerReplicaId\": \"string\"\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/runners/items/process',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/searches": {
      "get": {
        "summary": "List all saved legacy searches.",
        "operationId": "V2_ListSearches2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/searches?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/searches?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/searches?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Execute a new search and optionally save it.",
        "description": "Deprecated: Use PostInputsSearches or PostAnnotationsSearches instead.\n The server may refuse to accept requests to this endpoint.",
        "operationId": "V2_PostSearches2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/searches' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"query\": {\n    \"ands\": [\n      {\n        \"output\": {\n          \"id\": \"string\",\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"createdAt\": \"string\"\n        },\n        \"negate\": true\n      }\n    ],\n    \"language\": \"string\",\n    \"filters\": [\n      {\n        \"negate\": true,\n        \"lastUpdatedTimeRange\": {\n          \"startTime\": \"string\",\n          \"endTime\": \"string\"\n        }\n      }\n    ],\n    \"ranks\": [\n      {\n        \"negate\": true\n      }\n    ]\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"query\": {\n    \"ands\": [\n      {\n        \"output\": {\n          \"id\": \"string\",\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"createdAt\": \"string\"\n        },\n        \"negate\": true\n      }\n    ],\n    \"language\": \"string\",\n    \"filters\": [\n      {\n        \"negate\": true,\n        \"lastUpdatedTimeRange\": {\n          \"startTime\": \"string\",\n          \"endTime\": \"string\"\n        }\n      }\n    ],\n    \"ranks\": [\n      {\n        \"negate\": true\n      }\n    ]\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/searches\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"query\": {\n    \"ands\": [\n      {\n        \"output\": {\n          \"id\": \"string\",\n          \"status\": {\n            \"code\": \"string\",\n            \"description\": \"string\",\n            \"details\": \"string\",\n            \"stackTrace\": [\n              \"string\"\n            ],\n            \"percentCompleted\": 0,\n            \"timeRemaining\": 0,\n            \"reqId\": \"string\",\n            \"internalDetails\": \"string\",\n            \"redirectInfo\": {\n              \"url\": \"string\",\n              \"resourceType\": \"string\",\n              \"oldResourceId\": \"string\",\n              \"newResourceId\": \"string\"\n            },\n            \"developerNotes\": \"string\"\n          },\n          \"createdAt\": \"string\"\n        },\n        \"negate\": true\n      }\n    ],\n    \"language\": \"string\",\n    \"filters\": [\n      {\n        \"negate\": true,\n        \"lastUpdatedTimeRange\": {\n          \"startTime\": \"string\",\n          \"endTime\": \"string\"\n        }\n      }\n    ],\n    \"ranks\": [\n      {\n        \"negate\": true\n      }\n    ]\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/searches',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch saved legacy searches by ids.",
        "operationId": "V2_PatchSearches2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/searches' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/searches\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"searches\": [\n    {\n      \"query\": {\n        \"ands\": [\n          {\n            \"output\": {\n              \"id\": \"string\",\n              \"status\": {\n                \"code\": \"string\",\n                \"description\": \"string\",\n                \"details\": \"string\",\n                \"stackTrace\": [\n                  \"string\"\n                ],\n                \"percentCompleted\": 0,\n                \"timeRemaining\": 0,\n                \"reqId\": \"string\",\n                \"internalDetails\": \"string\",\n                \"redirectInfo\": {\n                  \"url\": \"string\",\n                  \"resourceType\": \"string\",\n                  \"oldResourceId\": \"string\",\n                  \"newResourceId\": \"string\"\n                },\n                \"developerNotes\": \"string\"\n              },\n              \"createdAt\": \"string\"\n            },\n            \"negate\": true\n          }\n        ],\n        \"language\": \"string\",\n        \"filters\": [\n          {\n            \"negate\": true,\n            \"lastUpdatedTimeRange\": {\n              \"startTime\": \"string\",\n              \"endTime\": \"string\"\n            }\n          }\n        ],\n        \"ranks\": [\n          {\n            \"negate\": true\n          }\n        ]\n      },\n      \"id\": \"string\",\n      \"applicationId\": \"string\",\n      \"name\": \"string\",\n      \"asOf\": \"string\",\n      \"gitHash\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"algorithm\": \"string\",\n      \"save\": true,\n      \"minValue\": null,\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"metric\": \"string\"\n    }\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/searches',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/searches/{id}": {
      "get": {
        "summary": "Get a saved legacy search.",
        "operationId": "V2_GetSearch2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --globoff 'https://api.clarifai.com/v2/searches/{id}?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/searches/{id}?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/searches/{id}?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete a saved search.",
        "operationId": "V2_DeleteSearch2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --globoff --request DELETE 'https://api.clarifai.com/v2/searches/{id}?userAppId.userId=&userAppId.appId=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/searches/{id}?userAppId.userId=&userAppId.appId=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/searches/{id}?userAppId.userId=&userAppId.appId=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Execute a previously saved legacy search.",
        "operationId": "V2_PostSearchesByID2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID for saves search to be executed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/apiPagination"
                  }
                },
                "title": "PostSearchesByIDRequest performs returns results of a saved search given its ID"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --globoff 'https://api.clarifai.com/v2/searches/{id}' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/searches/{id}\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"pagination\": {\n    \"page\": 0,\n    \"perPage\": 0\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/searches/{id}',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/stats/values": {
      "post": {
        "summary": "PostStatValues",
        "operationId": "V2_PostStatValues2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiStatValueResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostStatValuesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/stats/values' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"statValues\": [\n    {\n      \"time\": \"string\",\n      \"value\": null,\n      \"tags\": [\n        \"string\"\n      ]\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"statValues\": [\n    {\n      \"time\": \"string\",\n      \"value\": null,\n      \"tags\": [\n        \"string\"\n      ]\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/stats/values\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"statValues\": [\n    {\n      \"time\": \"string\",\n      \"value\": null,\n      \"tags\": [\n        \"string\"\n      ]\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/stats/values',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/stats/values/aggregate": {
      "post": {
        "summary": "PostStatValuesAggregate",
        "operationId": "V2_PostStatValuesAggregate2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiStatValueAggregateResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostStatValuesAggregateRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/stats/values/aggregate' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"statValueAggregateQueries\": [\n    {\n      \"tags\": [\n        \"string\"\n      ],\n      \"tagGroups\": [\n        \"string\"\n      ],\n      \"statValueAggType\": \"string\",\n      \"statTimeAggType\": \"string\",\n      \"startTime\": \"string\",\n      \"endTime\": \"string\"\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"statValueAggregateQueries\": [\n    {\n      \"tags\": [\n        \"string\"\n      ],\n      \"tagGroups\": [\n        \"string\"\n      ],\n      \"statValueAggType\": \"string\",\n      \"statTimeAggType\": \"string\",\n      \"startTime\": \"string\",\n      \"endTime\": \"string\"\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/stats/values/aggregate\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"statValueAggregateQueries\": [\n    {\n      \"tags\": [\n        \"string\"\n      ],\n      \"tagGroups\": [\n        \"string\"\n      ],\n      \"statValueAggType\": \"string\",\n      \"statTimeAggType\": \"string\",\n      \"startTime\": \"string\",\n      \"endTime\": \"string\"\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/stats/values/aggregate',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/status_codes": {
      "get": {
        "summary": "List all status codes.",
        "operationId": "V2_ListStatusCodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiStatusCodeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/status_codes' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/status_codes\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/status_codes',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/status_codes/{statusCodeId}": {
      "get": {
        "summary": "Get more details for a status code.",
        "operationId": "V2_GetStatusCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleStatusCodeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "statusCodeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/tasks": {
      "get": {
        "summary": "List tasks from an app.",
        "operationId": "V2_ListTasks2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTaskResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "workerUserIds",
            "description": "Get tasks that have ANY user from this list assigned as worker.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "reviewUserIds",
            "description": "Get tasks that have ANY user from this list assigned as reviewer.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "labelOrderIds",
            "description": "Get tasks that are associated to ANY label order from this list.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "includingLabelOrderTasks",
            "description": "Get label order tasks as well\nIt is automatically set to true if label_order_ids is set.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response.\nCurrently supported additional fields:\n- all\n- worker.users\n- review.users\n- metrics.input_source.inputs_count_estimated\n- metrics.work.inputs_count_estimated\n- metrics.work.inputs_percent_estimated\n- metrics.review.inputs_count_estimated\n- metrics.review.inputs_percent_estimated",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids",
            "description": "(optional) task IDs to filter on",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/tasks?userAppId.userId=&userAppId.appId=&page=&perPage=&workerUserIds=&reviewUserIds=&labelOrderIds=&includingLabelOrderTasks=&additionalFields=&ids=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/tasks?userAppId.userId=&userAppId.appId=&page=&perPage=&workerUserIds=&reviewUserIds=&labelOrderIds=&includingLabelOrderTasks=&additionalFields=&ids=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/tasks?userAppId.userId=&userAppId.appId=&page=&perPage=&workerUserIds=&reviewUserIds=&labelOrderIds=&includingLabelOrderTasks=&additionalFields=&ids=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete multiple tasks in one request.",
        "operationId": "V2_DeleteTasks2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteTasksRequest"
              }
            }
          },
          "description": "Request to delete a list of tasks.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/tasks' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/tasks\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/tasks',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Add tasks to an app.",
        "operationId": "V2_PostTasks2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTaskResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostTasksRequest"
              }
            }
          },
          "description": "Request to create Tasks.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/tasks' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"tasks\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"type\": \"string\",\n      \"description\": \"string\",\n      \"worker\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"partitionedStrategyInfo\": {\n          \"type\": \"string\",\n          \"workersPerInput\": 0,\n          \"weights\": {}\n        },\n        \"workers\": [\n          {\n            \"user\": {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            },\n            \"workflow\": {\n              \"id\": \"string\",\n              \"appId\": \"string\",\n              \"createdAt\": \"string\",\n              \"nodes\": [\n                {\n                  \"id\": \"string\",\n                  \"nodeInputs\": [\n                    {\n                      \"nodeId\": \"string\"\n                    }\n                  ],\n                  \"suppressOutput\": true,\n                  \"outputInfoOverride\": {\n                    \"outputConfig\": {\n                      \"conceptsMutuallyExclusive\": true,\n                      \"existingModelId\": \"string\",\n                      \"language\": \"string\",\n                      \"hyperParameters\": \"string\",\n                      \"maxConcepts\": 0,\n                      \"minValue\": null,\n                      \"selectConcepts\": [\n                        {\n                          \"id\": \"string\",\n                          \"name\": \"string\",\n                          \"value\": null,\n                          \"createdAt\": \"string\",\n                          \"language\": \"string\",\n                          \"appId\": \"string\",\n                          \"definition\": \"string\",\n                          \"vocabId\": \"string\",\n                          \"visibility\": {\n                            \"gettable\": \"string\"\n                          },\n                          \"userId\": \"string\",\n                          \"keypointInfo\": {\n                            \"keypointNames\": [\n                              \"string\"\n                            ],\n                            \"skeleton\": [\n                              {\n                                \"k1\": 0,\n                                \"k2\": 0\n                              }\n                            ]\n                          },\n                          \"extraInfo\": {\n                            \"isRankable\": true\n                          }\n                        }\n                      ],\n                      \"trainingTimeout\": 0,\n                      \"sampleMs\": 0,\n                      \"hyperParams\": {},\n                      \"embedModelVersionId\": \"string\",\n                      \"failOnMissingPositiveExamples\": true,\n                      \"modelMetadata\": {}\n                    },\n                    \"message\": \"string\",\n                    \"fieldsMap\": {},\n                    \"params\": {},\n                    \"paramsSpecs\": [\n                      null\n                    ]\n                  }\n                }\n              ],\n              \"metadata\": {},\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"modifiedAt\": \"string\",\n              \"version\": {\n                \"id\": \"string\",\n                \"workflowId\": \"string\",\n                \"createdAt\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"description\": \"string\",\n                \"license\": \"string\"\n              },\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"description\": \"string\",\n              \"notes\": \"string\",\n              \"useCases\": [\n                \"string\"\n              ],\n              \"checkConsents\": [\n                \"string\"\n              ],\n              \"bookmarkOrigin\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"resourceType\": \"string\"\n              },\n              \"image\": {\n                \"url\": \"string\",\n                \"base64\": \"string\",\n                \"allowDuplicateUrl\": true,\n                \"hosted\": {\n                  \"prefix\": \"string\",\n                  \"suffix\": \"string\",\n                  \"sizes\": [\n                    \"string\"\n                  ],\n                  \"crossorigin\": \"string\"\n                },\n                \"imageInfo\": {\n                  \"width\": 0,\n                  \"height\": 0,\n                  \"format\": \"string\",\n                  \"colorMode\": \"string\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"conceptIds\": [\n        \"string\"\n      ],\n      \"inputSource\": {\n        \"type\": \"string\",\n        \"id\": \"string\"\n      },\n      \"sampleMs\": 0,\n      \"aiAssistant\": {\n        \"workflowId\": \"string\"\n      },\n      \"review\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"manualStrategyInfo\": {\n          \"samplePercentage\": null\n        },\n        \"consensusStrategyInfo\": {\n          \"approvalThreshold\": 0\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"name\": \"string\",\n      \"aiAssistParams\": {\n        \"minThreshold\": null,\n        \"maxThreshold\": null,\n        \"conceptRelationIds\": [\n          \"string\"\n        ]\n      },\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"labelOrderId\": \"string\",\n      \"concepts\": [\n        {\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"autoAnnotationConfig\": {\n            \"annotationDataTypes\": 0,\n            \"thresholdRange\": {\n              \"isLowerInclusive\": true,\n              \"isUpperInclusive\": true,\n              \"lower\": null,\n              \"upper\": null\n            },\n            \"statusCode\": \"string\"\n          }\n        }\n      ],\n      \"deletePreviousAnnotations\": true,\n      \"metrics\": {\n        \"work\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"review\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"inputSource\": {\n          \"inputsCountEstimated\": \"string\"\n        }\n      }\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"tasks\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"type\": \"string\",\n      \"description\": \"string\",\n      \"worker\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"partitionedStrategyInfo\": {\n          \"type\": \"string\",\n          \"workersPerInput\": 0,\n          \"weights\": {}\n        },\n        \"workers\": [\n          {\n            \"user\": {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            },\n            \"workflow\": {\n              \"id\": \"string\",\n              \"appId\": \"string\",\n              \"createdAt\": \"string\",\n              \"nodes\": [\n                {\n                  \"id\": \"string\",\n                  \"nodeInputs\": [\n                    {\n                      \"nodeId\": \"string\"\n                    }\n                  ],\n                  \"suppressOutput\": true,\n                  \"outputInfoOverride\": {\n                    \"outputConfig\": {\n                      \"conceptsMutuallyExclusive\": true,\n                      \"existingModelId\": \"string\",\n                      \"language\": \"string\",\n                      \"hyperParameters\": \"string\",\n                      \"maxConcepts\": 0,\n                      \"minValue\": null,\n                      \"selectConcepts\": [\n                        {\n                          \"id\": \"string\",\n                          \"name\": \"string\",\n                          \"value\": null,\n                          \"createdAt\": \"string\",\n                          \"language\": \"string\",\n                          \"appId\": \"string\",\n                          \"definition\": \"string\",\n                          \"vocabId\": \"string\",\n                          \"visibility\": {\n                            \"gettable\": \"string\"\n                          },\n                          \"userId\": \"string\",\n                          \"keypointInfo\": {\n                            \"keypointNames\": [\n                              \"string\"\n                            ],\n                            \"skeleton\": [\n                              {\n                                \"k1\": 0,\n                                \"k2\": 0\n                              }\n                            ]\n                          },\n                          \"extraInfo\": {\n                            \"isRankable\": true\n                          }\n                        }\n                      ],\n                      \"trainingTimeout\": 0,\n                      \"sampleMs\": 0,\n                      \"hyperParams\": {},\n                      \"embedModelVersionId\": \"string\",\n                      \"failOnMissingPositiveExamples\": true,\n                      \"modelMetadata\": {}\n                    },\n                    \"message\": \"string\",\n                    \"fieldsMap\": {},\n                    \"params\": {},\n                    \"paramsSpecs\": [\n                      null\n                    ]\n                  }\n                }\n              ],\n              \"metadata\": {},\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"modifiedAt\": \"string\",\n              \"version\": {\n                \"id\": \"string\",\n                \"workflowId\": \"string\",\n                \"createdAt\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"description\": \"string\",\n                \"license\": \"string\"\n              },\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"description\": \"string\",\n              \"notes\": \"string\",\n              \"useCases\": [\n                \"string\"\n              ],\n              \"checkConsents\": [\n                \"string\"\n              ],\n              \"bookmarkOrigin\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"resourceType\": \"string\"\n              },\n              \"image\": {\n                \"url\": \"string\",\n                \"base64\": \"string\",\n                \"allowDuplicateUrl\": true,\n                \"hosted\": {\n                  \"prefix\": \"string\",\n                  \"suffix\": \"string\",\n                  \"sizes\": [\n                    \"string\"\n                  ],\n                  \"crossorigin\": \"string\"\n                },\n                \"imageInfo\": {\n                  \"width\": 0,\n                  \"height\": 0,\n                  \"format\": \"string\",\n                  \"colorMode\": \"string\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"conceptIds\": [\n        \"string\"\n      ],\n      \"inputSource\": {\n        \"type\": \"string\",\n        \"id\": \"string\"\n      },\n      \"sampleMs\": 0,\n      \"aiAssistant\": {\n        \"workflowId\": \"string\"\n      },\n      \"review\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"manualStrategyInfo\": {\n          \"samplePercentage\": null\n        },\n        \"consensusStrategyInfo\": {\n          \"approvalThreshold\": 0\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"name\": \"string\",\n      \"aiAssistParams\": {\n        \"minThreshold\": null,\n        \"maxThreshold\": null,\n        \"conceptRelationIds\": [\n          \"string\"\n        ]\n      },\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"labelOrderId\": \"string\",\n      \"concepts\": [\n        {\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"autoAnnotationConfig\": {\n            \"annotationDataTypes\": 0,\n            \"thresholdRange\": {\n              \"isLowerInclusive\": true,\n              \"isUpperInclusive\": true,\n              \"lower\": null,\n              \"upper\": null\n            },\n            \"statusCode\": \"string\"\n          }\n        }\n      ],\n      \"deletePreviousAnnotations\": true,\n      \"metrics\": {\n        \"work\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"review\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"inputSource\": {\n          \"inputsCountEstimated\": \"string\"\n        }\n      }\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/tasks\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"tasks\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"type\": \"string\",\n      \"description\": \"string\",\n      \"worker\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"partitionedStrategyInfo\": {\n          \"type\": \"string\",\n          \"workersPerInput\": 0,\n          \"weights\": {}\n        },\n        \"workers\": [\n          {\n            \"user\": {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            },\n            \"workflow\": {\n              \"id\": \"string\",\n              \"appId\": \"string\",\n              \"createdAt\": \"string\",\n              \"nodes\": [\n                {\n                  \"id\": \"string\",\n                  \"nodeInputs\": [\n                    {\n                      \"nodeId\": \"string\"\n                    }\n                  ],\n                  \"suppressOutput\": true,\n                  \"outputInfoOverride\": {\n                    \"outputConfig\": {\n                      \"conceptsMutuallyExclusive\": true,\n                      \"existingModelId\": \"string\",\n                      \"language\": \"string\",\n                      \"hyperParameters\": \"string\",\n                      \"maxConcepts\": 0,\n                      \"minValue\": null,\n                      \"selectConcepts\": [\n                        {\n                          \"id\": \"string\",\n                          \"name\": \"string\",\n                          \"value\": null,\n                          \"createdAt\": \"string\",\n                          \"language\": \"string\",\n                          \"appId\": \"string\",\n                          \"definition\": \"string\",\n                          \"vocabId\": \"string\",\n                          \"visibility\": {\n                            \"gettable\": \"string\"\n                          },\n                          \"userId\": \"string\",\n                          \"keypointInfo\": {\n                            \"keypointNames\": [\n                              \"string\"\n                            ],\n                            \"skeleton\": [\n                              {\n                                \"k1\": 0,\n                                \"k2\": 0\n                              }\n                            ]\n                          },\n                          \"extraInfo\": {\n                            \"isRankable\": true\n                          }\n                        }\n                      ],\n                      \"trainingTimeout\": 0,\n                      \"sampleMs\": 0,\n                      \"hyperParams\": {},\n                      \"embedModelVersionId\": \"string\",\n                      \"failOnMissingPositiveExamples\": true,\n                      \"modelMetadata\": {}\n                    },\n                    \"message\": \"string\",\n                    \"fieldsMap\": {},\n                    \"params\": {},\n                    \"paramsSpecs\": [\n                      null\n                    ]\n                  }\n                }\n              ],\n              \"metadata\": {},\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"modifiedAt\": \"string\",\n              \"version\": {\n                \"id\": \"string\",\n                \"workflowId\": \"string\",\n                \"createdAt\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"description\": \"string\",\n                \"license\": \"string\"\n              },\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"description\": \"string\",\n              \"notes\": \"string\",\n              \"useCases\": [\n                \"string\"\n              ],\n              \"checkConsents\": [\n                \"string\"\n              ],\n              \"bookmarkOrigin\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"resourceType\": \"string\"\n              },\n              \"image\": {\n                \"url\": \"string\",\n                \"base64\": \"string\",\n                \"allowDuplicateUrl\": true,\n                \"hosted\": {\n                  \"prefix\": \"string\",\n                  \"suffix\": \"string\",\n                  \"sizes\": [\n                    \"string\"\n                  ],\n                  \"crossorigin\": \"string\"\n                },\n                \"imageInfo\": {\n                  \"width\": 0,\n                  \"height\": 0,\n                  \"format\": \"string\",\n                  \"colorMode\": \"string\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"conceptIds\": [\n        \"string\"\n      ],\n      \"inputSource\": {\n        \"type\": \"string\",\n        \"id\": \"string\"\n      },\n      \"sampleMs\": 0,\n      \"aiAssistant\": {\n        \"workflowId\": \"string\"\n      },\n      \"review\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"manualStrategyInfo\": {\n          \"samplePercentage\": null\n        },\n        \"consensusStrategyInfo\": {\n          \"approvalThreshold\": 0\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"name\": \"string\",\n      \"aiAssistParams\": {\n        \"minThreshold\": null,\n        \"maxThreshold\": null,\n        \"conceptRelationIds\": [\n          \"string\"\n        ]\n      },\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"labelOrderId\": \"string\",\n      \"concepts\": [\n        {\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"autoAnnotationConfig\": {\n            \"annotationDataTypes\": 0,\n            \"thresholdRange\": {\n              \"isLowerInclusive\": true,\n              \"isUpperInclusive\": true,\n              \"lower\": null,\n              \"upper\": null\n            },\n            \"statusCode\": \"string\"\n          }\n        }\n      ],\n      \"deletePreviousAnnotations\": true,\n      \"metrics\": {\n        \"work\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"review\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"inputSource\": {\n          \"inputsCountEstimated\": \"string\"\n        }\n      }\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/tasks',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more tasks.",
        "operationId": "V2_PatchTasks2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTaskResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchTasksRequest"
              }
            }
          },
          "description": "Request to patch a list of tasks.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/tasks' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"tasks\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"type\": \"string\",\n      \"description\": \"string\",\n      \"worker\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"partitionedStrategyInfo\": {\n          \"type\": \"string\",\n          \"workersPerInput\": 0,\n          \"weights\": {}\n        },\n        \"workers\": [\n          {\n            \"user\": {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            },\n            \"workflow\": {\n              \"id\": \"string\",\n              \"appId\": \"string\",\n              \"createdAt\": \"string\",\n              \"nodes\": [\n                {\n                  \"id\": \"string\",\n                  \"nodeInputs\": [\n                    {\n                      \"nodeId\": \"string\"\n                    }\n                  ],\n                  \"suppressOutput\": true,\n                  \"outputInfoOverride\": {\n                    \"outputConfig\": {\n                      \"conceptsMutuallyExclusive\": true,\n                      \"existingModelId\": \"string\",\n                      \"language\": \"string\",\n                      \"hyperParameters\": \"string\",\n                      \"maxConcepts\": 0,\n                      \"minValue\": null,\n                      \"selectConcepts\": [\n                        {\n                          \"id\": \"string\",\n                          \"name\": \"string\",\n                          \"value\": null,\n                          \"createdAt\": \"string\",\n                          \"language\": \"string\",\n                          \"appId\": \"string\",\n                          \"definition\": \"string\",\n                          \"vocabId\": \"string\",\n                          \"visibility\": {\n                            \"gettable\": \"string\"\n                          },\n                          \"userId\": \"string\",\n                          \"keypointInfo\": {\n                            \"keypointNames\": [\n                              \"string\"\n                            ],\n                            \"skeleton\": [\n                              {\n                                \"k1\": 0,\n                                \"k2\": 0\n                              }\n                            ]\n                          },\n                          \"extraInfo\": {\n                            \"isRankable\": true\n                          }\n                        }\n                      ],\n                      \"trainingTimeout\": 0,\n                      \"sampleMs\": 0,\n                      \"hyperParams\": {},\n                      \"embedModelVersionId\": \"string\",\n                      \"failOnMissingPositiveExamples\": true,\n                      \"modelMetadata\": {}\n                    },\n                    \"message\": \"string\",\n                    \"fieldsMap\": {},\n                    \"params\": {},\n                    \"paramsSpecs\": [\n                      null\n                    ]\n                  }\n                }\n              ],\n              \"metadata\": {},\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"modifiedAt\": \"string\",\n              \"version\": {\n                \"id\": \"string\",\n                \"workflowId\": \"string\",\n                \"createdAt\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"description\": \"string\",\n                \"license\": \"string\"\n              },\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"description\": \"string\",\n              \"notes\": \"string\",\n              \"useCases\": [\n                \"string\"\n              ],\n              \"checkConsents\": [\n                \"string\"\n              ],\n              \"bookmarkOrigin\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"resourceType\": \"string\"\n              },\n              \"image\": {\n                \"url\": \"string\",\n                \"base64\": \"string\",\n                \"allowDuplicateUrl\": true,\n                \"hosted\": {\n                  \"prefix\": \"string\",\n                  \"suffix\": \"string\",\n                  \"sizes\": [\n                    \"string\"\n                  ],\n                  \"crossorigin\": \"string\"\n                },\n                \"imageInfo\": {\n                  \"width\": 0,\n                  \"height\": 0,\n                  \"format\": \"string\",\n                  \"colorMode\": \"string\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"conceptIds\": [\n        \"string\"\n      ],\n      \"inputSource\": {\n        \"type\": \"string\",\n        \"id\": \"string\"\n      },\n      \"sampleMs\": 0,\n      \"aiAssistant\": {\n        \"workflowId\": \"string\"\n      },\n      \"review\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"manualStrategyInfo\": {\n          \"samplePercentage\": null\n        },\n        \"consensusStrategyInfo\": {\n          \"approvalThreshold\": 0\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"name\": \"string\",\n      \"aiAssistParams\": {\n        \"minThreshold\": null,\n        \"maxThreshold\": null,\n        \"conceptRelationIds\": [\n          \"string\"\n        ]\n      },\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"labelOrderId\": \"string\",\n      \"concepts\": [\n        {\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"autoAnnotationConfig\": {\n            \"annotationDataTypes\": 0,\n            \"thresholdRange\": {\n              \"isLowerInclusive\": true,\n              \"isUpperInclusive\": true,\n              \"lower\": null,\n              \"upper\": null\n            },\n            \"statusCode\": \"string\"\n          }\n        }\n      ],\n      \"deletePreviousAnnotations\": true,\n      \"metrics\": {\n        \"work\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"review\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"inputSource\": {\n          \"inputsCountEstimated\": \"string\"\n        }\n      }\n    }\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"tasks\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"type\": \"string\",\n      \"description\": \"string\",\n      \"worker\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"partitionedStrategyInfo\": {\n          \"type\": \"string\",\n          \"workersPerInput\": 0,\n          \"weights\": {}\n        },\n        \"workers\": [\n          {\n            \"user\": {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            },\n            \"workflow\": {\n              \"id\": \"string\",\n              \"appId\": \"string\",\n              \"createdAt\": \"string\",\n              \"nodes\": [\n                {\n                  \"id\": \"string\",\n                  \"nodeInputs\": [\n                    {\n                      \"nodeId\": \"string\"\n                    }\n                  ],\n                  \"suppressOutput\": true,\n                  \"outputInfoOverride\": {\n                    \"outputConfig\": {\n                      \"conceptsMutuallyExclusive\": true,\n                      \"existingModelId\": \"string\",\n                      \"language\": \"string\",\n                      \"hyperParameters\": \"string\",\n                      \"maxConcepts\": 0,\n                      \"minValue\": null,\n                      \"selectConcepts\": [\n                        {\n                          \"id\": \"string\",\n                          \"name\": \"string\",\n                          \"value\": null,\n                          \"createdAt\": \"string\",\n                          \"language\": \"string\",\n                          \"appId\": \"string\",\n                          \"definition\": \"string\",\n                          \"vocabId\": \"string\",\n                          \"visibility\": {\n                            \"gettable\": \"string\"\n                          },\n                          \"userId\": \"string\",\n                          \"keypointInfo\": {\n                            \"keypointNames\": [\n                              \"string\"\n                            ],\n                            \"skeleton\": [\n                              {\n                                \"k1\": 0,\n                                \"k2\": 0\n                              }\n                            ]\n                          },\n                          \"extraInfo\": {\n                            \"isRankable\": true\n                          }\n                        }\n                      ],\n                      \"trainingTimeout\": 0,\n                      \"sampleMs\": 0,\n                      \"hyperParams\": {},\n                      \"embedModelVersionId\": \"string\",\n                      \"failOnMissingPositiveExamples\": true,\n                      \"modelMetadata\": {}\n                    },\n                    \"message\": \"string\",\n                    \"fieldsMap\": {},\n                    \"params\": {},\n                    \"paramsSpecs\": [\n                      null\n                    ]\n                  }\n                }\n              ],\n              \"metadata\": {},\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"modifiedAt\": \"string\",\n              \"version\": {\n                \"id\": \"string\",\n                \"workflowId\": \"string\",\n                \"createdAt\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"description\": \"string\",\n                \"license\": \"string\"\n              },\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"description\": \"string\",\n              \"notes\": \"string\",\n              \"useCases\": [\n                \"string\"\n              ],\n              \"checkConsents\": [\n                \"string\"\n              ],\n              \"bookmarkOrigin\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"resourceType\": \"string\"\n              },\n              \"image\": {\n                \"url\": \"string\",\n                \"base64\": \"string\",\n                \"allowDuplicateUrl\": true,\n                \"hosted\": {\n                  \"prefix\": \"string\",\n                  \"suffix\": \"string\",\n                  \"sizes\": [\n                    \"string\"\n                  ],\n                  \"crossorigin\": \"string\"\n                },\n                \"imageInfo\": {\n                  \"width\": 0,\n                  \"height\": 0,\n                  \"format\": \"string\",\n                  \"colorMode\": \"string\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"conceptIds\": [\n        \"string\"\n      ],\n      \"inputSource\": {\n        \"type\": \"string\",\n        \"id\": \"string\"\n      },\n      \"sampleMs\": 0,\n      \"aiAssistant\": {\n        \"workflowId\": \"string\"\n      },\n      \"review\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"manualStrategyInfo\": {\n          \"samplePercentage\": null\n        },\n        \"consensusStrategyInfo\": {\n          \"approvalThreshold\": 0\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"name\": \"string\",\n      \"aiAssistParams\": {\n        \"minThreshold\": null,\n        \"maxThreshold\": null,\n        \"conceptRelationIds\": [\n          \"string\"\n        ]\n      },\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"labelOrderId\": \"string\",\n      \"concepts\": [\n        {\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"autoAnnotationConfig\": {\n            \"annotationDataTypes\": 0,\n            \"thresholdRange\": {\n              \"isLowerInclusive\": true,\n              \"isUpperInclusive\": true,\n              \"lower\": null,\n              \"upper\": null\n            },\n            \"statusCode\": \"string\"\n          }\n        }\n      ],\n      \"deletePreviousAnnotations\": true,\n      \"metrics\": {\n        \"work\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"review\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"inputSource\": {\n          \"inputsCountEstimated\": \"string\"\n        }\n      }\n    }\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/tasks\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"tasks\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"type\": \"string\",\n      \"description\": \"string\",\n      \"worker\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"partitionedStrategyInfo\": {\n          \"type\": \"string\",\n          \"workersPerInput\": 0,\n          \"weights\": {}\n        },\n        \"workers\": [\n          {\n            \"user\": {\n              \"id\": \"string\",\n              \"primaryEmail\": \"string\",\n              \"firstName\": \"string\",\n              \"lastName\": \"string\",\n              \"companyName\": \"string\",\n              \"jobTitle\": \"string\",\n              \"jobRole\": \"string\",\n              \"intention\": \"string\",\n              \"referralSource\": \"string\",\n              \"billType\": \"string\",\n              \"createdAt\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userDetail\": {\n                \"primaryEmail\": \"string\",\n                \"billType\": \"string\",\n                \"dateGdprConsent\": \"string\",\n                \"dateTosConsent\": \"string\",\n                \"dateMarketingConsent\": \"string\",\n                \"datePiiConsent\": \"string\",\n                \"metadata\": {},\n                \"emailAddresses\": [\n                  {\n                    \"email\": \"string\",\n                    \"primary\": true,\n                    \"verified\": true\n                  }\n                ],\n                \"twoFactorAuthEnabled\": true,\n                \"teamsCount\": 0,\n                \"country\": \"string\",\n                \"state\": \"string\"\n              }\n            },\n            \"workflow\": {\n              \"id\": \"string\",\n              \"appId\": \"string\",\n              \"createdAt\": \"string\",\n              \"nodes\": [\n                {\n                  \"id\": \"string\",\n                  \"nodeInputs\": [\n                    {\n                      \"nodeId\": \"string\"\n                    }\n                  ],\n                  \"suppressOutput\": true,\n                  \"outputInfoOverride\": {\n                    \"outputConfig\": {\n                      \"conceptsMutuallyExclusive\": true,\n                      \"existingModelId\": \"string\",\n                      \"language\": \"string\",\n                      \"hyperParameters\": \"string\",\n                      \"maxConcepts\": 0,\n                      \"minValue\": null,\n                      \"selectConcepts\": [\n                        {\n                          \"id\": \"string\",\n                          \"name\": \"string\",\n                          \"value\": null,\n                          \"createdAt\": \"string\",\n                          \"language\": \"string\",\n                          \"appId\": \"string\",\n                          \"definition\": \"string\",\n                          \"vocabId\": \"string\",\n                          \"visibility\": {\n                            \"gettable\": \"string\"\n                          },\n                          \"userId\": \"string\",\n                          \"keypointInfo\": {\n                            \"keypointNames\": [\n                              \"string\"\n                            ],\n                            \"skeleton\": [\n                              {\n                                \"k1\": 0,\n                                \"k2\": 0\n                              }\n                            ]\n                          },\n                          \"extraInfo\": {\n                            \"isRankable\": true\n                          }\n                        }\n                      ],\n                      \"trainingTimeout\": 0,\n                      \"sampleMs\": 0,\n                      \"hyperParams\": {},\n                      \"embedModelVersionId\": \"string\",\n                      \"failOnMissingPositiveExamples\": true,\n                      \"modelMetadata\": {}\n                    },\n                    \"message\": \"string\",\n                    \"fieldsMap\": {},\n                    \"params\": {},\n                    \"paramsSpecs\": [\n                      null\n                    ]\n                  }\n                }\n              ],\n              \"metadata\": {},\n              \"visibility\": {\n                \"gettable\": \"string\"\n              },\n              \"userId\": \"string\",\n              \"modifiedAt\": \"string\",\n              \"version\": {\n                \"id\": \"string\",\n                \"workflowId\": \"string\",\n                \"createdAt\": \"string\",\n                \"modifiedAt\": \"string\",\n                \"visibility\": {\n                  \"gettable\": \"string\"\n                },\n                \"nodes\": [\n                  {\n                    \"id\": \"string\",\n                    \"nodeInputs\": [\n                      {\n                        \"nodeId\": \"string\"\n                      }\n                    ],\n                    \"suppressOutput\": true,\n                    \"outputInfoOverride\": {\n                      \"outputConfig\": {\n                        \"conceptsMutuallyExclusive\": true,\n                        \"existingModelId\": \"string\",\n                        \"language\": \"string\",\n                        \"hyperParameters\": \"string\",\n                        \"maxConcepts\": 0,\n                        \"minValue\": null,\n                        \"selectConcepts\": [\n                          {\n                            \"id\": \"string\",\n                            \"name\": \"string\",\n                            \"value\": null,\n                            \"createdAt\": \"string\",\n                            \"language\": \"string\",\n                            \"appId\": \"string\",\n                            \"definition\": \"string\",\n                            \"vocabId\": \"string\",\n                            \"visibility\": {\n                              \"gettable\": \"string\"\n                            },\n                            \"userId\": \"string\",\n                            \"keypointInfo\": {\n                              \"keypointNames\": [\n                                \"string\"\n                              ],\n                              \"skeleton\": [\n                                {\n                                  \"k1\": 0,\n                                  \"k2\": 0\n                                }\n                              ]\n                            },\n                            \"extraInfo\": {\n                              \"isRankable\": true\n                            }\n                          }\n                        ],\n                        \"trainingTimeout\": 0,\n                        \"sampleMs\": 0,\n                        \"hyperParams\": {},\n                        \"embedModelVersionId\": \"string\",\n                        \"failOnMissingPositiveExamples\": true,\n                        \"modelMetadata\": {}\n                      },\n                      \"message\": \"string\",\n                      \"fieldsMap\": {},\n                      \"params\": {},\n                      \"paramsSpecs\": [\n                        null\n                      ]\n                    }\n                  }\n                ],\n                \"metadata\": {},\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"description\": \"string\",\n                \"license\": \"string\"\n              },\n              \"isStarred\": true,\n              \"starCount\": 0,\n              \"description\": \"string\",\n              \"notes\": \"string\",\n              \"useCases\": [\n                \"string\"\n              ],\n              \"checkConsents\": [\n                \"string\"\n              ],\n              \"bookmarkOrigin\": {\n                \"id\": \"string\",\n                \"appId\": \"string\",\n                \"userId\": \"string\",\n                \"resourceType\": \"string\"\n              },\n              \"image\": {\n                \"url\": \"string\",\n                \"base64\": \"string\",\n                \"allowDuplicateUrl\": true,\n                \"hosted\": {\n                  \"prefix\": \"string\",\n                  \"suffix\": \"string\",\n                  \"sizes\": [\n                    \"string\"\n                  ],\n                  \"crossorigin\": \"string\"\n                },\n                \"imageInfo\": {\n                  \"width\": 0,\n                  \"height\": 0,\n                  \"format\": \"string\",\n                  \"colorMode\": \"string\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"conceptIds\": [\n        \"string\"\n      ],\n      \"inputSource\": {\n        \"type\": \"string\",\n        \"id\": \"string\"\n      },\n      \"sampleMs\": 0,\n      \"aiAssistant\": {\n        \"workflowId\": \"string\"\n      },\n      \"review\": {\n        \"strategy\": \"string\",\n        \"userIds\": [\n          \"string\"\n        ],\n        \"users\": [\n          {\n            \"id\": \"string\",\n            \"primaryEmail\": \"string\",\n            \"firstName\": \"string\",\n            \"lastName\": \"string\",\n            \"companyName\": \"string\",\n            \"jobTitle\": \"string\",\n            \"jobRole\": \"string\",\n            \"intention\": \"string\",\n            \"referralSource\": \"string\",\n            \"billType\": \"string\",\n            \"createdAt\": \"string\",\n            \"dateGdprConsent\": \"string\",\n            \"dateTosConsent\": \"string\",\n            \"dateMarketingConsent\": \"string\",\n            \"datePiiConsent\": \"string\",\n            \"metadata\": {},\n            \"emailAddresses\": [\n              {\n                \"email\": \"string\",\n                \"primary\": true,\n                \"verified\": true\n              }\n            ],\n            \"twoFactorAuthEnabled\": true,\n            \"teamsCount\": 0,\n            \"isStarred\": true,\n            \"starCount\": 0,\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userDetail\": {\n              \"primaryEmail\": \"string\",\n              \"billType\": \"string\",\n              \"dateGdprConsent\": \"string\",\n              \"dateTosConsent\": \"string\",\n              \"dateMarketingConsent\": \"string\",\n              \"datePiiConsent\": \"string\",\n              \"metadata\": {},\n              \"emailAddresses\": [\n                {\n                  \"email\": \"string\",\n                  \"primary\": true,\n                  \"verified\": true\n                }\n              ],\n              \"twoFactorAuthEnabled\": true,\n              \"teamsCount\": 0,\n              \"country\": \"string\",\n              \"state\": \"string\"\n            }\n          }\n        ],\n        \"manualStrategyInfo\": {\n          \"samplePercentage\": null\n        },\n        \"consensusStrategyInfo\": {\n          \"approvalThreshold\": 0\n        }\n      },\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"name\": \"string\",\n      \"aiAssistParams\": {\n        \"minThreshold\": null,\n        \"maxThreshold\": null,\n        \"conceptRelationIds\": [\n          \"string\"\n        ]\n      },\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"appId\": \"string\",\n      \"userId\": \"string\",\n      \"labelOrderId\": \"string\",\n      \"concepts\": [\n        {\n          \"concept\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"value\": null,\n            \"createdAt\": \"string\",\n            \"language\": \"string\",\n            \"appId\": \"string\",\n            \"definition\": \"string\",\n            \"vocabId\": \"string\",\n            \"visibility\": {\n              \"gettable\": \"string\"\n            },\n            \"userId\": \"string\",\n            \"keypointInfo\": {\n              \"keypointNames\": [\n                \"string\"\n              ],\n              \"skeleton\": [\n                {\n                  \"k1\": 0,\n                  \"k2\": 0\n                }\n              ]\n            },\n            \"extraInfo\": {\n              \"isRankable\": true\n            }\n          },\n          \"autoAnnotationConfig\": {\n            \"annotationDataTypes\": 0,\n            \"thresholdRange\": {\n              \"isLowerInclusive\": true,\n              \"isUpperInclusive\": true,\n              \"lower\": null,\n              \"upper\": null\n            },\n            \"statusCode\": \"string\"\n          }\n        }\n      ],\n      \"deletePreviousAnnotations\": true,\n      \"metrics\": {\n        \"work\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"review\": {\n          \"inputsCountEstimated\": \"string\",\n          \"inputsPercentEstimated\": 0\n        },\n        \"inputSource\": {\n          \"inputsCountEstimated\": \"string\"\n        }\n      }\n    }\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/tasks',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/tasks/{taskId}": {
      "get": {
        "summary": "Get a specific task from an app.",
        "operationId": "V2_GetTask2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleTaskResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response.\nCurrently supported additional fields:\n- all\n- worker.users\n- review.users\n- metrics.input_source.inputs_count_estimated\n- metrics.work.inputs_count_estimated\n- metrics.work.inputs_percent_estimated\n- metrics.review.inputs_count_estimated\n- metrics.review.inputs_percent_estimated",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/tasks/{taskId}/annotations/count": {
      "get": {
        "summary": "Task annotation count",
        "operationId": "V2_GetTaskAnnotationCount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleTaskCountResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "description": "task_id for which count per user per status is needed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIds",
            "description": "Only return counts for these user IDs, effectively operating as an\nOR among them to filter down the results.\nIf model_version_ids or workflow_version_ids are also provided, these user_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modelVersionIds",
            "description": "Only return counts for these model version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or workflow_version_ids are also provided, these model_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "workflowVersionIds",
            "description": "Only return counts for these workflow version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or model_version_ids are also provided, these workflow_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/tasks/{taskId}/assignments": {
      "get": {
        "summary": "Deprecated: Use PutTaskAssignments with action=LABEL_START.\n  This endpoint has initially been designed as a GET request,\n  but has been re-designed to serve a PUT logic.\n  In order to clearly highlight that this endpoint serves a PUT request,\n  this endpoint has been deprecated and replaced by PutTaskAssignments with action=LABEL_START.",
        "operationId": "V2_ListNextTaskAssignments2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/tasks/{taskId}/inputs/count": {
      "get": {
        "summary": "Task Input count",
        "operationId": "V2_GetTaskInputCount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleTaskCountResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "description": "task_id for which count per user per status is needed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIds",
            "description": "Only return counts for these user IDs, effectively operating as an\nOR among them to filter down the results.\nIf model_version_ids or workflow_version_ids are also provided, these user_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modelVersionIds",
            "description": "Only return counts for these model version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or workflow_version_ids are also provided, these model_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "workflowVersionIds",
            "description": "Only return counts for these workflow version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or model_version_ids are also provided, these workflow_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/tasks/{taskId}/inputs/samples": {
      "get": {
        "summary": "Get a specific input from an app.",
        "operationId": "V2_GetInputSamples2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIds",
            "description": "URL param. If zero ids provided, returns for all task labelers",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/trending_metrics/views/{viewType}": {
      "get": {
        "summary": "List the view metrics for a detail view",
        "operationId": "V2_ListTrendingMetricsViews2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTrendingMetricsViewResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "viewType",
            "description": "For now view types 'apps', 'workflows', and 'models' are supported.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/uploads": {
      "get": {
        "operationId": "V2_ListUploads2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/uploads?userAppId.userId=&userAppId.appId=&page=&perPage=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/uploads?userAppId.userId=&userAppId.appId=&page=&perPage=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/uploads?userAppId.userId=&userAppId.appId=&page=&perPage=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "operationId": "V2_DeleteUploads2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteUploadsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/uploads' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/uploads\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ]\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/uploads',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "operationId": "V2_PostUploads2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostUploadsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/uploads' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"uploads\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"expiresAt\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"contentName\": \"string\",\n      \"contentLength\": \"string\",\n      \"contentUrl\": \"string\"\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"uploads\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"expiresAt\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"contentName\": \"string\",\n      \"contentLength\": \"string\",\n      \"contentUrl\": \"string\"\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/uploads\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"uploads\": [\n    {\n      \"id\": \"string\",\n      \"createdAt\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"expiresAt\": \"string\",\n      \"status\": {\n        \"code\": \"string\",\n        \"description\": \"string\",\n        \"details\": \"string\",\n        \"stackTrace\": [\n          \"string\"\n        ],\n        \"percentCompleted\": 0,\n        \"timeRemaining\": 0,\n        \"reqId\": \"string\",\n        \"internalDetails\": \"string\",\n        \"redirectInfo\": {\n          \"url\": \"string\",\n          \"resourceType\": \"string\",\n          \"oldResourceId\": \"string\",\n          \"newResourceId\": \"string\"\n        },\n        \"developerNotes\": \"string\"\n      },\n      \"contentName\": \"string\",\n      \"contentLength\": \"string\",\n      \"contentUrl\": \"string\"\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/uploads',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/uploads/{uploadId}": {
      "get": {
        "operationId": "V2_GetUpload2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "uploadId",
            "description": "Upload ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/uploads/{uploadId}/content_parts": {
      "put": {
        "summary": "Upload a part of a multipart upload.\nBehaviour on completion depends on the endpoint that was used to initiate the upload.",
        "operationId": "V2_PutUploadContentParts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "uploadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{runnerSelector.deployment.userId}/deployments/{runnerSelector.deployment.id}/outputs": {
      "post": {
        "summary": "Get predicted outputs from the model.",
        "operationId": "V2_PostModelOutputs5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiOutputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "runnerSelector.deployment.userId",
            "description": "The user who owns the deployment. These live in the user/org account.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runnerSelector.deployment.id",
            "description": "An id for this configured deployment.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "modelId": {
                    "type": "string"
                  },
                  "versionId": {
                    "type": "string"
                  },
                  "inputs": {
                    "type": "array",
                    "items": {}
                  },
                  "runnerSelector": {
                    "type": "object",
                    "properties": {
                      "nodepool": {
                        "$ref": "#/components/schemas/apiNodepool"
                      },
                      "runner": {
                        "$ref": "#/components/schemas/apiRunner"
                      },
                      "deployment": {
                        "type": "object",
                        "properties": {
                          "autoscaleConfig": {
                            "$ref": "#/components/schemas/apiAutoscaleConfig"
                          },
                          "nodepools": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/apiNodepool"
                            },
                            "title": "You can configure different autoscaling per nodepool(s).\nThese nodepools have to be also owned by the same user_id/org as this deployment.\nIf there is more than one nodepool we use the model's ComputeInfo to match\nwith what the nodepool provides to decide which one can handle it combined with the\nNodepoolRank below. Note: even within a single nodepool if it is heterogeneous then\nwe need a way to rank scheduling choices when we don't know how to decide (like a model\nsupports"
                          },
                          "workflow": {
                            "$ref": "#/components/schemas/apiWorkflow"
                          },
                          "schedulingChoice": {
                            "$ref": "#/components/schemas/DeploymentSchedulingChoice"
                          },
                          "visibility": {
                            "$ref": "#/components/schemas/clarifaiapiVisibility"
                          },
                          "metadata": {
                            "type": "object",
                            "title": "To handle arbitrary json metadata:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
                          }
                        },
                        "description": "In future as we support matching runners based on just labels:\n RunnerLabels runner_labels = 3; // FUTURE",
                        "title": "Optionally a partcular deployment within the nodepool."
                      }
                    },
                    "title": "Allow filtering of prediction requests down to specific Nodepools, Deploymetns or Runners"
                  }
                },
                "description": "//////////////////////////////////////////////////\nModel prediction related stuff needs inputs and produces outputs.\n//////////////////////////////////////////////////\nModel prediction."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}": {
      "get": {
        "summary": "Get user information",
        "operationId": "V2_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleUserResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps": {
      "get": {
        "summary": "List all the apps.",
        "operationId": "V2_ListApps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAppResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, counts",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByName",
            "description": "Whether to order by the name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "Whether to order by the modified_at time.\nIf none of the sort options is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the app",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "featuredOnly",
            "description": "Filtering options:\nIf true, we only return apps that are handpicked by clarifai staff",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "If true, we only return apps that are starred by the requesting user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "templateOnly",
            "description": "If true, we only return apps that are marked as a template by the app owner.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the application:\n  - id\n  - name\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Query various text fields (id, name, description, and notes) that can contain the words in the query string\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Filter by the id, name and notes of the app. This supports wilcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Filter by the user-unique-id of the app. This supports wilcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a app to an app.\nThis needs to load the default workflow to make a copy, validating all the models in it, and\nthen writing the new workflow back to this new app.",
        "operationId": "V2_PostApps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAppResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "apps": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiApp"
                    }
                  }
                },
                "title": "PostAppsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more apps.",
        "operationId": "V2_PatchApps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAppResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "apps": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiApp"
                    }
                  },
                  "action": {
                    "type": "string",
                    "description": "The action to perform on the patched App objects except App.Metadata\nSupported values: 'overwrite' and 'remove'.\n\nNote that 'remove' can only be used to remove the app image by setting\n'image.url' in the request to the current value returned for that app."
                  },
                  "metadataAction": {
                    "$ref": "#/components/schemas/apiPatchAction"
                  },
                  "reindex": {
                    "type": "boolean",
                    "description": "If set, the app will be automatically reindexed upon change of its base workflow."
                  }
                },
                "title": "PatchAppsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/ids": {
      "patch": {
        "summary": "Patch apps ids.",
        "operationId": "V2_PatchAppsIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAppResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiIdUpdateSource"
                    },
                    "title": "Array containing 1 entry"
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nOnly 'overwrite' is supported"
                  }
                },
                "title": "PatchAppsIdsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/searches": {
      "post": {
        "summary": "Search over the applications to find one or more you're looking for.",
        "operationId": "V2_PostAppsSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAppResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "appQuery": {
                    "$ref": "#/components/schemas/apiAppQuery"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/apiPagination"
                  }
                },
                "description": "Search over the available applications."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}": {
      "get": {
        "summary": "Get a specific app from an app.",
        "operationId": "V2_GetApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleAppResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, counts",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Search over the apps to find one or more you're looking for.\nThis leverage the \"body\" parameter because we also have page and\nper_page as url query param variables in this request.",
        "operationId": "V2_DeleteApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one app.",
        "operationId": "V2_PatchApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleAppResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "app": {
                    "$ref": "#/components/schemas/apiApp"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action to perform on the patched App object except App.Metadata\nSupported values: 'overwrite' and 'remove'.\n\nNote that 'remove' can only be used to remove the app image by setting\n'image.url' in the request to the current value returned for the app."
                  },
                  "metadataAction": {
                    "$ref": "#/components/schemas/apiPatchAction"
                  },
                  "reindex": {
                    "type": "boolean",
                    "description": "If set, the app will be automatically reindexed upon change of its base workflow."
                  }
                },
                "title": "PatchAppRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotation_filters": {
      "get": {
        "summary": "List all the annotation filters.",
        "operationId": "V2_ListAnnotationFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationFilterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete one or more annotation filters in a single request.",
        "operationId": "V2_DeleteAnnotationFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "annotationFilterIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specify which filters to delete."
                  }
                },
                "description": "Request to delete several annotation filters by list of ids."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add annotation filters.",
        "operationId": "V2_PostAnnotationFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationFilterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "annotationFilters": {
                    "type": "array",
                    "description": "List of annotation filters that are requested to be added.",
                    "items": {}
                  }
                },
                "description": "Request to add one or more annotation filters."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more annotation filters.",
        "operationId": "V2_PatchAnnotationFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationFilterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "annotationFilters": {
                    "type": "array",
                    "description": "List of annotation filters that are requested to be updated.",
                    "items": {}
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now, only 'overwrite' action is supported"
                  }
                },
                "description": "Request to patch several annotation filters."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotation_filters/{annotationFilterId}": {
      "get": {
        "summary": "Get a specific annotation filter.",
        "operationId": "V2_GetAnnotationFilter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleAnnotationFilterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "annotationFilterId",
            "description": "Identify annotation filter by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations": {
      "get": {
        "summary": "List all the annotation.",
        "operationId": "V2_ListAnnotations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "description": "List annotations for these IDs",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inputIds",
            "description": "List annotations for these Input IDs\nNote that 'ids' are optional but if the are provided the number and order in\n'ids' and 'input_ids' should match\nIf you do not specify 'ids' all the annotations for 'input_ids' are returned\nIf a you do not specify both 'input_ids' and 'ids' all the annotations in the app are returned",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "userIds",
            "description": "Only return the annotations that has one of these user IDs, effectively operating as an\nOR among them to filter down the results.\nIf model_version_ids or workflow_version_ids are also provided, these user_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) annotations in the results of ListAnnotations request.\nSetting user_ids does also set list_all_annotations=True.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modelVersionIds",
            "description": "Only return the annotations that has one of these model version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or workflow_version_ids are also provided, these model_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) annotations in the results of ListAnnotations request.\nSetting model_version_ids does also set list_all_annotations=True.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "workflowVersionIds",
            "description": "Only return the annotations that has one of these workflow version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or model_version_ids are also provided, these workflow_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) annotations in the results of ListAnnotations request.\nSetting workflow_version_ids does also set list_all_annotations=True.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "listAllAnnotations",
            "description": "Set this flag to list both trusted and not trusted annotations\nby default it's listing only trusted annotations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "returnModelOutput",
            "description": "Set this flag to return the model output for model annotations in the response.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "taskId",
            "description": "Flag to filter annotations by task_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple annotations in one request.",
        "operationId": "V2_DeleteAnnotations3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_DeleteAnnotations3Body"
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Post annotations.",
        "operationId": "V2_PostAnnotations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "annotations": {
                    "type": "array",
                    "items": {}
                  }
                },
                "title": "PostAnnotationsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more annotations.",
        "operationId": "V2_PatchAnnotations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "annotations": {
                    "type": "array",
                    "items": {}
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  },
                  "deleteIfEmptyData": {
                    "type": "boolean",
                    "description": "If the request is a \"remove\" action and the annotation is left with empty data,\nthen setting delete_if_empty_data to true will delete the annotation,\nif possible (for example, will not delete an input-level annotation)."
                  }
                },
                "title": "PatchAnnotationsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations/searches": {
      "post": {
        "summary": "Execute a search over annotations",
        "operationId": "V2_PostAnnotationsSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user_id and app_id to query from.",
                    "title": "The user_id and app_id to query from."
                  },
                  "searches": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiSearch"
                    },
                    "title": "The searched to be executed or saved"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/apiPagination"
                  }
                },
                "title": "Execute a new annotation search and optionally save it\nannotation search over annotations using rank and filter proto"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch saved annotations searches by ids.",
        "operationId": "V2_PatchAnnotationsSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_PatchAnnotationsSearchesBody"
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations/searches/metrics": {
      "get": {
        "summary": "List the evaluation results between two search requests",
        "operationId": "V2_ListAnnotationSearchMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationSearchMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Evaluate the results of two search requests",
        "operationId": "V2_PostAnnotationSearchMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationSearchMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "id": {
                    "type": "string",
                    "title": "A unique customer facing id to identify this eval request"
                  },
                  "groundTruth": {
                    "$ref": "#/components/schemas/apiSearch"
                  },
                  "searchToEval": {
                    "$ref": "#/components/schemas/apiSearch"
                  },
                  "evaluationType": {
                    "$ref": "#/components/schemas/apiEvaluationType"
                  }
                },
                "title": "PostAnnotationSearchMetricsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations/searches/metrics/{id}": {
      "get": {
        "summary": "Get the evaluation results between two search requests",
        "operationId": "V2_GetAnnotationSearchMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAnnotationSearchMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Unique custom facing id that identifies the eval to get",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "DeleteAnnotationSearchMetrics",
        "operationId": "V2_DeleteAnnotationSearchMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/annotations/workers": {
      "get": {
        "summary": "ListAnnotationWorkers lists users, models, and workflows (collectively\nknown as \"workers\") that have added annotations to the application.",
        "operationId": "V2_ListAnnotationWorkers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkerResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response.\nCurrently supported: all, names",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "trustedOnly",
            "description": "(optional URL parameter) Only list workers that have created trusted annotations.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/bulk_operations": {
      "get": {
        "summary": "List all the bulk operations",
        "operationId": "V2_ListBulkOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiBulkOperationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "delete one or more terminated bulk operations",
        "operationId": "V2_DeleteBulkOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "List of bulk operation ids to be deleted"
                  }
                },
                "description": "Request to delete the terminated bulk operations by ID\nOnly operations in terminated state can be deleted."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Perform bulk operations on a list of inputs based on input source.\nOperation include add, update, delete of concepts, metadata and geo data.\nThis is an Asynchronous process. Use ListBulkOperations or GetBulkOperation to check the status.",
        "operationId": "V2_PostBulkOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiBulkOperationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "bulkOperations": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiBulkOperation"
                    },
                    "description": "List of bulk operation(s) to be performed e.g bulk update metadata or tags or labels etc."
                  }
                },
                "description": "Request to perform bulk operations on a list of inputs based on input source."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Cancel one or more bulk operations",
        "operationId": "V2_CancelBulkOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiBulkOperationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "List of bulk operation ids to be cancelled"
                  }
                },
                "title": "Cancel a list of bulk operation ids"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/bulk_operations/{id}": {
      "get": {
        "summary": "Get the bulk operation details by ID",
        "operationId": "V2_GetBulkOperation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleBulkOperationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The bulk operation id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/collaborators": {
      "get": {
        "summary": "owner list users who the app is shared with",
        "operationId": "V2_ListCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollaboratorsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listAllCollaborators",
            "description": "Set this flag to list both deleted and not deleted collaborators\nby default it's listing only not deleted collaborators",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete existing collaborators.",
        "operationId": "V2_DeleteCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "collaboratorIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "userEmails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "title": "DeleteCollaboratorsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "add collaborators to an app.",
        "operationId": "V2_PostCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollaboratorsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "collaborators": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiCollaborator"
                    }
                  }
                },
                "title": "PostCollaboratorsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch existing collaborators.",
        "operationId": "V2_PatchCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollaboratorsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "collaborators": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiCollaborator"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now only action 'overwrite' is supported"
                  }
                },
                "title": "PatchCollaboratorsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/collectors": {
      "get": {
        "summary": "List all the collectors.",
        "operationId": "V2_ListCollectors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollectorResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple collectors in one request.\nThis call is asynchronous. Use DeleteCollector if you want a synchronous version.",
        "operationId": "V2_DeleteCollectors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_DeleteCollectorsBody"
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a list of Collectors to an app.\nIn the handler of this endpoint we also check for all the scopes of the  POST /inputs\nendpoint.\nThose current scopes are listed here as a hard requirement.\nThey are needed when adding the collectors just so we now that you have permission with\nthat key at least to do the writing to this app with POST /inputs.",
        "operationId": "V2_PostCollectors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollectorResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "collectors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiCollector"
                    }
                  }
                },
                "description": "Request to create Collectors."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more collectors.",
        "operationId": "V2_PatchCollectors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollectorResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "collectors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiCollector"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nOnly 'overwrite' is supported"
                  }
                },
                "title": "PatchCollectorsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/collectors/{collectorId}": {
      "get": {
        "summary": "Get a specific collector from an app.",
        "operationId": "V2_GetCollector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleCollectorResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts": {
      "get": {
        "summary": "List all the concepts.",
        "operationId": "V2_ListConcepts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "description": "Fuzzy match on concept ID",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a concept to an app.",
        "operationId": "V2_PostConcepts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "concepts": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiConcept"
                    },
                    "description": "The concepts to add."
                  }
                },
                "title": "PostConceptsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more concepts.",
        "operationId": "V2_PatchConcepts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "concepts": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiConcept"
                    },
                    "description": "The concepts to patch."
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now ony action 'overwrite' is supported"
                  }
                },
                "title": "PatchConceptsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/knowledge_graphs": {
      "get": {
        "summary": "List all domain graphs.",
        "operationId": "V2_ListKnowledgeGraphs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiKnowledgeGraphResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Post domain graphs.",
        "operationId": "V2_PostKnowledgeGraphs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiKnowledgeGraphResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user_id and app_id information.",
                    "title": "The user_id and app_id information."
                  },
                  "knowledgeGraphs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiKnowledgeGraph"
                    }
                  }
                },
                "title": "POST new knowledge graphs"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/relations": {
      "get": {
        "summary": "List concept relations between concepts in the platform.\nMUST be above ListConcepts so that if concept_id is empty this will still match\n/concepts/relations to list all the concept relations in the app.",
        "operationId": "V2_ListConceptRelations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptRelationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "description": "The subject concept id in your app to get all the relationships for.\nLeave as an empty string (GET /concepts/relations) to list ALL the relations in the app.\n\nWhen listing all the relations it will only return one direction of the relationship\nwith the predicate acting on the subject and not the inverse like is done when providing a\nconcept_id so that we can return a reliable page size always.\n\nWhen providing a concept_id, if a hyponym is present in the DB such as:\n'honey' (subject), 'hyponym' (predicate for \"is a kind of\"), 'food' (object)\nthen you can list the concept relations for 'honey' and get hyponym predicate with 'food'\nobject.\nBut you can also list the concept relations for 'food' and it will return the same hyponym\nrelationship with 'honey' as object and 'hypernym' as predicate.\nSynonyms by nature are symmetrical relationships so either side can be the concept_id (subject)\nwhen listing the relations.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "predicate",
            "description": "If predicate is provided then only list relations with that predicate.\n\nNote that if no subject is set in concept_id and predicate is set to\n'hypernym', then it will return any stored hyponyms as hypernyms with\njust the subject and object swapped since they are reversed relations.\n\nValid predicates are:\n- 'hypernym'\n- 'hyponym'\n- 'synonym'",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "knowledgeGraphId",
            "description": "If knowledge_graph_id is provided then just list relations from that knowledge graph.\nIf not provided then list relations from all knowledge graphs including the global one for this\napp one (ie. knowledge_graph \"\") and any specific ones in the app.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/searches": {
      "post": {
        "summary": "Search over the concepts to find one or more you're looking for.\nThis leverage the \"body\" parameter because we also have page and\nper_page as url query param variables in this request.",
        "operationId": "V2_PostConceptsSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Ids present in the url of the request.",
                    "title": "Ids present in the url of the request."
                  },
                  "conceptQuery": {
                    "$ref": "#/components/schemas/apiConceptQuery"
                  },
                  "extraInfo": {
                    "$ref": "#/components/schemas/apiConceptExtraInfoRequest"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/apiPagination"
                  }
                },
                "title": "PostConceptsSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/status": {
      "get": {
        "summary": "List all the concepts with their positive and negative counts",
        "operationId": "V2_GetConceptCounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptCountResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/{conceptId}": {
      "get": {
        "summary": "Get a specific concept from an app.",
        "operationId": "V2_GetConcept",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "description": "The concept's id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/{conceptId}/languages": {
      "get": {
        "summary": "List the concept in all the translated languages.",
        "operationId": "V2_ListConceptLanguages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a new translation for this concept.",
        "operationId": "V2_PostConceptLanguages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "conceptLanguages": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiConceptLanguage"
                    }
                  }
                },
                "description": "POST multiple concept languages for the given concept."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch the name for a given language names by passing in a list of concepts with the new names\nfor the languages.",
        "operationId": "V2_PatchConceptLanguages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "conceptLanguages": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiConceptLanguage"
                    }
                  },
                  "action": {
                    "type": "string",
                    "description": "The action to perform with the objects in the PATCH."
                  }
                },
                "description": "PATCH multiple concept languages for the given concept."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/{conceptId}/languages/{language}": {
      "get": {
        "summary": "Get a specific concept from an app.",
        "operationId": "V2_GetConceptLanguage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleConceptLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "description": "This is the language identifier.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/concepts/{conceptId}/relations": {
      "get": {
        "summary": "List concept relations between concepts in the platform.\nMUST be above ListConcepts so that if concept_id is empty this will still match\n/concepts/relations to list all the concept relations in the app.",
        "operationId": "V2_ListConceptRelations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptRelationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "description": "The subject concept id in your app to get all the relationships for.\nLeave as an empty string (GET /concepts/relations) to list ALL the relations in the app.\n\nWhen listing all the relations it will only return one direction of the relationship\nwith the predicate acting on the subject and not the inverse like is done when providing a\nconcept_id so that we can return a reliable page size always.\n\nWhen providing a concept_id, if a hyponym is present in the DB such as:\n'honey' (subject), 'hyponym' (predicate for \"is a kind of\"), 'food' (object)\nthen you can list the concept relations for 'honey' and get hyponym predicate with 'food'\nobject.\nBut you can also list the concept relations for 'food' and it will return the same hyponym\nrelationship with 'honey' as object and 'hypernym' as predicate.\nSynonyms by nature are symmetrical relationships so either side can be the concept_id (subject)\nwhen listing the relations.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "predicate",
            "description": "If predicate is provided then only list relations with that predicate.\n\nNote that if no subject is set in concept_id and predicate is set to\n'hypernym', then it will return any stored hyponyms as hypernyms with\njust the subject and object swapped since they are reversed relations.\n\nValid predicates are:\n- 'hypernym'\n- 'hyponym'\n- 'synonym'",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "knowledgeGraphId",
            "description": "If knowledge_graph_id is provided then just list relations from that knowledge graph.\nIf not provided then list relations from all knowledge graphs including the global one for this\napp one (ie. knowledge_graph \"\") and any specific ones in the app.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Post concept relations to create relations between concepts in the platform.",
        "operationId": "V2_DeleteConceptRelations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "description": "The concept to delete relationship for.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user_id and app_id information.",
                    "title": "The user_id and app_id information."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The concept relationship ids to delete."
                  }
                },
                "title": "DELETE concept relations"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Post concept relations to create relations between concepts in the platform.",
        "operationId": "V2_PostConceptRelations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptRelationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "description": "The subject concept id you're going to add relations for.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user_id and app_id information.",
                    "title": "The user_id and app_id information."
                  },
                  "conceptRelations": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiConceptRelation"
                    },
                    "description": "The relationships you're going to add."
                  }
                },
                "title": "POST new concept relations"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets": {
      "get": {
        "summary": "List all the datasets.",
        "operationId": "V2_ListDatasets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the app",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "If neither sort option is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortById",
            "description": "Whether to order by the external id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "Filtering options:",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter datasets by bookmark. If set, only return bookmarked datasets. Otherwise none bookmarked datasets only.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the dataset:\n  - id\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Fuzzy filter on dataset ID\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete one or more datasets in a single request.",
        "operationId": "V2_DeleteDatasets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "datasetIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request to delete several datasets by list of ids."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add datasets to an app.\nThe process is atomic, i.e. either all or no datasets are added.\nIf there is an error for one dataset,\nthe process will stop, revert the transaction and return the error.",
        "operationId": "V2_PostDatasets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "datasets": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDataset"
                    },
                    "description": "List of datasets that are requested to be added."
                  }
                },
                "description": "Request to add one or more datasets."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more datasets.\nThe process is atomic, i.e. either all or no datasets are patched.\nIf there is an error for one dataset,\nthe process will stop, revert the transaction and return the error.",
        "operationId": "V2_PatchDatasets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "datasets": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDataset"
                    },
                    "description": "List of datasets that are requested to be updated."
                  },
                  "action": {
                    "type": "string",
                    "description": "The action to perform on the patched objects\nSupported values: 'overwrite', 'merge', and 'remove'.\n\nNote that 'remove' can only be used to remove the dataset image by setting\n'image.url' in the request to the current value returned for that dataset."
                  }
                },
                "description": "Request to patch several datasets."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}": {
      "get": {
        "summary": "Get a specific dataset.",
        "operationId": "V2_GetDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleDatasetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalFields",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/inputs": {
      "get": {
        "summary": "List all the dataset inputs in a dataset.",
        "operationId": "V2_ListDatasetInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete one or more dataset inputs in a single request.",
        "operationId": "V2_DeleteDatasetInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "inputIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specify which inputs to delete from dataset."
                  }
                },
                "description": "Request to delete several dataset inputs by list of ids."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add dataset inputs to a dataset.\nThe process is not atomic, i.e. if there are errors with some dataset\ninputs, others might still be added. The response reports\n  - SUCCESS if all dataset inputs were added,\n  - MIXED_STATUS if only some dataset inputs were added, and\n  - FAILURE if no dataset inputs were added.\nEach individual dataset input in the response has the status set to\nindicate if it was successful or if there was an error.",
        "operationId": "V2_PostDatasetInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "datasetInputs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDatasetInput"
                    },
                    "description": "List of inputs that are requested to be added to this dataset.\nIdentify each input by id field. All other inputs fields are ignored."
                  },
                  "search": {
                    "$ref": "#/components/schemas/apiSearch"
                  }
                },
                "description": "Request to add one or more datasets."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/inputs/{inputId}": {
      "get": {
        "summary": "Get a specific dataset input.",
        "operationId": "V2_GetDatasetInput",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleDatasetInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "description": "Identify dataset input by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/versions": {
      "get": {
        "summary": "List all the dataset versions.",
        "operationId": "V2_ListDatasetVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "requestOrigins",
            "description": "(optional URL parameter) Filter by origin of dataset version",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DATASET_VERSION_REQUEST_ORIGIN_NOT_SET",
                  "MANUAL",
                  "TRAINING",
                  "EVAL_GROUND_TRUTH",
                  "EVAL_PREDICTIONS"
                ]
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete one or more dataset versions in a single request.",
        "operationId": "V2_DeleteDatasetVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "datasetVersionIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request to delete several dataset versions by list of ids."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add dataset versions to a dataset.",
        "operationId": "V2_PostDatasetVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "datasetVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDatasetVersion"
                    },
                    "description": "List of dataset versions that are requested to be added."
                  }
                },
                "description": "Request to add one or more dataset versions."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more dataset versions.",
        "operationId": "V2_PatchDatasetVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "datasetVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDatasetVersion"
                    },
                    "description": "List of dataset versions that are requested to be updated."
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now, only 'overwrite' action is supported"
                  }
                },
                "description": "Request to patch several dataset versions."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/versions/{datasetVersionId}": {
      "get": {
        "summary": "Get a specific dataset version.",
        "operationId": "V2_GetDatasetVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleDatasetVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetVersionId",
            "description": "Identify dataset version by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/versions/{datasetVersionId}/exports": {
      "put": {
        "summary": "Create export of a dataset version.",
        "operationId": "V2_PutDatasetVersionExports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionExportResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetVersionId",
            "description": "Identify dataset version by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "exports": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiDatasetVersionExport"
                    },
                    "description": "exports is the list of requested dataset version exports.\nOnly setting the 'format' field of the export is supported."
                  }
                },
                "description": "Request to create exports of a dataset version."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/datasets/{datasetId}/versions/{datasetVersionId}/metrics": {
      "get": {
        "operationId": "V2_ListDatasetVersionMetricsGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetVersionMetricsGroupResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "description": "Identify dataset by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datasetVersionId",
            "description": "Identify dataset version by id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "parentPaths",
            "description": "Filter by parent path. Multiple parent paths are OR-ed. Empty list results in no filter.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "types",
            "description": "Filter by parent type. Multiple types are OR-ed. Empty list results in no filter.\n\n - INPUT_TYPE: Group data examples by input type.\nExamples: images, videos, text, audio.\n - CONCEPT_ID: Group data examples by concept ID.\nExamples: inputs with cat concept, inputs with dog concept.\n - CONCEPTS_COUNT: Group data examples by concepts count.\nExamples: inputs with 20 concepts, inputs with 21 concepts.\n - BOUNDING_BOXES_COUNT: Group data examples by bounding boxes count.\nExamples: inputs with 20 bounding boxes, inputs with 21 bounding boxes.\n - POLYGONS_COUNT: Group data examples by polygons count.\nExamples: inputs with 20 polygons, inputs with 21 polygons.\n - POINTS_COUNT: Group data examples by points count.\nExamples: inputs with 20 points, inputs with 21 points.\n - MASKS_COUNT: Group data examples by masks count.\nExamples: inputs with 20 masks, inputs with 21 masks.\n - PIXELS_COUNT: Group data examples by pixels count.\nIn order to reduce the number of groups, we use bins.\nExamples for bin size = 400: inputs with [200000, 200400) pixels, inputs with [200400, 200800) pixels.\n - ASPECT_RATIO: Group data examples by aspect ratio.\nIn order to reduce the number of groups, we use bins.\nExamples for bin size = 0.1: inputs with [0.5, 0.6) aspect ratio, inputs with [0.6, 0.7) aspect ratio.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET",
                  "INPUT_TYPE",
                  "CONCEPT_ID",
                  "CONCEPTS_COUNT",
                  "BOUNDING_BOXES_COUNT",
                  "POLYGONS_COUNT",
                  "POINTS_COUNT",
                  "MASKS_COUNT",
                  "PIXELS_COUNT",
                  "ASPECT_RATIO"
                ]
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/duplications": {
      "post": {
        "summary": "PostAppDuplications starts async app duplication jobs which copy resources\n(inputs, annotations, models etc) from one application to another. It can\nalso create the destination application if it does not exist, with fields\n(description, metadata etc) copied from the source application.",
        "description": "A duplication job can be started by any user that can read from the source\napplication (the target of this call) and can create and write to the\ndestination application. The duplication is associated with the user that\ncreated it, so in order to read the status and progress of the job, that\nuser's ID has to be used in the call to GetAppDuplication, which might be\ndifferent to the source application owner ID in this call.",
        "operationId": "V2_PostAppDuplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAppDuplicationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user and application ID of the source application to duplicate.",
                    "title": "The user and application ID of the source application to duplicate."
                  },
                  "appDuplications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiAppDuplication"
                    }
                  }
                },
                "description": "Request to start app duplication jobs."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/evaluations": {
      "get": {
        "operationId": "V2_ListEvaluations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sortAscending",
            "description": "If true, sort in ascending order, otherwise sort in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByAppId",
            "description": "Whether to order by application id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByRocAuc",
            "description": "Whether to order by eval metric summary.macro_avg_roc_auc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByF1",
            "description": "Whether to order by eval metric summary.f1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by when the metric was created",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByMeanAvgPrecision",
            "description": "Whether to order by eval metric summary.mean_avg_precision_iou_50",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByPrecision",
            "description": "Whether to order by eval metric summary.macro_avg_precision",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByRecall",
            "description": "Whether to order by eval metric summary.macro_avg_recall",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModelId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByEvalDatasetId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByTrainDatasetId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "modelTypeId",
            "description": "Filter on model type id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evalDatasetIds",
            "description": "Filter on dataset ID of the dataset version specified in the metric version",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "trainDatasetIds",
            "description": "Filter on dataset ID of the dataset version specified by the model version",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "conceptIds",
            "description": "Filter on concept IDs specified in the modele version's output_info",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "showFailedMetrics",
            "description": "Whether to show failed metrics, defaults to false",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "operationId": "V2_PostEvaluations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "evalMetrics": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiEvalMetrics"
                    },
                    "description": "eval_info, id, model, and ground_truth_dataset will be used when creating the evaluation\nIf no dataset is provided, all app data that is annotated with concepts from the model will be used."
                  }
                },
                "title": "Evaluate this model vesion"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/evaluations/{evaluationId}": {
      "get": {
        "operationId": "V2_GetEvaluation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields.confusionMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.cooccurrenceMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.labelCounts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.binaryMetrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.testSet",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByArea",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByClass",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs": {
      "get": {
        "summary": "List all the inputs.",
        "operationId": "V2_ListInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status.code",
            "description": "Status code from internal codes.\n\n - ZERO: to be revised and greatly expanded\n - SUCCESS: Generic\n - MOVED: Resource moved. Respond with Http status 307 and add new Location header to response\n - TEAPOT: SUCCESS_WARNING_API_DEPRECATED = 10001;\nSUCCESS_WARNING_CLIENT_DEPRECATED = 10002;\n - CONN_ACCOUNT_ISSUES: Clarifai Connection Codes: 11xxx\n\nexpired cc, still in trial, feature not supported in your tier\n - CONN_TOKEN_INVALID: invalid auth token used. Deprecated: we should return CONN_KEY_INVALID instead now in all cases.\n - CONN_CREDENTIALS_INVALID: invalid auth credentials\n - CONN_EXCEED_HOURLY_LIMIT: throttle hourly limit exceeded\n - CONN_EXCEED_MONTHLY_LIMIT: throttle monthly limit exceeded\n - CONN_THROTTLED: throttler and billing stuff\n - CONN_EXCEEDS_LIMITS: throttler and billing stuff\n - CONN_INSUFFICIENT_SCOPES: api key has insufficient permissions\n - CONN_KEY_INVALID: api key is invalid\n - CONN_KEY_NOT_FOUND: api key not found\n - CONN_BAD_REQUEST_FORMAT: multipart form parsing, broken json, etc\n - CONN_DOES_NOT_EXIST: when path is bad\n - CONN_INVALID_REQUEST: something wrong with a header\n - CONN_METHOD_NOT_ALLOWED: when a request method is not allowed\n - CONN_NO_GDPR_CONSENT: lack GDPR consent\n - CONN_AUTH_METHOD_DISABLED: authentication method is disabled\n - MODEL_TRAINED: Model/Custom Training related 20xxx\n\nCustom model has been already trained.\n - MODEL_TRAINING: Custom model is currently training.\n - MODEL_UNTRAINED: Custom model has not yet been trained.\n - MODEL_QUEUED_FOR_TRAINING: Custom model is currently in queue for training, waiting on assets to process first.\n - MODEL_TRAINING_FAILED: generic err msg for any type of model training err.\n - MODEL_BUILDING: For new V3 DockerInternalType models which are built images\n - MODEL_BUILDING_FAILED: Failed to build image for model.\n - MODEL_BUILD_UNEXPECTED_ERROR: Failed to build image for model.\n - MODEL_TRAINING_NO_DATA: Custom model training had no data.  FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_NO_POSITIVES: Custom model training had no positive examples. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS: Custom model training was ONE_VS_N but with a single class. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_TIMED_OUT: Training took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_WAITING_ERROR: Training got error waiting on asset pipeline to finish. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_UNKNOWN_ERROR: Training threw an unknown exception.\n - MODEL_TRAINING_MSG_REDELIVER: Training message was redelivered. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_INSUFFICIENT_DATA: Training got error due to insufficient labelled data. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_INVALID_PARAMS: FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED: Training is stopped because too much data was dropped. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_EVALUATION_TIMED_OUT: Evaluation took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_WAITING_ERROR: Evaluation got error waiting on asset pipeline to finish.FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_UNKNOWN_ERROR: EVALUATION THREW AN UNKNOWN EXCEPTION.\n - MODEL_EVALUATION_MSG_REDELIVER: Eval message was redelivered. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_NEED_LABELS: Don't have enough concepts labelled to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_NEED_INPUTS: Don't have enough inputs per concept to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_FAILED: Generic err code for eval failure.\n - MODEL_DEPLOYMENT_FAILED: Used when inference coordinator failed to deploy spire and throws an error\n - MODEL_DEPLOYING: Used when calling the inference coordinator to deploy a spire\n - MODEL_QUEUED_FOR_DEPLOYMENT: Used when training is completed\n - MODEL_NOT_DEPLOYED: Used when model spire deployment is manually taken down or due to inactivity\n - MODEL_REFERENCE_INVALID_ARGUMENT: Used when a model reference field is not set properly\n - MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT: Used when a model example input field is not set properly\n - MODEL_EXPORTED: Model Export status codes\n - WORKFLOW_NO_MATCHING_INPUT: specified model input not in workflow\n - WORKFLOW_REQUIRE_TRAINED_MODEL: specified model must be trained\n - WORKFLOW_INVALID_ARGUMENT: error in the request somewhere\n - WORKFLOW_INVALID_REQUEST: error in the request somewhere\n - CONCEPT_MODIFY_SUCCESS: Concept related 23xxx\n - ANNOTATION_SUCCESS: Annotation related 24xxx\n - METADATA_INVALID_PATCH_ARGUMENTS: Metadata related 249xx\n - TRAINER_JOB_STATE_NONE: Training service related 25xxx\n - DATA_DUMP_SUCCESS: Data Dump related 251xx\n - DATA_DUMP_NO_DATA: DEPRECATED: Not used anymore. Now for an empty data dump, DATA_DUMP_SUCCESS is returned. To detect an empty data dump, check if the inptus count is 0.\n - APP_DUPLICATION_SUCCESS: Duplicate related 252xx\n - MODULE_DOES_NOT_EXIST: Module related codes 253xx\n - BULK_OPERATION_SUCCESS: Bulk Operation related codes 254xx\n - RUNNER_DOES_NOT_EXIST: Runner related codes 256xx\n - NODEPOOL_DOES_NOT_EXIST: Nodepool related codes 257xx\n - COMPUTE_CLUSTER_DOES_NOT_EXIST: ComputeCluster related codes 258xx\n - INPUT_DOWNLOAD_SUCCESS: Input:Image related 30xxx\n - INPUT_DOWNLOAD_PENDING: when things are async, this is the default status.\n - INPUT_DOWNLOAD_FAILED: any type of error downloading and processing\n - INPUT_VIDEO_DOWNLOAD_SUCCESS: Input:Video related 31xxx -- Deprecated\n - INPUT_WRITES_DISABLED_FOR_MAINTENANCE: deprecate this one. Use REQUEST_DISABLED_FOR_MAINTENANCE\n - PREDICT_INVALID_REQUEST: API formatting issues 4000x\n - DATABASE_DUPLICATE_KEY: Other related 400xx\n - EXTERNAL_CONNECTION_ERROR: could not connect to external services\n - QUEUE_CONN_ERROR: Queue related errors 41xxx\n - SQS_OVERLIMIT: SQS related errors 411xx\n - SEARCH_INTERNAL_FAILURE: Search related errors 43xxxx\n - EVALUATION_QUEUED: Workflow evaluation err code\n - STRIPE_EVENT_ERROR: Stripe 44xxx\n - CACHE_MISS: Redis/Cache 45xxx\n - SIGNUP_EVENT_ERROR: Sift Science 46xxx\n - APP_COUNT_INVALID_MESSAGE: Application counts related errors 470xx\n - MP_DOWNLOAD_ERROR: Media processor related errors 471xx -- DEPRECATED\n - DATATIER_CONN_ERROR: DataTier related error 472xx\n - USER_CONSENT_FACE: User legal consent stauts related 50xxx\n - WORKER_MISSING: Workers 51xxx\n - COLLECTOR_MISSING: Collectors 52xxx\n - SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST: SSO 53xxx\n - TASK_IN_PROGRESS: Tasks 54xxx\nThe task was created.\n - TASK_DONE: The task is completed.\n - TASK_WONT_DO: The task is marked as abandoned.\n - TASK_FAILED: An error occurred during add-task-annotations or add-auto-annotations pipeline.\n - TASK_IDLE: When an Auto Annotation task job has finished processing its last batch and is waiting for more dataset assets.\n - TASK_CONFLICT: The task operation is in conflict with the current state of the server.\n - TASK_NOT_IMPLEMENTED: Certain task-related scenarios are not implemented.\n - TASK_MISSING: Task was not found.\n - TASK_PERMISSION_DENIED: Not allowed to perform a task-related action.\n - LABEL_ORDER_PENDING: Label Order Related Status Code 55xxx\n - LICENSE_ACTIVE: License Related Status Code 600xx\n - LICENSE_DELETED: hidden state not reflected to users\n - PASSWORD_VALIDATION_SUCCESS: Password Related Status Code\n - FEATUREFLAG_CONFIG_NOT_FOUND: Feature flags status code\n - MAINTENANCE_SUCCESS: Maintenance status code\n - DATASET_VERSION_PENDING: Datasets 64xxx\nThe dataset version is pending to be processed.\n - DATASET_VERSION_IN_PROGRESS: The dataset version is currently being processed.\n - DATASET_VERSION_READY: The dataset version is ready to be used.\n - DATASET_VERSION_FAILURE: An error occurred during the dataset version processing.\n - DATASET_VERSION_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version processing.\n - DATASET_VERSION_CONFLICT: An alteration to dataset version would create a conflict\n - DATASET_INPUT_SUCCESS: The dataset input was successfully added.\n - DATASET_INPUT_DUPLICATE: The dataset input is a duplicate.\nDeprecated: Unused.\n - DATASET_VERSION_EXPORT_SUCCESS: The dataset version export is completed.\n - DATASET_VERSION_EXPORT_PENDING: The dataset version is pending to be exported.\n - DATASET_VERSION_EXPORT_FAILED: An error occurred during the dataset version export.\n - DATASET_VERSION_EXPORT_IN_PROGRESS: The dataset version is currently being exported.\n - DATASET_VERSION_EXPORT_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version export.\n - JOB_QUEUED: Generic Job status codes\n - AUTH_MISSING_IDP_ASSOC: auth issues\n\nTODO: Knowledge graph related 80xxx\n - UPLOAD_IN_PROGRESS: Multipart uploading status codes\n - BILLING_INVALID_INFO: Billing related issues: 69xxx\n - INTERNAL_SERVER_ISSUE: Internal issues: 98xxx\n - CONN_UNCATEGORIZED: Uncategorized: 99xxx: move off as soon as known\n - BAD_REQUEST: Deprecated: migrate off to one of the internal issues\n - SERVER_ERROR: Deprecated: migrate off to one of the internal issues",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ZERO",
                "SUCCESS",
                "MIXED_STATUS",
                "FAILURE",
                "TRY_AGAIN",
                "NOT_IMPLEMENTED",
                "MOVED",
                "TEAPOT",
                "CONN_ACCOUNT_ISSUES",
                "CONN_TOKEN_INVALID",
                "CONN_CREDENTIALS_INVALID",
                "CONN_EXCEED_HOURLY_LIMIT",
                "CONN_EXCEED_MONTHLY_LIMIT",
                "CONN_THROTTLED",
                "CONN_EXCEEDS_LIMITS",
                "CONN_INSUFFICIENT_SCOPES",
                "CONN_KEY_INVALID",
                "CONN_KEY_NOT_FOUND",
                "CONN_BAD_REQUEST_FORMAT",
                "CONN_DOES_NOT_EXIST",
                "CONN_INVALID_REQUEST",
                "CONN_METHOD_NOT_ALLOWED",
                "CONN_NO_GDPR_CONSENT",
                "CONN_AUTH_METHOD_DISABLED",
                "MODEL_TRAINED",
                "MODEL_TRAINING",
                "MODEL_UNTRAINED",
                "MODEL_QUEUED_FOR_TRAINING",
                "MODEL_UPLOADING",
                "MODEL_UPLOADING_FAILED",
                "MODEL_TRAINING_FAILED",
                "MODEL_BUILDING",
                "MODEL_BUILDING_FAILED",
                "MODEL_BUILD_UNEXPECTED_ERROR",
                "MODEL_TRAINING_NO_DATA",
                "MODEL_TRAINING_NO_POSITIVES",
                "MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS",
                "MODEL_TRAINING_TIMED_OUT",
                "MODEL_TRAINING_WAITING_ERROR",
                "MODEL_TRAINING_UNKNOWN_ERROR",
                "MODEL_TRAINING_MSG_REDELIVER",
                "MODEL_TRAINING_INSUFFICIENT_DATA",
                "MODEL_TRAINING_INVALID_PARAMS",
                "MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED",
                "MODEL_MODIFY_SUCCESS",
                "MODEL_MODIFY_PENDING",
                "MODEL_MODIFY_FAILED",
                "MODEL_DOES_NOT_EXIST",
                "MODEL_PERMISSION_DENIED",
                "MODEL_INVALID_ARGUMENT",
                "MODEL_INVALID_REQUEST",
                "MODEL_EVALUATED",
                "MODEL_EVALUATING",
                "MODEL_NOT_EVALUATED",
                "MODEL_QUEUED_FOR_EVALUATION",
                "MODEL_EVALUATION_TIMED_OUT",
                "MODEL_EVALUATION_WAITING_ERROR",
                "MODEL_EVALUATION_UNKNOWN_ERROR",
                "MODEL_PREDICTION_FAILED",
                "MODEL_EVALUATION_MSG_REDELIVER",
                "MODEL_EVALUATION_NEED_LABELS",
                "MODEL_EVALUATION_NEED_INPUTS",
                "MODEL_EVALUATION_FAILED",
                "MODEL_DEPLOYMENT_FAILED",
                "MODEL_DEPLOYING",
                "MODEL_QUEUED_FOR_DEPLOYMENT",
                "MODEL_NOT_DEPLOYED",
                "MODEL_REFERENCE_INVALID_ARGUMENT",
                "MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT",
                "MODEL_EXPORTED",
                "MODEL_EXPORTING",
                "MODEL_EXPORTING_FAILED",
                "MODEL_EXPORT_PENDING",
                "WORKFLOW_NO_MATCHING_INPUT",
                "WORKFLOW_REQUIRE_TRAINED_MODEL",
                "WORKFLOW_DUPLICATE",
                "WORKFLOW_UNSUPPORTED_FORMAT",
                "WORKFLOW_DOES_NOT_EXIST",
                "WORKFLOW_PERMISSION_DENIED",
                "WORKFLOW_INVALID_ARGUMENT",
                "WORKFLOW_INVALID_RECIPE",
                "WORKFLOW_INVALID_TEMPLATE",
                "WORKFLOW_INVALID_GRAPH",
                "WORKFLOW_INTERNAL_FAILURE",
                "WORKFLOW_INVALID_REQUEST",
                "WORKFLOW_MODIFY_SUCCESS",
                "WORKFLOW_MODIFY_PENDING",
                "WORKFLOW_MODIFY_FAILED",
                "WORKFLOW_REINDEX_FAILED",
                "CONCEPT_MODIFY_SUCCESS",
                "CONCEPT_MODIFY_PENDING",
                "CONCEPT_MODIFY_FAILED",
                "ANNOTATION_SUCCESS",
                "ANNOTATION_PENDING",
                "ANNOTATION_FAILED",
                "ANNOTATION_UNKNOWN_STATUS",
                "ANNOTATION_INVALID_ARGUMENT",
                "ANNOTATION_PERMISSION_DENIED",
                "ANNOTATION_AWAITING_REVIEW",
                "ANNOTATION_AWAITING_CONSENSUS_REVIEW",
                "ANNOTATION_REVIEW_DENIED",
                "ANNOTATION_MODIFY_SUCCESS",
                "ANNOTATION_MODIFY_PENDING",
                "ANNOTATION_MODIFY_FAILED",
                "METADATA_INVALID_PATCH_ARGUMENTS",
                "METADATA_PARSING_ISSUE",
                "METADATA_MANIPULATION_ISSUE",
                "TRAINER_JOB_STATE_NONE",
                "TRAINER_JOB_STATE_QUEUED",
                "TRAINER_JOB_STATE_RUNNING",
                "TRAINER_JOB_STATE_COMPLETE",
                "TRAINER_JOB_STATE_ERROR",
                "DATA_DUMP_SUCCESS",
                "DATA_DUMP_PENDING",
                "DATA_DUMP_FAILED",
                "DATA_DUMP_IN_PROGRESS",
                "DATA_DUMP_NO_DATA",
                "DATA_DUMP_UNEXPECTED_ERROR",
                "DATA_DUMP_EXPORT_SUCCESS",
                "DATA_DUMP_EXPORT_PENDING",
                "DATA_DUMP_EXPORT_FAILED",
                "DATA_DUMP_EXPORT_IN_PROGRESS",
                "DATA_DUMP_EXPORT_UNEXPECTED_ERROR",
                "APP_DUPLICATION_SUCCESS",
                "APP_DUPLICATION_FAILED",
                "APP_DUPLICATION_PENDING",
                "APP_DUPLICATION_IN_PROGRESS",
                "APP_DUPLICATION_INVALID_REQUEST",
                "MODULE_DOES_NOT_EXIST",
                "MODULE_PERMISSION_DENIED",
                "MODULE_INVALID_ARGUMENT",
                "MODULE_INVALID_REQUEST",
                "BULK_OPERATION_SUCCESS",
                "BULK_OPERATION_FAILED",
                "BULK_OPERATION_PENDING",
                "BULK_OPERATION_IN_PROGRESS",
                "BULK_OPERATION_INVALID_REQUEST",
                "BULK_OPERATION_CANCELLED",
                "BULK_OPERATION_UNEXPECTED_ERROR",
                "RUNNER_DOES_NOT_EXIST",
                "RUNNER_PERMISSION_DENIED",
                "RUNNER_INVALID_ARGUMENT",
                "RUNNER_INVALID_REQUEST",
                "RUNNER_NEEDS_RETRY",
                "RUNNER_STREAM_START",
                "RUNNER_STREAM_END",
                "RUNNER_ITEM_CANCELLED",
                "RUNNER_PROCESSING_FAILED",
                "NODEPOOL_DOES_NOT_EXIST",
                "NODEPOOL_INVALID_ARGUMENT",
                "NODEPOOL_INVALID_REQUEST",
                "COMPUTE_CLUSTER_DOES_NOT_EXIST",
                "COMPUTE_CLUSTER_INVALID_ARGUMENT",
                "COMPUTE_CLUSTER_INVALID_REQUEST",
                "INPUT_DOWNLOAD_SUCCESS",
                "INPUT_DOWNLOAD_PENDING",
                "INPUT_DOWNLOAD_FAILED",
                "INPUT_DOWNLOAD_IN_PROGRESS",
                "INPUT_STATUS_UPDATE_FAILED",
                "INPUT_DELETE_FAILED",
                "INPUT_DUPLICATE",
                "INPUT_UNSUPPORTED_FORMAT",
                "INPUT_DOES_NOT_EXIST",
                "INPUT_PERMISSION_DENIED",
                "INPUT_INVALID_ARGUMENT",
                "INPUT_OVER_LIMIT",
                "INPUT_INVALID_URL",
                "INPUT_MODIFY_SUCCESS",
                "INPUT_MODIFY_PENDING",
                "INPUT_MODIFY_FAILED",
                "INPUT_STORAGE_HOST_FAILED",
                "ALL_INPUT_INVALID_BYTES",
                "INPUT_CLUSTER_SUCCESS",
                "INPUT_CLUSTER_PENDING",
                "INPUT_CLUSTER_FAILED",
                "INPUT_CLUSTER_IN_PROGRESS",
                "INPUT_REINDEX_SUCCESS",
                "INPUT_REINDEX_PENDING",
                "INPUT_REINDEX_FAILED",
                "INPUT_REINDEX_IN_PROGRESS",
                "INPUT_VIDEO_DOWNLOAD_SUCCESS",
                "INPUT_VIDEO_DOWNLOAD_PENDING",
                "INPUT_VIDEO_DOWNLOAD_FAILED",
                "INPUT_VIDEO_DUPLICATE",
                "INPUT_VIDEO_UNSUPPORTED_FORMAT",
                "INPUT_VIDEO_DOES_NOT_EXIST",
                "INPUT_VIDEO_PERMISSION_DENIED",
                "INPUT_VIDEO_INVALID_ARGUMENT",
                "INPUT_VIDEO_OVER_LIMIT",
                "INPUT_VIDEO_INVALID_URL",
                "INPUT_VIDEO_MODIFY_SUCCESS",
                "INPUT_VIDEO_MODIFY_PENDING",
                "INPUT_VIDEO_MODIFY_FAILED",
                "INPUT_VIDEO_STORAGE_HOST_FAILED",
                "ALL_INPUT_VIDEOS_INVALID_BYTES",
                "INPUT_VIDEO_PROCESSING_SUCCESS",
                "INPUT_VIDEO_PROCESSING_PENDING",
                "INPUT_VIDEO_PROCESSING_FAILED",
                "INPUT_VIDEO_STORAGE_INCONSISTENCY",
                "INPUT_VIDEO_STORAGE_FAILURE",
                "INPUT_VIDEO_URL_GENERATION_FAILURE",
                "INPUT_CONNECTION_FAILED",
                "REQUEST_DISABLED_FOR_MAINTENANCE",
                "INPUT_WRITES_DISABLED_FOR_MAINTENANCE",
                "INPUT_INVALID_REQUEST",
                "PREDICT_INVALID_REQUEST",
                "SEARCH_INVALID_REQUEST",
                "CONCEPTS_INVALID_REQUEST",
                "STATS_INVALID_REQUEST",
                "DATABASE_DUPLICATE_KEY",
                "DATABASE_STATEMENT_TIMEOUT",
                "DATABASE_INVALID_ROWS_AFFECTED",
                "DATABASE_DEADLOCK_DETECTED",
                "DATABASE_FAIL_TASK",
                "DATABASE_FAIL_TO_GET_CONNECTIONS",
                "DATABASE_TOO_MANY_CLIENTS",
                "DATABASE_CONSTRAINT_VIOLATED",
                "DATABASE_CANCELED",
                "ASYNC_WORKER_MULTI_ERRORS",
                "RPC_REQUEST_QUEUE_FULL",
                "RPC_SERVER_UNAVAILABLE",
                "RPC_REQUEST_TIMEOUT",
                "RPC_MAX_MESSAGE_SIZE_EXCEEDED",
                "RPC_CANCELED",
                "RPC_UNKNOWN_METHOD",
                "REQUEST_CANCELED_BY_USER",
                "CLUSTER_INTERNAL_FAILURE",
                "EXTERNAL_CONNECTION_ERROR",
                "QUERY_INVALID_SYNTAX",
                "QUEUE_CONN_ERROR",
                "QUEUE_CLOSE_REQUEST_TIMEOUT",
                "QUEUE_CONN_CLOSED",
                "QUEUE_PUBLISH_ACK_TIMEOUT",
                "QUEUE_PUBLISH_ERROR",
                "QUEUE_SUBSCRIPTION_TIMEOUT",
                "QUEUE_SUBSCRIPTION_ERROR",
                "QUEUE_MARSHALLING_FAILED",
                "QUEUE_UNMARSHALLING_FAILED",
                "QUEUE_MAX_MSG_REDELIVERY_EXCEEDED",
                "QUEUE_ACK_FAILURE",
                "SQS_OVERLIMIT",
                "SQS_INVALID_RECEIPT_HANDLE",
                "SQS_UNKNOWN",
                "SEARCH_INTERNAL_FAILURE",
                "SEARCH_PROJECTION_FAILURE",
                "SEARCH_PREDICTION_FAILURE",
                "SEARCH_BY_NOT_FULLY_INDEXED_INPUT",
                "SAVED_SEARCH_MODIFY_FAILED",
                "SEARCH_COUNTS_UNAVAILABLE",
                "EVALUATION_QUEUED",
                "EVALUATION_IN_PROGRESS",
                "EVALUATION_SUCCESS",
                "EVALUATION_FAILED_TO_RETRIEVE_DATA",
                "EVALUATION_INVALID_ARGUMENT",
                "EVALUATION_FAILED",
                "EVALUATION_PENDING",
                "EVALUATION_TIMED_OUT",
                "EVALUATION_UNEXPECTED_ERROR",
                "EVALUATION_MIXED",
                "STRIPE_EVENT_ERROR",
                "CACHE_MISS",
                "REDIS_SCRIPT_EXITED_WITH_FAILURE",
                "REDIS_STREAM_ERR",
                "REDIS_NO_CONSUMERS",
                "REDIS_STREAM_BACKOFF",
                "SIGNUP_EVENT_ERROR",
                "SIGNUP_FLAGGED",
                "FILETYPE_UNSUPPORTED",
                "APP_COUNT_INVALID_MESSAGE",
                "APP_COUNT_UPDATE_INCREMENT_FAILED",
                "APP_COUNT_REBUILD_FAILED",
                "APP_COUNT_INTERNAL_FAILURE",
                "MP_DOWNLOAD_ERROR",
                "MP_RESOLVE_DNS_ERROR",
                "MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR",
                "MP_IMAGE_DECODE_ERROR",
                "MP_INVALID_ARGUMENT",
                "MP_IMAGE_PROCESSING_ERROR",
                "DATATIER_CONN_ERROR",
                "USER_CONSENT_FACE",
                "WORKER_MISSING",
                "WORKER_ACTIVE",
                "WORKER_INACTIVE",
                "COLLECTOR_MISSING",
                "COLLECTOR_ACTIVE",
                "COLLECTOR_INACTIVE",
                "COLLECTOR_POST_INPUT_FAILED",
                "SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST",
                "TASK_IN_PROGRESS",
                "TASK_DONE",
                "TASK_WONT_DO",
                "TASK_FAILED",
                "TASK_IDLE",
                "TASK_CONFLICT",
                "TASK_NOT_IMPLEMENTED",
                "TASK_MISSING",
                "TASK_PERMISSION_DENIED",
                "TASK_ASSIGNMENT_SUCCESS",
                "TASK_ASSIGNMENT_PENDING",
                "TASK_ASSIGNMENT_AWAITING_REVIEW",
                "TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW",
                "TASK_ASSIGNMENT_REVIEW_DENIED",
                "LABEL_ORDER_PENDING",
                "LABEL_ORDER_IN_PROGRESS",
                "LABEL_ORDER_SUCCESS",
                "LABEL_ORDER_CANCELED",
                "LICENSE_ACTIVE",
                "LICENSE_DOES_NOT_EXIST",
                "LICENSE_NEED_UPDATE",
                "LICENSE_EXPIRED",
                "LICENSE_REVOKED",
                "LICENSE_DELETED",
                "LICENSE_VOLUME_EXCEEDED",
                "PASSWORD_VALIDATION_SUCCESS",
                "PASSWORD_VALIDATION_FAILED",
                "PASSWORDPOLICY_INVALID_ARGUMENT",
                "FEATUREFLAG_CONFIG_NOT_FOUND",
                "FEATUREFLAG_INVALID_ARGUMENT",
                "FEATUREFLAG_BLOCKED",
                "MAINTENANCE_SUCCESS",
                "MAINTENANCE_FAILED",
                "DATASET_VERSION_PENDING",
                "DATASET_VERSION_IN_PROGRESS",
                "DATASET_VERSION_READY",
                "DATASET_VERSION_FAILURE",
                "DATASET_VERSION_UNEXPECTED_ERROR",
                "DATASET_VERSION_CONFLICT",
                "DATASET_INPUT_SUCCESS",
                "DATASET_INPUT_DUPLICATE",
                "DATASET_VERSION_EXPORT_SUCCESS",
                "DATASET_VERSION_EXPORT_PENDING",
                "DATASET_VERSION_EXPORT_FAILED",
                "DATASET_VERSION_EXPORT_IN_PROGRESS",
                "DATASET_VERSION_EXPORT_UNEXPECTED_ERROR",
                "JOB_QUEUED",
                "JOB_RUNNING",
                "JOB_COMPLETED",
                "JOB_FAILED",
                "JOB_CANCELLED",
                "JOB_UNEXPECTED_ERROR",
                "JOB_CONFLICT",
                "AUTH_MISSING_IDP_ASSOC",
                "LIST_OBJECTS_FAILED",
                "ARCHIVE_EXTRACT_FAILED",
                "UPLOAD_IN_PROGRESS",
                "UPLOAD_DONE",
                "UPLOAD_FAILED",
                "UPLOAD_UNEXPECTED_ERROR",
                "UPLOAD_EXPIRED",
                "UPLOAD_CANCELED",
                "UPLOAD_CONFLICT",
                "BILLING_INVALID_INFO",
                "INTERNAL_SERVER_ISSUE",
                "INTERNAL_FETCHING_ISSUE",
                "INTERNAL_DATABASE_ISSUE",
                "INTERNAL_CONTEXT_CANCELED",
                "INTERNAL_UNEXPECTED_TIMEOUT",
                "INTERNAL_UNEXPECTED_V1",
                "INTERNAL_UNEXPECTED_PANIC",
                "INTERNAL_UNEXPECTED_SPIRE",
                "INTERNAL_REDIS_UNAVAILABLE",
                "INTERNAL_RESOURCE_EXHAUSTED",
                "INTERNAL_REDIS_UNCATEGORIZED",
                "INTERNAL_AWS_UNCATEGORIZED",
                "INTERNAL_AZURE_UNCATEGORIZED",
                "CONN_UNCATEGORIZED",
                "MODEL_UNCATEGORIZED",
                "INPUT_UNCATEGORIZED",
                "ANNOTATION_UNCATEGORIZED",
                "BILLING_UNCATEGORIZED",
                "INTERNAL_UNCATEGORIZED",
                "BAD_REQUEST",
                "SERVER_ERROR"
              ],
              "default": "ZERO"
            }
          },
          {
            "name": "status.description",
            "description": "A short description of the error.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.details",
            "description": "More details of the given error.\nThese details may be exposed to non-technical users.\nFor technical details, try to use developer_notes field.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.stackTrace",
            "description": "For some environment we may return a stack trace to help debug\nany issues.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status.percentCompleted",
            "description": "specifically for long running jobs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status.timeRemaining",
            "description": "if status is pending, how much time is remaining (in seconds)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status.reqId",
            "description": "A request ID may be present, to help monitoring and tracking requests",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.internalDetails",
            "description": "Internal Annotation (do not set in production, for internal Clarifai use only).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.redirectInfo.url",
            "description": "New location for the resource. Used to set response Location header.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.redirectInfo.resourceType",
            "description": "Resource type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.redirectInfo.oldResourceId",
            "description": "Old resource id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.redirectInfo.newResourceId",
            "description": "New resource id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status.developerNotes",
            "description": "Notes for developer.\nThese notes are rather technical details for developers how to interpret the status,\ne.g. why an error occurred and how to avoid getting the error.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple inputs in one request.\nThis call is asynchronous.",
        "operationId": "V2_DeleteInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_DeleteInputsBody"
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add 1 or more input to an app.\nThe actual inputs processing is asynchronous.",
        "operationId": "V2_PostInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "inputs": {
                    "type": "array",
                    "title": "List of inputs to post.\nFor each input, the following fields are used:\n* id\n* data\n* dataset_ids",
                    "items": {}
                  },
                  "inputsAddJobId": {
                    "type": "string",
                    "description": "Collect statistics about created inputs in job with given ID.\n* If job ID is empty, then job is not created.\n* If job ID is non-empty and doesn't already exist, then a new job will be created with given ID.\n* If job ID does already exist, then new inputs statistics are merged with previous inputs statistics."
                  },
                  "inputIdConflictResolution": {
                    "$ref": "#/components/schemas/apiInputIDConflictResolution"
                  }
                },
                "title": "PostInputsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more inputs.",
        "operationId": "V2_PatchInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "inputs": {
                    "type": "array",
                    "title": "List of inputs to patch.\nInputs are identified by id field.\nFor each input, the following fields are patchable:\n* data",
                    "items": {}
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  }
                },
                "title": "PatchInputsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/annotations": {
      "delete": {
        "summary": "Delete multiple annotations in one request.",
        "operationId": "V2_DeleteAnnotations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_DeleteAnnotations3Body"
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/data_sources": {
      "post": {
        "summary": "Initiates retrieval of inputs from cloud storage from a user provided data source.\nWill create and return an inputs-add-job for tracking progress.\nArchives will be extracted and their contents will be processed as inputs.",
        "description": "The cloud URL will be treated as a filter prefix. For example s3:/bucket/images_folder/abc will process\nfiles in the images_folder beginning with abc or in a subfolder beginning with abc.\nFor example:\nbucket/images_folder/abcImage.png\nbucket/images_folder/abc-1/Data.zip\n\nIf given URL is for a private bucket or file, then credentials should be provided to access the bucket.\nCredentials should include rights to list the objects in the bucket, except when pointed directly at a file archive,\nin which case it only requires rights to access that particular file.",
        "operationId": "V2_PostInputsDataSources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "dataSources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiInputsDataSource"
                    }
                  },
                  "callBackUrl": {
                    "type": "string",
                    "description": "If call back url is set, we will send a Post request to this endpoint with job status."
                  },
                  "appPat": {
                    "type": "string",
                    "title": "Personal Access Token to the application to which inputs are added"
                  }
                },
                "description": "Initiates retrieval of inputs from cloud storage from a user provided data source.\nWill create and return an inputs-add-job for tracking progress.\nArchives will be extracted and their contents will be processed as inputs.\n\nThe cloud URL will be treated as a filter prefix. For example s3:/bucket/images_folder/abc will process\nfiles in the images_folder beginning with abc or in a subfolder beginning with abc.\nFor example:\nbucket/images_folder/abcImage.png\nbucket/images_folder/abc-1/Data.zip\n\nIf given URL is for a private bucket or file, then credentials should be provided to access the bucket.\nCredentials should include rights to list the objects in the bucket, except when pointed directly at a file archive,\nin which case it only requires rights to access that particular file."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/jobs/add": {
      "get": {
        "summary": "List all the inputs add jobs",
        "operationId": "V2_ListInputsAddJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/jobs/add/{id}": {
      "get": {
        "summary": "Get the input add job details by ID",
        "operationId": "V2_GetInputsAddJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "id of add inputs job",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "cancel the input add job by ID",
        "operationId": "V2_CancelInputsAddJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "id of add inputs job to be cancelled",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/jobs/extraction": {
      "get": {
        "summary": "List all the input extraction jobs",
        "operationId": "V2_ListInputsExtractionJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsExtractionJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "operationId": "V2_CancelInputsExtractionJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsExtractionJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "List of extraction job ids to be cancelled"
                  }
                },
                "title": "Cancel a list of extraction job ids"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/jobs/extraction/{inputsExtractionJobId}": {
      "get": {
        "summary": "Get the input extraction job details by ID",
        "operationId": "V2_GetInputsExtractionJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputsExtractionJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputsExtractionJobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/searches": {
      "post": {
        "summary": "Execute a search over inputs",
        "operationId": "V2_PostInputsSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user_id and app_id to query from.",
                    "title": "The user_id and app_id to query from."
                  },
                  "searches": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiSearch"
                    },
                    "title": "The searched to be executed or saved"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/apiPagination"
                  },
                  "onlyCount": {
                    "type": "boolean",
                    "description": "If only_count is set, then the response will not contain hits,\nbut hit_counts instead."
                  }
                },
                "title": "Execute a new input search and optionally save it"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch saved inputs searches by ids.",
        "operationId": "V2_PatchInputsSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_PatchAnnotationsSearchesBody"
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/status": {
      "get": {
        "summary": "Get input count per status.",
        "operationId": "V2_GetInputCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputCountResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/stream": {
      "get": {
        "summary": "Streams all the inputs starting from oldest assets.",
        "operationId": "V2_StreamInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 20.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderById",
            "description": "By default, the endpoint return inputs by the time when it is added.\nIf this is set to true, we will return inputs by id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "descending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/uploads": {
      "post": {
        "summary": "Start uploading a file archive containing inputs.\nWill create and return an inputs-add-job for tracking progress.",
        "description": "Associated inputs-add-job contains an upload id which should be completed through `PutUploadContentParts` endpoint.\nCompleting the upload will automatically begin unpacking the archive and uploading the contents as inputs.",
        "operationId": "V2_PostInputsUploads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputsAddJobResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "inputsUploads": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiInputsUpload"
                    }
                  }
                },
                "description": "Start uploading a file archive containing inputs.\nWill create and return an inputs-add-job for tracking progress.\n\nAssociated inputs-add-job contains an upload id which should be completed through `PutUploadContentParts` endpoint.\nCompleting the upload will automatically begin unpacking the archive and uploading the contents as inputs."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/{inputId}": {
      "get": {
        "summary": "Get a specific input from an app.",
        "operationId": "V2_GetInput",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single input asynchronously.",
        "operationId": "V2_DeleteInput",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/{inputId}/annotations/{annotationId}": {
      "get": {
        "summary": "Get a specific annotation from an app.",
        "operationId": "V2_GetAnnotation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "annotationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single annotation.",
        "operationId": "V2_DeleteAnnotation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "annotationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/inputs/{inputId}/video_manifest": {
      "get": {
        "summary": "Get a video input manifest.",
        "operationId": "V2_GetInputVideoManifest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiGetVideoManifestResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/installed_module_versions": {
      "get": {
        "summary": "List installed modules vesrions for an app.",
        "operationId": "V2_ListInstalledModuleVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInstalledModuleVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Uninstall an installed module version which will deploy the specific ModuleVersion to the app\nin the url.\nThis cleaned up any associated caller keys so needs the Keys_Delete scope.",
        "operationId": "V2_DeleteInstalledModuleVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request to delete several installed module versions by the list of ids."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Install a new module version which will deploy the specific ModuleVersion to the app in the url.",
        "operationId": "V2_PostInstalledModuleVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInstalledModuleVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "installedModuleVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiInstalledModuleVersion"
                    },
                    "description": "This allows you to create one or more module by posting it to the API."
                  }
                },
                "title": "PostInstalledModuleVersionsRequest to install a module version into the app in the URL"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/installed_module_versions/{installedModuleVersionId}": {
      "get": {
        "summary": "Get installed modules vesrions for an app.",
        "operationId": "V2_GetInstalledModuleVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleInstalledModuleVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "installedModuleVersionId",
            "description": "the ID to get of the install module version.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/installed_module_versions/{installedModuleVersionId}/key": {
      "post": {
        "summary": "Assign a key that the caller owns to be used when accessing this installed module version\nIf this endpoint is called with a different key then it overwrites what is there.",
        "operationId": "V2_PostInstalledModuleVersionsKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleKeyResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "installedModuleVersionId",
            "description": "the ID to get of the install module version.\n\nNote(zeiler): we don't provide a key to create since it's always deterministic.\n we'll create a PAT, owned by the caller with the scopes that the module requests.\n in the future if we want we can pass in a Key key = 3; field so that the caller\n can adjust the scopes, but for now that doesn't seem necessary.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  }
                },
                "description": "PostInstalledModuleVersionsKeyRequest to associate a key of the caller's to the installed module\nversion."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/keys": {
      "get": {
        "summary": "List keys by app_id",
        "operationId": "V2_ListAppKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiKeyResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/label_orders": {
      "get": {
        "summary": "List label orders.",
        "operationId": "V2_ListLabelOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiLabelOrderResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple label orders in one request.\nthis do not change task status",
        "operationId": "V2_DeleteLabelOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request to delete a list of label orders."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add Label orders.",
        "operationId": "V2_PostLabelOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiLabelOrderResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "labelOrders": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiLabelOrder"
                    }
                  }
                },
                "description": "Request to create label orders."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more label orders.",
        "operationId": "V2_PatchLabelOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiLabelOrderResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "labelOrders": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiLabelOrder"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  }
                },
                "description": "Request to patch a list of label orders."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/label_orders/{labelOrderId}": {
      "get": {
        "summary": "Get a label order.",
        "operationId": "V2_GetLabelOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleLabelOrderResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labelOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models": {
      "get": {
        "summary": "List all the models.",
        "operationId": "V2_ListModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByName",
            "description": "Whether to order by the name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByNumInputs",
            "description": "Whether to order by the number of training inputs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "Whether to order by the modified_at time of the latest model version.\nIf none of the sort options is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by count of stars",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "modelTypeId",
            "description": "Filtering options:\nFilter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's\nsupported.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainedOnly",
            "description": "If true, we only return models that have the status MODEL_TRAINED, which includes non-trainable model types.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inputFields",
            "description": "The list of input fields to the model.\nFor example, you can specify 'image', which will return models that make inferences on images like visual-classifier models.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "outputFields",
            "description": "The list of output fields to the model.\nFor example, you can specify 'regions[...].data.concepts', which will return visual-detector models.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "license",
            "description": "Filter by the license of the model version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "featuredOnly",
            "description": "If true, we only return models that are handpicked by clarifai staff",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "If true, we only return models that are starred by the requesting user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "toolkits",
            "description": "List of toolkit tags to filter by",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "useCases",
            "description": "List of use_case tags to filter by",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "description": "List of language tags to filter by",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dontFetchFromMain",
            "description": "Old API behavior resulted in returning clarifai main models when calling ListModels while scoped to an app. While we transition\naway from that, we can use this flag to not always fetch clarifai main models, unless that is the app we are explicitly listing for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter models by bookmark. If set, only return bookmarked models. Otherwise none bookmarked models only.\nNote: you can not filter `trained_only` and bookmark at the same time.\nWhen filter by bookmark, we will return trained and untrained models.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the model:\n  - id\n  - name\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Query name, description and id fields, that can contain the words in the query string. Does NOT support wildcards - full words only. Supports operators \"OR\" and \"-\" as NOT.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Filter by the description and id of the model. This supports wildcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterByUserId",
            "description": "Extends the name filter to include the user_id of the application owner that the model belongs to.\nDeprecated: use search instead of name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple models in one request.",
        "operationId": "V2_DeleteModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_DeleteCollectorsBody"
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a models to an app.",
        "operationId": "V2_PostModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "models": {
                    "type": "array",
                    "description": "This allows you to create one or more model by posting it to the API.",
                    "items": {}
                  }
                },
                "title": "PostModelsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more models.",
        "operationId": "V2_PatchModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "models": {
                    "type": "array",
                    "items": {}
                  },
                  "action": {
                    "type": "string",
                    "description": "Note that 'remove' can be used to remove the model image by setting\n'image.url' in the request to the current value returned for that model.\nThis cannot be used in a request that is patching other fields as well.",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  }
                },
                "title": "PatchModelsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/ids": {
      "patch": {
        "summary": "Patch one or more models ids.",
        "operationId": "V2_PatchModelIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiIdUpdateSource"
                    },
                    "title": "Array containing 1 entry"
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nOnly 'overwrite' is supported"
                  }
                },
                "title": "PatchModelIdsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/searches": {
      "post": {
        "summary": "Search over the models to find one or more you're looking for.\nThis leverage the \"body\" parameter because we also have page and\nper_page as url query param variables in this request.",
        "operationId": "V2_PostModelsSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Ids present in the url of the request.",
                    "title": "Ids present in the url of the request."
                  },
                  "modelQuery": {
                    "$ref": "#/components/schemas/apiModelQuery"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/apiPagination"
                  }
                },
                "description": "Search over the available models."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/types": {
      "get": {
        "summary": "List all the model types available in the platform.\nThis MUST be above ListModels so that the /models/types endpoint takes precedence.",
        "operationId": "V2_ListModelTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelTypeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/types/{modelTypeId}": {
      "get": {
        "summary": "Get a specific model type.",
        "operationId": "V2_GetModelType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelTypeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelTypeId",
            "description": "The specific ModelType.Id you want to retrieve.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}": {
      "get": {
        "summary": "Get a specific model from an app.",
        "operationId": "V2_GetModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "This is included so that we can re-use this request for multiple\nrpcs with and without the version_id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainedBefore",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single model.",
        "operationId": "V2_DeleteModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/check_consents": {
      "patch": {
        "summary": "Update model check consents",
        "operationId": "V2_PatchModelCheckConsents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelCheckConsentResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "description": "the model id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "checkConsents": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "the consents"
                  },
                  "action": {
                    "type": "string",
                    "title": "overwrite supported"
                  }
                },
                "title": "PatchModelCheckConsentsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/concepts": {
      "get": {
        "summary": "List models concepts.",
        "operationId": "V2_ListModelConcepts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "description": "Model id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "Model version Id. Optional, if not provided latest model version is used.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the concept:\n  - id\n  - name\n\nKeywords are used for partial prefix-matching (so searching for \"larif\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/inputs": {
      "get": {
        "summary": "Deprecated: Unmaintained and ideally replaced with usage of datasets\n  The server may refuse to accept requests to this endpoint.",
        "operationId": "V2_ListModelInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/languages": {
      "patch": {
        "summary": "Update model languages tags",
        "operationId": "V2_PatchModelLanguages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelLanguageResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "Only overwrite supported"
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/output_info": {
      "get": {
        "summary": "Get a the output info for a given model_id or model_id/version_id\ncombo.",
        "operationId": "V2_GetModelOutputInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "This is included so that we can re-use this request for multiple\nrpcs with and without the version_id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainedBefore",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/outputs": {
      "post": {
        "summary": "Get predicted outputs from the model.",
        "operationId": "V2_PostModelOutputs3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiOutputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_PostModelOutputs3Body"
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/outputs/generate": {
      "post": {
        "summary": "TODO(zeiler): will need to\nSingle request but streaming resopnses.",
        "operationId": "V2_GenerateModelOutputs2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiMultiOutputResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  },
                  "title": "Stream result of apiMultiOutputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_PostModelOutputs3Body"
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/publish": {
      "post": {
        "summary": "PostModelVersionsPublish",
        "operationId": "V2_PostModelVersionsPublish",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "publications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModelVersionPublishRequest"
                    }
                  }
                },
                "title": "PostModelVersionsPublishRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/references": {
      "get": {
        "summary": "Lists model references tied to a particular model id.",
        "operationId": "V2_ListModelReferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelReferenceResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Optional, defaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "Optional, defaults to 128 references per page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/toolkits": {
      "patch": {
        "summary": "Update model toolkits tags",
        "operationId": "V2_PatchModelToolkits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelToolkitResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "toolkits": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "overwrite supported"
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/unpublish": {
      "post": {
        "summary": "PostModelVersionsUnPublish",
        "operationId": "V2_PostModelVersionsUnPublish",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "publications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModelVersionUnpublishRequest"
                    }
                  }
                },
                "title": "PostModelVersionsUnPublishRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/usecases": {
      "patch": {
        "summary": "Update model use_cases tags",
        "operationId": "V2_PatchModelUseCases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelUseCaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "usecases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "overwrite supported"
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions": {
      "get": {
        "summary": "List all the models.",
        "operationId": "V2_ListModelVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "conceptIds",
            "description": "Filtering options:\nTo list only the model versions that have these concept ids present in them.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "trainedOnly",
            "description": "To list only the model versions that have been trained.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStatusCode",
            "description": "Whether to order by the status code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByNumInputs",
            "description": "Whether to order by the number of training inputs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByDescription",
            "description": "Whether to sort by the description",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time\nIf neither sort option is set to true, will sort by created_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Create a new model version to trigger training of the model.",
        "operationId": "V2_PostModelVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "modelVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModelVersion"
                    }
                  },
                  "description": {
                    "type": "string",
                    "title": "Description about this training run"
                  },
                  "evalInfo": {
                    "$ref": "#/components/schemas/apiEvalInfo"
                  }
                },
                "description": "Create (train) a new model version."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "PatchModelVersions",
        "operationId": "V2_PatchModelVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "modelVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModelVersion"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  }
                },
                "title": "PatchModelVersionsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/time_estimate": {
      "post": {
        "summary": "Get the training time estimate based off train request and estimated input count.",
        "operationId": "V2_PostModelVersionsTrainingTimeEstimate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTrainingTimeEstimateResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "modelVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModelVersion"
                    }
                  },
                  "estimatedInputCount": {
                    "type": "string",
                    "format": "uint64"
                  }
                },
                "title": "Get the estimated training time for a model version"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{modelVersionId}/evaluations": {
      "get": {
        "summary": "Deprecated, use GetEvaluation instead\nList the evaluation metrics for a model version.",
        "operationId": "V2_ListModelVersionEvaluations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Deprecated, use PostEvaluations instead",
        "operationId": "V2_PostModelVersionEvaluations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "evalMetrics": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiEvalMetrics"
                    },
                    "title": "EvalInfo and ID will be used when creating the evaluation"
                  }
                },
                "title": "Evaluate this model vesion"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{modelVersionId}/evaluations/{evaluationId}": {
      "get": {
        "summary": "Deprecated, use GetEvaluation instead\nGet an evaluation metrics for a model version.",
        "operationId": "V2_GetModelVersionEvaluation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields.confusionMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.cooccurrenceMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.labelCounts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.binaryMetrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.testSet",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByArea",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByClass",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{modelVersionId}/input_examples": {
      "get": {
        "summary": "ListModelVersionInputExamples",
        "operationId": "V2_ListModelVersionInputExamples",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelVersionInputExampleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "description": "id of model the example belongs to",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "description": "specific version the example belongs to",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Optional, defaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "Optional, defaults to 128 references per page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{modelVersionId}/input_examples/{exampleId}": {
      "get": {
        "summary": "GetModelVersionInputExample",
        "operationId": "V2_GetModelVersionInputExample",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionInputExampleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "description": "id of model the example belongs to",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelVersionId",
            "description": "specific version the example belongs to",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exampleId",
            "description": "Id of example to fetch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}": {
      "get": {
        "summary": "Get a specific model from an app.",
        "operationId": "V2_GetModelVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single model.",
        "operationId": "V2_DeleteModelVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/concepts": {
      "get": {
        "summary": "List models concepts.",
        "operationId": "V2_ListModelConcepts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiConceptResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "description": "Model id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "Model version Id. Optional, if not provided latest model version is used.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the concept:\n  - id\n  - name\n\nKeywords are used for partial prefix-matching (so searching for \"larif\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/exports": {
      "get": {
        "summary": "GetModelVersionExport",
        "operationId": "V2_GetModelVersionExport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionExportResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "put": {
        "summary": "Export a model",
        "operationId": "V2_PutModelVersionExports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionExportResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/inputs": {
      "get": {
        "summary": "Deprecated: Unmaintained and ideally replaced with usage of datasets\n  The server may refuse to accept requests to this endpoint.",
        "operationId": "V2_ListModelInputs3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/metrics": {
      "get": {
        "summary": "Get the evaluation metrics for a model version.\nDeprecated: Use GetEvaluation instead\n  The server may refuse to accept requests to this endpoint.",
        "operationId": "V2_GetModelVersionMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields.confusionMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.cooccurrenceMatrix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.labelCounts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.binaryMetrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.testSet",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByArea",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields.metricsByClass",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Deprecated, use PostEvaluations instead\nRun the evaluation metrics for a model version.",
        "operationId": "V2_PostModelVersionMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "testSearch": {
                    "$ref": "#/components/schemas/apiSearch"
                  },
                  "evalInfo": {
                    "$ref": "#/components/schemas/apiEvalInfo"
                  }
                },
                "description": "Evaluate this model version."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/output_info": {
      "get": {
        "summary": "Get a the output info for a given model_id or model_id/version_id\ncombo.",
        "operationId": "V2_GetModelOutputInfo3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "This is included so that we can re-use this request for multiple\nrpcs with and without the version_id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainedBefore",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/outputs": {
      "post": {
        "summary": "Get predicted outputs from the model.",
        "operationId": "V2_PostModelOutputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiOutputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_PostModelOutputsBody"
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/models/{modelId}/versions/{versionId}/outputs/generate": {
      "post": {
        "summary": "TODO(zeiler): will need to\nSingle request but streaming resopnses.",
        "operationId": "V2_GenerateModelOutputs",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/apiMultiOutputResponse"
                    },
                    "error": {
                      "$ref": "#/components/schemas/googlerpcStatus"
                    }
                  },
                  "title": "Stream result of apiMultiOutputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_PostModelOutputsBody"
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules": {
      "get": {
        "summary": "List all the modules in community, by user or by app.",
        "operationId": "V2_ListModules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModuleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the app",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "If neither sort option is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortById",
            "description": "Whether to order by the external id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "Filtering options:",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter modules by bookmark. If set, only return bookmarked modules. Otherwise none bookmarked modules only.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the module:\n  - id\n  - description\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Filter by the id and description of the module. This supports wildcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterByUserId",
            "description": "Filter by the application owner whose this module belongs to\nDeprecated: use search instead of name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple modules in one request.",
        "operationId": "V2_DeleteModules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_DeleteInputsBody"
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a modules to an app.",
        "operationId": "V2_PostModules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModuleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "modules": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModule"
                    },
                    "description": "This allows you to create one or more module by posting it to the API."
                  }
                },
                "title": "PostModulesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more modules.",
        "operationId": "V2_PatchModules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModuleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "modules": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModule"
                    }
                  },
                  "action": {
                    "type": "string",
                    "description": "The action to perform on the patched objects\nSupported values: 'overwrite' and 'remove'.\n\nNote that 'remove' can only be used to remove the module image by setting\n'image.url' in the request to the current value returned for that module."
                  }
                },
                "title": "PatchModulesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules/{moduleId}": {
      "get": {
        "summary": "Get a specific module from an app.",
        "operationId": "V2_GetModule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModuleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalFields",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules/{moduleId}/versions": {
      "get": {
        "summary": "List all the modules versions for a given module.",
        "operationId": "V2_ListModuleVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModuleVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a multiple module version.",
        "operationId": "V2_DeleteModuleVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request to delete several module versions by the list of ids."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Create a new module version to trigger training of the module.",
        "operationId": "V2_PostModuleVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModuleVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "moduleVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModuleVersion"
                    },
                    "description": "This allows you to create one or more module by posting it to the API."
                  }
                },
                "title": "PostModuleVersionsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Modify details of an existing module version.",
        "operationId": "V2_PatchModuleVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModuleVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "moduleVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiModuleVersion"
                    },
                    "title": "This allows you to modify the module version details.\n########## Supported fields ##########\n- description\n- id\n- metadata.fields\n- module_nav.module_sub_navs[].query_key\n- module_nav.module_sub_navs[].query_value\n- module_nav.module_sub_navs[].title\n- module_nav.title\n- notes\n- visibility.gettable"
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now only action 'merge' is supported"
                  }
                },
                "title": "PatchModuleVersionsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules/{moduleId}/versions/{moduleVersionId}": {
      "get": {
        "summary": "Get a specific module version for a module.",
        "operationId": "V2_GetModuleVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModuleVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/modules/{moduleId}/versions/{moduleVersionId}/usage_count": {
      "get": {
        "summary": "Get usage count for specific module version.",
        "operationId": "V2_GetModuleVersionUsageCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleModuleVersionUsageCountResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/myscopes": {
      "get": {
        "summary": "API Keys in the public API -- request is itself Key authorized, and will tell\nthe user the scopes/access of the key/credential they're providing, as computed by\nour authorizer:",
        "operationId": "V2_MyScopes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiScopeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/resource_counts": {
      "get": {
        "summary": "List the resource counts for the app.",
        "operationId": "V2_GetResourceCounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiGetResourceCountsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/searches": {
      "get": {
        "summary": "List all saved legacy searches.",
        "operationId": "V2_ListSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Execute a new search and optionally save it.",
        "description": "Deprecated: Use PostInputsSearches or PostAnnotationsSearches instead.\n The server may refuse to accept requests to this endpoint.",
        "operationId": "V2_PostSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user_id and app_id to query from.",
                    "title": "The user_id and app_id to query from."
                  },
                  "query": {
                    "$ref": "#/components/schemas/apiQuery"
                  },
                  "searches": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiSearch"
                    },
                    "title": "The searched to be executed or saved\nEventually the request level fields will be deprecated in favor of this object"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/apiPagination"
                  }
                },
                "title": "PostSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch saved legacy searches by ids.",
        "operationId": "V2_PatchSearches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user_id and app_id to query from.",
                    "title": "The user_id and app_id to query from."
                  },
                  "searches": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiSearch"
                    },
                    "title": "The searches to be patched"
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched Search objects\nFor now only action 'overwrite' is supported"
                  }
                },
                "title": "PatchSearchesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/searches/{id}": {
      "get": {
        "summary": "Get a saved legacy search.",
        "operationId": "V2_GetSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a saved search.",
        "operationId": "V2_DeleteSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Execute a previously saved legacy search.",
        "operationId": "V2_PostSearchesByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiSearchResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "ID for saves search to be executed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/apiPagination"
                  }
                },
                "title": "PostSearchesByIDRequest performs returns results of a saved search given its ID"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/stats/values": {
      "post": {
        "summary": "PostStatValues",
        "operationId": "V2_PostStatValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiStatValueResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user and app information for the request.",
                    "title": "The user and app information for the request."
                  },
                  "statValues": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiStatValue"
                    },
                    "description": "The stats to post, can post more than one at a time."
                  }
                },
                "title": "PostStatValuesRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/stats/values/aggregate": {
      "post": {
        "summary": "PostStatValuesAggregate",
        "operationId": "V2_PostStatValuesAggregate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiStatValueAggregateResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Ids present in the url of the request.",
                    "title": "Ids present in the url of the request."
                  },
                  "statValueAggregateQueries": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiStatValueAggregateQuery"
                    },
                    "description": "Query to retrieve aggregate values."
                  }
                },
                "title": "PostStatValuesAggregateRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/task/{taskId}/annotations/status": {
      "patch": {
        "summary": "Patch annotations status by worker id and task id.\nDeprecated: Use PutTaskAssignments to update task annotations.\n  For example, you can use PutTaskAssignments with action REVIEW_APPROVE\n  to approve task assignments and associated annotations in bulk.",
        "operationId": "V2_PatchAnnotationsStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPatchAnnotationsStatusResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "description": "Filter by task ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Filter by user IDs"
                  },
                  "statusCodes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/statusStatusCode"
                    },
                    "title": "Filter by Status codes"
                  },
                  "action": {
                    "type": "string",
                    "title": "'overwrite' is supported"
                  },
                  "statusCode": {
                    "$ref": "#/components/schemas/statusStatusCode"
                  }
                },
                "title": "PatchAnnotationsStatusRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks": {
      "get": {
        "summary": "List tasks from an app.",
        "operationId": "V2_ListTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTaskResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "workerUserIds",
            "description": "Get tasks that have ANY user from this list assigned as worker.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "reviewUserIds",
            "description": "Get tasks that have ANY user from this list assigned as reviewer.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "labelOrderIds",
            "description": "Get tasks that are associated to ANY label order from this list.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "includingLabelOrderTasks",
            "description": "Get label order tasks as well\nIt is automatically set to true if label_order_ids is set.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response.\nCurrently supported additional fields:\n- all\n- worker.users\n- review.users\n- metrics.input_source.inputs_count_estimated\n- metrics.work.inputs_count_estimated\n- metrics.work.inputs_percent_estimated\n- metrics.review.inputs_count_estimated\n- metrics.review.inputs_percent_estimated",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids",
            "description": "(optional) task IDs to filter on",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple tasks in one request.",
        "operationId": "V2_DeleteTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request to delete a list of tasks."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add tasks to an app.",
        "operationId": "V2_PostTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTaskResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "tasks": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiTask"
                    }
                  }
                },
                "description": "Request to create Tasks."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more tasks.",
        "operationId": "V2_PatchTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTaskResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "tasks": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiTask"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  }
                },
                "description": "Request to patch a list of tasks."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}": {
      "get": {
        "summary": "Get a specific task from an app.",
        "operationId": "V2_GetTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleTaskResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response.\nCurrently supported additional fields:\n- all\n- worker.users\n- review.users\n- metrics.input_source.inputs_count_estimated\n- metrics.work.inputs_count_estimated\n- metrics.work.inputs_percent_estimated\n- metrics.review.inputs_count_estimated\n- metrics.review.inputs_percent_estimated",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}/annotations/count": {
      "get": {
        "summary": "Task annotation count",
        "operationId": "V2_GetTaskAnnotationCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleTaskCountResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "description": "task_id for which count per user per status is needed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIds",
            "description": "Only return counts for these user IDs, effectively operating as an\nOR among them to filter down the results.\nIf model_version_ids or workflow_version_ids are also provided, these user_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modelVersionIds",
            "description": "Only return counts for these model version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or workflow_version_ids are also provided, these model_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "workflowVersionIds",
            "description": "Only return counts for these workflow version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or model_version_ids are also provided, these workflow_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}/assignments": {
      "get": {
        "summary": "Deprecated: Use PutTaskAssignments with action=LABEL_START.\n  This endpoint has initially been designed as a GET request,\n  but has been re-designed to serve a PUT logic.\n  In order to clearly highlight that this endpoint serves a PUT request,\n  this endpoint has been deprecated and replaced by PutTaskAssignments with action=LABEL_START.",
        "operationId": "V2_ListNextTaskAssignments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "put": {
        "summary": "PutTaskAssignments performs an action for the task assignments in given task.\nAll the actions are theoretically idempotent, but practically, in the current implementation,\nthe REVIEW_START action is not idempotent. See PutTaskAssignmentsRequestAction for more details.",
        "operationId": "V2_PutTaskAssignments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTaskAssignmentResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "inputId": {
                    "type": "string",
                    "title": "Deprecated: use action and action_config instead.\nSupported for backwards compatibility: setting this field is equivalent with\n* action = LABEL_SUBMIT\n* label_submit_config = [{\"task_assignments\": {{\"id\": \"<task-assignment-id-for-input-id>\"}}]"
                  },
                  "action": {
                    "$ref": "#/components/schemas/apiPutTaskAssignmentsRequestAction"
                  },
                  "labelSubmitConfig": {
                    "$ref": "#/components/schemas/apiLabelSubmitConfig"
                  },
                  "reviewApproveConfig": {
                    "$ref": "#/components/schemas/apiReviewApproveConfig"
                  },
                  "reviewRequestChangesConfig": {
                    "$ref": "#/components/schemas/apiReviewRequestChangesConfig"
                  },
                  "reviewRejectConfig": {
                    "$ref": "#/components/schemas/apiReviewRejectConfig"
                  }
                },
                "title": "PutTaskAssignmentsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}/inputs/count": {
      "get": {
        "summary": "Task Input count",
        "operationId": "V2_GetTaskInputCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleTaskCountResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "description": "task_id for which count per user per status is needed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIds",
            "description": "Only return counts for these user IDs, effectively operating as an\nOR among them to filter down the results.\nIf model_version_ids or workflow_version_ids are also provided, these user_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modelVersionIds",
            "description": "Only return counts for these model version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or workflow_version_ids are also provided, these model_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "workflowVersionIds",
            "description": "Only return counts for these workflow version IDs, effectively operating as an\nOR among them to filter down the results.\nIf user_ids or model_version_ids are also provided, these workflow_version_ids are OR'd with them as well because\nwe want the union of all worker (user, model or workflow) counts in the results.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/tasks/{taskId}/inputs/samples": {
      "get": {
        "summary": "Get a specific input from an app.",
        "operationId": "V2_GetInputSamples",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiInputAnnotationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIds",
            "description": "URL param. If zero ids provided, returns for all task labelers",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/trending_metrics/views/{viewType}": {
      "get": {
        "summary": "List the view metrics for a detail view",
        "operationId": "V2_ListTrendingMetricsViews",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiTrendingMetricsViewResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewType",
            "description": "For now view types 'apps', 'workflows', and 'models' are supported.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/trending_metrics/views/{viewType}/{objectId}": {
      "post": {
        "summary": "Increase the view metric for a detail view",
        "operationId": "V2_PostTrendingMetricsView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewType",
            "description": "For now view types 'apps', 'workflows', and 'models' are supported.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "description": "ID of the views object.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "The user_id and app_id information.",
                    "title": "The user_id and app_id information."
                  }
                },
                "title": "PostTrendingMetricsViewRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/uploads": {
      "get": {
        "operationId": "V2_ListUploads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "operationId": "V2_DeleteUploads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "title": "Stops or deletes multipart upload"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "operationId": "V2_PostUploads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "uploads": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiUpload"
                    }
                  }
                },
                "title": "Start a multipart upload"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/uploads/{uploadId}": {
      "get": {
        "operationId": "V2_GetUpload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploadId",
            "description": "Upload ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/uploads/{uploadId}/content_parts": {
      "put": {
        "summary": "Upload a part of a multipart upload.\nBehaviour on completion depends on the endpoint that was used to initiate the upload.",
        "operationId": "V2_PutUploadContentParts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleUploadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "contentParts": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiUploadContentPart"
                    }
                  }
                },
                "description": "Upload a part of a multipart upload.\nBehaviour on completion depends on the endpoint that was used to initiate the upload."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows": {
      "get": {
        "summary": "List all the workflows.",
        "operationId": "V2_ListWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortById",
            "description": "Whether to order by the name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "Whether to order by the modified_at time.\nIf none of the sort options is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the workflow",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "featuredOnly",
            "description": "Filtering options:\nIf true, we only return workflows that are handpicked by clarifai staff",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "If true, we only return workflows that are starred by the requesting user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter workflows by bookmark. If set, only return bookmarked workflows. Otherwise none bookmarked workflows only.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the workflow:\n  - id\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Query various text fields (id, description and notes) that can contain the words in the query string.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Filter by the id of the workflow. This supports wilcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchTerm",
            "description": "Full text and prefix matching on id, owner id, description and notes. Searchable fields may be added\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple workflows in one request.",
        "operationId": "V2_DeleteWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_DeleteCollectorsBody"
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a workflow to an app.\nNote(zeiler): the order of the workflows that are returned from this endpoint\nmay be different than the order in which the user provides them. This is because\nwe reorder by a sort that optimizes for performance of the graph and its dependencies.\nWhen using the workflow in any future call the order returned by this endpoint\nwill be used.",
        "operationId": "V2_PostWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "workflows": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiWorkflow"
                    }
                  }
                },
                "title": "PostWorkflowsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more workflows.",
        "operationId": "V2_PatchWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "workflows": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiWorkflow"
                    }
                  },
                  "action": {
                    "type": "string",
                    "description": "Note that 'remove' can be used to remove the workflow image by setting\n'image.url' in the request to the current value returned for that workflow.\nThis cannot be used in a request that is patching other fields as well.",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  }
                },
                "title": "PatchWorkflowsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/ids": {
      "patch": {
        "summary": "Patch one or more workflows ids.",
        "operationId": "V2_PatchWorkflowIds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiIdUpdateSource"
                    },
                    "title": "Array containing 1 entry"
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nOnly 'overwrite' is supported"
                  }
                },
                "title": "PatchWorkflowIdsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}": {
      "get": {
        "summary": "Get a specific workflow from an app.",
        "operationId": "V2_GetWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "description": "Workflow ID to retrieve\nIf no ID is specified we return default workflow of the application\nIf an ID is specified by default we first looks into Clarifai workflows for a Workflow ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "favorClarifaiWorkflows",
            "description": "Use this flag to look into clarifai published workflows first for a Workflow ID",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "excludeClarifaiWorkflows",
            "description": "if true will not expand search to clarifai workflows",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single workflow.",
        "operationId": "V2_DeleteWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/publish": {
      "post": {
        "operationId": "V2_PostWorkflowVersionsPublish",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "publications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiWorkflowVersionPublishRequest"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/results": {
      "post": {
        "summary": "Predict using a workflow.",
        "operationId": "V2_PostWorkflowResults2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostWorkflowResultsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "description": "Workflow ID to retrieve\nIf no ID is specified we return default workflow of the application\nIf an ID is specified by default we first looks into Clarifai workflows for a Workflow ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "versionId": {
                    "type": "string",
                    "title": "Workflow version ID to retrieve\nIf no ID is specified, latest workflow version is used"
                  },
                  "inputs": {
                    "type": "array",
                    "items": {}
                  },
                  "outputConfig": {
                    "$ref": "#/components/schemas/apiOutputConfig"
                  },
                  "favorClarifaiWorkflows": {
                    "type": "boolean",
                    "title": "Use this flag to look into clarifai published workflows first for a Workflow ID"
                  },
                  "workflowState": {
                    "$ref": "#/components/schemas/apiWorkflowState"
                  }
                },
                "title": "PostWorkflowResultsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/results/similarity": {
      "post": {
        "summary": "Compare embeddings distances using a workflow",
        "operationId": "V2_PostWorkflowResultsSimilarity2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostWorkflowResultsSimilarityResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "versionId": {
                    "type": "string",
                    "title": "Workflow version ID to retrieve\nIf no ID is specified, latest workflow version is used"
                  },
                  "modelVersionId": {
                    "type": "string",
                    "title": "The specific model version whose outputs we are comparing"
                  },
                  "probeInputs": {
                    "type": "array",
                    "title": "Each probe is compared against every pool input",
                    "items": {}
                  },
                  "poolInputs": {
                    "type": "array",
                    "title": "Each pool input is compared against ever probe input",
                    "items": {}
                  },
                  "favorClarifaiWorkflows": {
                    "type": "boolean",
                    "title": "Use this flag to look into clarifai published workflows first for a Workflow ID"
                  }
                },
                "title": "PostWorkflowResultsSimilarityRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/unpublish": {
      "post": {
        "operationId": "V2_PostWorkflowVersionsUnPublish",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "publications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiWorkflowVersionUnPublishRequest"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/versions": {
      "get": {
        "summary": "List workflow versions.",
        "operationId": "V2_ListWorkflowVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "description": "List versions for the workflow identified by this id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete workflow versions.",
        "operationId": "V2_DeleteWorkflowVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "description": "The id of the workflow that has the requested versions to delete.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "workflowVersionIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Delete the versions identified by these ids"
                  }
                },
                "title": "DeleteWorkflowVersionsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch workflow versions.",
        "operationId": "V2_PatchWorkflowVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "description": "The id of the workflow that has the requested versions to patch.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "workflowVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiWorkflowVersion"
                    },
                    "description": "Patch these versions."
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  }
                },
                "title": "PatchWorkflowVersionsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/versions/{versionId}/results": {
      "post": {
        "summary": "Predict using a workflow.",
        "operationId": "V2_PostWorkflowResults",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostWorkflowResultsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "description": "Workflow ID to retrieve\nIf no ID is specified we return default workflow of the application\nIf an ID is specified by default we first looks into Clarifai workflows for a Workflow ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "Workflow version ID to retrieve\nIf no ID is specified, latest workflow version is used",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "inputs": {
                    "type": "array",
                    "items": {}
                  },
                  "outputConfig": {
                    "$ref": "#/components/schemas/apiOutputConfig"
                  },
                  "favorClarifaiWorkflows": {
                    "type": "boolean",
                    "title": "Use this flag to look into clarifai published workflows first for a Workflow ID"
                  },
                  "workflowState": {
                    "$ref": "#/components/schemas/apiWorkflowState"
                  }
                },
                "title": "PostWorkflowResultsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/versions/{versionId}/results/similarity": {
      "post": {
        "summary": "Compare embeddings distances using a workflow",
        "operationId": "V2_PostWorkflowResultsSimilarity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostWorkflowResultsSimilarityResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "description": "Workflow version ID to retrieve\nIf no ID is specified, latest workflow version is used",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "modelVersionId": {
                    "type": "string",
                    "title": "The specific model version whose outputs we are comparing"
                  },
                  "probeInputs": {
                    "type": "array",
                    "title": "Each probe is compared against every pool input",
                    "items": {}
                  },
                  "poolInputs": {
                    "type": "array",
                    "title": "Each pool input is compared against ever probe input",
                    "items": {}
                  },
                  "favorClarifaiWorkflows": {
                    "type": "boolean",
                    "title": "Use this flag to look into clarifai published workflows first for a Workflow ID"
                  }
                },
                "title": "PostWorkflowResultsSimilarityRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/apps/{userAppId.appId}/workflows/{workflowId}/versions/{workflowVersionId}": {
      "get": {
        "summary": "Get single workflow version.",
        "operationId": "V2_GetWorkflowVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleWorkflowVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "description": "The id of the workflow that has the requested version.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowVersionId",
            "description": "Get the identified by this id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/collaborations": {
      "get": {
        "summary": "Collaboration includes the app user are invitied to work on",
        "operationId": "V2_ListCollaborations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiCollaborationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "templateOnly",
            "description": "Filtering options:\nIf true, we only return collaborations on apps that are marked as a template by the app owner.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/compute_clusters": {
      "get": {
        "operationId": "V2_ListComputeClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiComputeClusterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple compute_clusters in one request.",
        "operationId": "V2_DeleteComputeClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_DeleteComputeClustersBody"
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "operationId": "V2_PostComputeClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiComputeClusterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Only the user_id is used from this.",
                    "title": "Only the user_id is used from this."
                  },
                  "computeClusters": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiComputeCluster"
                    },
                    "description": "This allows you to create one or more compute_clusters by posting it to the API."
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/compute_clusters/{computeClusterId}": {
      "get": {
        "summary": "ComputeCluster CRUD",
        "operationId": "V2_GetComputeCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleComputeClusterResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "computeClusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/compute_clusters/{computeClusterId}/nodepools": {
      "get": {
        "operationId": "V2_ListNodepools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiNodepoolResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "computeClusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple nodepools in one request.",
        "operationId": "V2_DeleteNodepools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "computeClusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/V2_DeleteComputeClustersBody"
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "operationId": "V2_PostNodepools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiNodepoolResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "computeClusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Only the user_id is used from this.",
                    "title": "Only the user_id is used from this."
                  },
                  "nodepools": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiNodepool"
                    },
                    "description": "This allows you to create one or more nodepools by posting it to the API."
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "operationId": "V2_PatchNodepools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiNodepoolResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "computeClusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "nodepools": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiNodepool"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  }
                },
                "title": "PatchNodepoolsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/compute_clusters/{computeClusterId}/nodepools/{nodepoolId}": {
      "get": {
        "summary": "Nodepools CRUD",
        "operationId": "V2_GetNodepool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleNodepoolResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "computeClusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/datasets": {
      "get": {
        "summary": "List all the datasets.",
        "operationId": "V2_ListDatasets2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiDatasetResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the app",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "If neither sort option is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortById",
            "description": "Whether to order by the external id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "Filtering options:",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter datasets by bookmark. If set, only return bookmarked datasets. Otherwise none bookmarked datasets only.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the dataset:\n  - id\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Fuzzy filter on dataset ID\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/duplications": {
      "get": {
        "summary": "ListAppDuplications lists all app duplication jobs created by the user.",
        "operationId": "V2_ListAppDuplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiAppDuplicationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/duplications/{appDuplicationId}": {
      "get": {
        "summary": "GetAppDuplication returns an app duplication job created by the user.",
        "operationId": "V2_GetAppDuplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleAppDuplicationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appDuplicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/evaluations": {
      "get": {
        "operationId": "V2_ListEvaluations2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiEvalMetricsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sortAscending",
            "description": "If true, sort in ascending order, otherwise sort in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByAppId",
            "description": "Whether to order by application id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByRocAuc",
            "description": "Whether to order by eval metric summary.macro_avg_roc_auc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByF1",
            "description": "Whether to order by eval metric summary.f1",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by when the metric was created",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByMeanAvgPrecision",
            "description": "Whether to order by eval metric summary.mean_avg_precision_iou_50",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByPrecision",
            "description": "Whether to order by eval metric summary.macro_avg_precision",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByRecall",
            "description": "Whether to order by eval metric summary.macro_avg_recall",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModelId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByEvalDatasetId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByTrainDatasetId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "modelTypeId",
            "description": "Filter on model type id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evalDatasetIds",
            "description": "Filter on dataset ID of the dataset version specified in the metric version",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "trainDatasetIds",
            "description": "Filter on dataset ID of the dataset version specified by the model version",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "conceptIds",
            "description": "Filter on concept IDs specified in the modele version's output_info",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "showFailedMetrics",
            "description": "Whether to show failed metrics, defaults to false",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/keys": {
      "get": {
        "summary": "List all the keys.",
        "operationId": "V2_ListKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiKeyResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "notExpired",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "endpoints",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a key to an app.",
        "operationId": "V2_PostKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiKeyResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "keys": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiKey"
                    }
                  }
                },
                "title": "PostKeysRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch one or more keys.",
        "operationId": "V2_PatchKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiKeyResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "keys": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiKey"
                    }
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now only action 'overwrite' is supported"
                  }
                },
                "title": "PatchKeysRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/keys/{keyId}": {
      "get": {
        "summary": "Get a specific key from an app.",
        "operationId": "V2_GetKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleKeyResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Search over the keys to find one or more you're looking for.\nThis leverage the \"body\" parameter because we also have page and\nper_page as url query param variables in this request.",
        "operationId": "V2_DeleteKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/models": {
      "get": {
        "summary": "List all the models.",
        "operationId": "V2_ListModels2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModelResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByName",
            "description": "Whether to order by the name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByNumInputs",
            "description": "Whether to order by the number of training inputs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "Whether to order by the modified_at time of the latest model version.\nIf none of the sort options is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by count of stars",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "modelTypeId",
            "description": "Filtering options:\nFilter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's\nsupported.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainedOnly",
            "description": "If true, we only return models that have the status MODEL_TRAINED, which includes non-trainable model types.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inputFields",
            "description": "The list of input fields to the model.\nFor example, you can specify 'image', which will return models that make inferences on images like visual-classifier models.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "outputFields",
            "description": "The list of output fields to the model.\nFor example, you can specify 'regions[...].data.concepts', which will return visual-detector models.",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "license",
            "description": "Filter by the license of the model version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "featuredOnly",
            "description": "If true, we only return models that are handpicked by clarifai staff",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "If true, we only return models that are starred by the requesting user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "toolkits",
            "description": "List of toolkit tags to filter by",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "useCases",
            "description": "List of use_case tags to filter by",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "languages",
            "description": "List of language tags to filter by",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dontFetchFromMain",
            "description": "Old API behavior resulted in returning clarifai main models when calling ListModels while scoped to an app. While we transition\naway from that, we can use this flag to not always fetch clarifai main models, unless that is the app we are explicitly listing for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter models by bookmark. If set, only return bookmarked models. Otherwise none bookmarked models only.\nNote: you can not filter `trained_only` and bookmark at the same time.\nWhen filter by bookmark, we will return trained and untrained models.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the model:\n  - id\n  - name\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Query name, description and id fields, that can contain the words in the query string. Does NOT support wildcards - full words only. Supports operators \"OR\" and \"-\" as NOT.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Filter by the description and id of the model. This supports wildcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterByUserId",
            "description": "Extends the name filter to include the user_id of the application owner that the model belongs to.\nDeprecated: use search instead of name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/modules": {
      "get": {
        "summary": "List all the modules in community, by user or by app.",
        "operationId": "V2_ListModules2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiModuleResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the app",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "If neither sort option is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortById",
            "description": "Whether to order by the external id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "Filtering options:",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter modules by bookmark. If set, only return bookmarked modules. Otherwise none bookmarked modules only.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the module:\n  - id\n  - description\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Filter by the id and description of the module. This supports wildcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterByUserId",
            "description": "Filter by the application owner whose this module belongs to\nDeprecated: use search instead of name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/myscopes": {
      "get": {
        "operationId": "V2_MyScopesUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiScopeUserResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/nodepools/{nodepoolId}/runners": {
      "get": {
        "summary": "List all the runners for the user.",
        "operationId": "V2_ListRunners",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiRunnerResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete multiple runners in one request.",
        "operationId": "V2_DeleteRunners",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "description": "Request to delete several things by the list of ids."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "post": {
        "summary": "Add a runners to a user.",
        "operationId": "V2_PostRunners",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiRunnerResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "runners": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiRunner"
                    },
                    "description": "This allows you to create one or more runner by posting it to the API."
                  }
                },
                "title": "PostRunnersRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/nodepools/{nodepoolId}/runners/{runnerId}": {
      "get": {
        "summary": "Get a specific runner.\nTODO(zeiler): runner_id is a UUID so can list globally as well.",
        "operationId": "V2_GetRunner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleRunnerResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/nodepools/{nodepoolId}/runners/{runnerId}/items": {
      "get": {
        "summary": "List items for the remote runner to work on.\nsince the runner_id is a UUID we can access it directly too.",
        "operationId": "V2_ListRunnerItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiRunnerItemResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/nodepools/{nodepoolId}/runners/{runnerId}/items/{runnerItemId}/outputs": {
      "post": {
        "summary": "Post back outputs from remote runners\nsince the runner_id is a UUID we can access it directly too.",
        "operationId": "V2_PostRunnerItemOutputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiRunnerItemOutputResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodepoolId",
            "description": "The particular nodepool that runner belongs to",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runnerId",
            "description": "The particular runner that processed the work.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "runnerItemId",
            "description": "The particular item of work processed.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "runnerItemOutputs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiRunnerItemOutput"
                    },
                    "description": "This allows you to create one or more runner by posting it to the API."
                  },
                  "status": {
                    "$ref": "#/components/schemas/apistatusStatus"
                  },
                  "runnerReplicaId": {
                    "type": "string",
                    "description": "A unique ID to represent the runner. This may be tied to an underlying compute instance\ninformation or just an UUID."
                  }
                },
                "description": "PostRunnerItemOutputsRequest\nThis is the message that runners send to the API to communicate.\nAt the end of the request it will have the RunnerItemOutput filled in\nwith results of the workload the runner is processing. Other messages\nfrom the runner use this same proto to communicate over to the API\nand do handshakes."
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/scopes": {
      "get": {
        "summary": "List all auth scopes available to me as a user.",
        "operationId": "V2_ListScopes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiScopeDepsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyType",
            "description": "If \"personal_access_token\" include scopes and endpoints available to personal access tokens.\nIf \"app_specific_key\" include scopes and endpoints available to app-specific keys. (default)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/validate_password": {
      "post": {
        "summary": "Validate new password in real-time for a user",
        "operationId": "V2_PostValidatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSinglePasswordValidationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      }
                    },
                    "description": "Common message to identify the app in a url endpoint."
                  },
                  "password": {
                    "$ref": "#/components/schemas/apiPassword"
                  }
                },
                "title": "PostValidatePasswordRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/users/{userAppId.userId}/workflows": {
      "get": {
        "summary": "List all the workflows.",
        "operationId": "V2_ListWorkflows2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortById",
            "description": "Whether to order by the name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "Whether to order by the modified_at time.\nIf none of the sort options is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the workflow",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "featuredOnly",
            "description": "Filtering options:\nIf true, we only return workflows that are handpicked by clarifai staff",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "If true, we only return workflows that are starred by the requesting user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter workflows by bookmark. If set, only return bookmarked workflows. Otherwise none bookmarked workflows only.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the workflow:\n  - id\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Query various text fields (id, description and notes) that can contain the words in the query string.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Filter by the id of the workflow. This supports wilcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchTerm",
            "description": "Full text and prefix matching on id, owner id, description and notes. Searchable fields may be added\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/validate_password": {
      "post": {
        "summary": "Validate new password in real-time for a user",
        "operationId": "V2_PostValidatePassword2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSinglePasswordValidationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostValidatePasswordRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/validate_password' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"password\": {\n    \"plaintext\": \"string\"\n  }\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"password\": {\n    \"plaintext\": \"string\"\n  }\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/validate_password\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"password\": {\n    \"plaintext\": \"string\"\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/validate_password',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/workflows": {
      "get": {
        "summary": "List all the workflows.",
        "operationId": "V2_ListWorkflows3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortAscending",
            "description": "Sorting options:\nWhether to sort in ascending order. If false, will order in descending order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortById",
            "description": "Whether to order by the name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByModifiedAt",
            "description": "Whether to order by the modified_at time.\nIf none of the sort options is set to true, will sort by modified_at.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByCreatedAt",
            "description": "Whether to order by the created_at time.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortByStarCount",
            "description": "Whether to order by the number of users stared the workflow",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "featuredOnly",
            "description": "Filtering options:\nIf true, we only return workflows that are handpicked by clarifai staff",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "starredOnly",
            "description": "If true, we only return workflows that are starred by the requesting user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bookmark",
            "description": "Filter workflows by bookmark. If set, only return bookmarked workflows. Otherwise none bookmarked workflows only.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "description": "Searching options:\nSpecify a search parameter in order to perform keyword search on the\nfollowing fields of the workflow:\n  - id\n  - description\n  - notes\n  - user_id (unless user_app_id.user_id is already set)\n\nKeywords are both normalized for search (so searching for \"satisfy\" matches \"satisfied\")\nand used for partial prefix-matching (so searching for \"clari\" matches \"clarifai\").\n\nNOTE: Both the list of fields searched and the exact keyword matching\nrules are subject to change and not guaranteed to be backwards-compatible.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "description": "Query various text fields (id, description and notes) that can contain the words in the query string.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Filter by the id of the workflow. This supports wilcard queries like \"gen*\" to match \"general\" as an example.\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchTerm",
            "description": "Full text and prefix matching on id, owner id, description and notes. Searchable fields may be added\nDeprecated: use search instead.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/workflows?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortById=&sortByModifiedAt=&sortByCreatedAt=&sortByStarCount=&featuredOnly=&starredOnly=&bookmark=&search=&query=&id=&searchTerm=' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/workflows?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortById=&sortByModifiedAt=&sortByCreatedAt=&sortByStarCount=&featuredOnly=&starredOnly=&bookmark=&search=&query=&id=&searchTerm=\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/workflows?userAppId.userId=&userAppId.appId=&page=&perPage=&additionalFields=&sortAscending=&sortById=&sortByModifiedAt=&sortByCreatedAt=&sortByStarCount=&featuredOnly=&starredOnly=&bookmark=&search=&query=&id=&searchTerm=',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "delete": {
        "summary": "Delete multiple workflows in one request.",
        "operationId": "V2_DeleteWorkflows2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiDeleteWorkflowsRequest"
              }
            }
          },
          "description": "Request to delete several things by the list of ids.",
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request DELETE 'https://api.clarifai.com/v2/workflows' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ],\n  \"deleteAll\": true\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ],\n  \"deleteAll\": true\n});\n\nconst requestOptions = {\n  method: \"DELETE\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/workflows\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"ids\": [\n    \"string\"\n  ],\n  \"deleteAll\": true\n});\n\nlet config = {\n  method: 'delete',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/workflows',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "post": {
        "summary": "Add a workflow to an app.\nNote(zeiler): the order of the workflows that are returned from this endpoint\nmay be different than the order in which the user provides them. This is because\nwe reorder by a sort that optimizes for performance of the graph and its dependencies.\nWhen using the workflow in any future call the order returned by this endpoint\nwill be used.",
        "operationId": "V2_PostWorkflows2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPostWorkflowsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location 'https://api.clarifai.com/v2/workflows' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"workflows\": [\n    {\n      \"id\": \"string\",\n      \"appId\": \"string\",\n      \"createdAt\": \"string\",\n      \"nodes\": [\n        {\n          \"id\": \"string\",\n          \"nodeInputs\": [\n            {\n              \"nodeId\": \"string\"\n            }\n          ],\n          \"suppressOutput\": true,\n          \"outputInfoOverride\": {\n            \"outputConfig\": {\n              \"conceptsMutuallyExclusive\": true,\n              \"existingModelId\": \"string\",\n              \"language\": \"string\",\n              \"hyperParameters\": \"string\",\n              \"maxConcepts\": 0,\n              \"minValue\": null,\n              \"selectConcepts\": [\n                {\n                  \"id\": \"string\",\n                  \"name\": \"string\",\n                  \"value\": null,\n                  \"createdAt\": \"string\",\n                  \"language\": \"string\",\n                  \"appId\": \"string\",\n                  \"definition\": \"string\",\n                  \"vocabId\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"userId\": \"string\",\n                  \"keypointInfo\": {\n                    \"keypointNames\": [\n                      \"string\"\n                    ],\n                    \"skeleton\": [\n                      {\n                        \"k1\": 0,\n                        \"k2\": 0\n                      }\n                    ]\n                  },\n                  \"extraInfo\": {\n                    \"isRankable\": true\n                  }\n                }\n              ],\n              \"trainingTimeout\": 0,\n              \"sampleMs\": 0,\n              \"hyperParams\": {},\n              \"embedModelVersionId\": \"string\",\n              \"failOnMissingPositiveExamples\": true,\n              \"modelMetadata\": {}\n            },\n            \"message\": \"string\",\n            \"fieldsMap\": {},\n            \"params\": {},\n            \"paramsSpecs\": [\n              null\n            ]\n          }\n        }\n      ],\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"workflowId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"license\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"description\": \"string\",\n      \"notes\": \"string\",\n      \"useCases\": [\n        \"string\"\n      ],\n      \"checkConsents\": [\n        \"string\"\n      ],\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ]\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"workflows\": [\n    {\n      \"id\": \"string\",\n      \"appId\": \"string\",\n      \"createdAt\": \"string\",\n      \"nodes\": [\n        {\n          \"id\": \"string\",\n          \"nodeInputs\": [\n            {\n              \"nodeId\": \"string\"\n            }\n          ],\n          \"suppressOutput\": true,\n          \"outputInfoOverride\": {\n            \"outputConfig\": {\n              \"conceptsMutuallyExclusive\": true,\n              \"existingModelId\": \"string\",\n              \"language\": \"string\",\n              \"hyperParameters\": \"string\",\n              \"maxConcepts\": 0,\n              \"minValue\": null,\n              \"selectConcepts\": [\n                {\n                  \"id\": \"string\",\n                  \"name\": \"string\",\n                  \"value\": null,\n                  \"createdAt\": \"string\",\n                  \"language\": \"string\",\n                  \"appId\": \"string\",\n                  \"definition\": \"string\",\n                  \"vocabId\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"userId\": \"string\",\n                  \"keypointInfo\": {\n                    \"keypointNames\": [\n                      \"string\"\n                    ],\n                    \"skeleton\": [\n                      {\n                        \"k1\": 0,\n                        \"k2\": 0\n                      }\n                    ]\n                  },\n                  \"extraInfo\": {\n                    \"isRankable\": true\n                  }\n                }\n              ],\n              \"trainingTimeout\": 0,\n              \"sampleMs\": 0,\n              \"hyperParams\": {},\n              \"embedModelVersionId\": \"string\",\n              \"failOnMissingPositiveExamples\": true,\n              \"modelMetadata\": {}\n            },\n            \"message\": \"string\",\n            \"fieldsMap\": {},\n            \"params\": {},\n            \"paramsSpecs\": [\n              null\n            ]\n          }\n        }\n      ],\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"workflowId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"license\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"description\": \"string\",\n      \"notes\": \"string\",\n      \"useCases\": [\n        \"string\"\n      ],\n      \"checkConsents\": [\n        \"string\"\n      ],\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ]\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/workflows\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"workflows\": [\n    {\n      \"id\": \"string\",\n      \"appId\": \"string\",\n      \"createdAt\": \"string\",\n      \"nodes\": [\n        {\n          \"id\": \"string\",\n          \"nodeInputs\": [\n            {\n              \"nodeId\": \"string\"\n            }\n          ],\n          \"suppressOutput\": true,\n          \"outputInfoOverride\": {\n            \"outputConfig\": {\n              \"conceptsMutuallyExclusive\": true,\n              \"existingModelId\": \"string\",\n              \"language\": \"string\",\n              \"hyperParameters\": \"string\",\n              \"maxConcepts\": 0,\n              \"minValue\": null,\n              \"selectConcepts\": [\n                {\n                  \"id\": \"string\",\n                  \"name\": \"string\",\n                  \"value\": null,\n                  \"createdAt\": \"string\",\n                  \"language\": \"string\",\n                  \"appId\": \"string\",\n                  \"definition\": \"string\",\n                  \"vocabId\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"userId\": \"string\",\n                  \"keypointInfo\": {\n                    \"keypointNames\": [\n                      \"string\"\n                    ],\n                    \"skeleton\": [\n                      {\n                        \"k1\": 0,\n                        \"k2\": 0\n                      }\n                    ]\n                  },\n                  \"extraInfo\": {\n                    \"isRankable\": true\n                  }\n                }\n              ],\n              \"trainingTimeout\": 0,\n              \"sampleMs\": 0,\n              \"hyperParams\": {},\n              \"embedModelVersionId\": \"string\",\n              \"failOnMissingPositiveExamples\": true,\n              \"modelMetadata\": {}\n            },\n            \"message\": \"string\",\n            \"fieldsMap\": {},\n            \"params\": {},\n            \"paramsSpecs\": [\n              null\n            ]\n          }\n        }\n      ],\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"workflowId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"license\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"description\": \"string\",\n      \"notes\": \"string\",\n      \"useCases\": [\n        \"string\"\n      ],\n      \"checkConsents\": [\n        \"string\"\n      ],\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ]\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/workflows',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      },
      "patch": {
        "summary": "Patch one or more workflows.",
        "operationId": "V2_PatchWorkflows2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiPatchWorkflowsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "CURL",
            "source": "curl --location --request PATCH 'https://api.clarifai.com/v2/workflows' \\\n--header 'Authorization: Bearer YOUR_PERSONAL_ACCESS_TOKEN' \\\n--header 'Accept: application/json' \\\n--header 'Content-Type: application/json' \\\n--data '{\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"workflows\": [\n    {\n      \"id\": \"string\",\n      \"appId\": \"string\",\n      \"createdAt\": \"string\",\n      \"nodes\": [\n        {\n          \"id\": \"string\",\n          \"nodeInputs\": [\n            {\n              \"nodeId\": \"string\"\n            }\n          ],\n          \"suppressOutput\": true,\n          \"outputInfoOverride\": {\n            \"outputConfig\": {\n              \"conceptsMutuallyExclusive\": true,\n              \"existingModelId\": \"string\",\n              \"language\": \"string\",\n              \"hyperParameters\": \"string\",\n              \"maxConcepts\": 0,\n              \"minValue\": null,\n              \"selectConcepts\": [\n                {\n                  \"id\": \"string\",\n                  \"name\": \"string\",\n                  \"value\": null,\n                  \"createdAt\": \"string\",\n                  \"language\": \"string\",\n                  \"appId\": \"string\",\n                  \"definition\": \"string\",\n                  \"vocabId\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"userId\": \"string\",\n                  \"keypointInfo\": {\n                    \"keypointNames\": [\n                      \"string\"\n                    ],\n                    \"skeleton\": [\n                      {\n                        \"k1\": 0,\n                        \"k2\": 0\n                      }\n                    ]\n                  },\n                  \"extraInfo\": {\n                    \"isRankable\": true\n                  }\n                }\n              ],\n              \"trainingTimeout\": 0,\n              \"sampleMs\": 0,\n              \"hyperParams\": {},\n              \"embedModelVersionId\": \"string\",\n              \"failOnMissingPositiveExamples\": true,\n              \"modelMetadata\": {}\n            },\n            \"message\": \"string\",\n            \"fieldsMap\": {},\n            \"params\": {},\n            \"paramsSpecs\": [\n              null\n            ]\n          }\n        }\n      ],\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"workflowId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"license\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"description\": \"string\",\n      \"notes\": \"string\",\n      \"useCases\": [\n        \"string\"\n      ],\n      \"checkConsents\": [\n        \"string\"\n      ],\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ],\n  \"action\": \"string\"\n}'"
          },
          {
            "lang": "JavaScript",
            "label": "JAVASCRIPT",
            "source": "const myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", \"Bearer YOUR_PERSONAL_ACCESS_TOKEN\");\nmyHeaders.append(\"Accept\", \"application/json\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst raw = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"workflows\": [\n    {\n      \"id\": \"string\",\n      \"appId\": \"string\",\n      \"createdAt\": \"string\",\n      \"nodes\": [\n        {\n          \"id\": \"string\",\n          \"nodeInputs\": [\n            {\n              \"nodeId\": \"string\"\n            }\n          ],\n          \"suppressOutput\": true,\n          \"outputInfoOverride\": {\n            \"outputConfig\": {\n              \"conceptsMutuallyExclusive\": true,\n              \"existingModelId\": \"string\",\n              \"language\": \"string\",\n              \"hyperParameters\": \"string\",\n              \"maxConcepts\": 0,\n              \"minValue\": null,\n              \"selectConcepts\": [\n                {\n                  \"id\": \"string\",\n                  \"name\": \"string\",\n                  \"value\": null,\n                  \"createdAt\": \"string\",\n                  \"language\": \"string\",\n                  \"appId\": \"string\",\n                  \"definition\": \"string\",\n                  \"vocabId\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"userId\": \"string\",\n                  \"keypointInfo\": {\n                    \"keypointNames\": [\n                      \"string\"\n                    ],\n                    \"skeleton\": [\n                      {\n                        \"k1\": 0,\n                        \"k2\": 0\n                      }\n                    ]\n                  },\n                  \"extraInfo\": {\n                    \"isRankable\": true\n                  }\n                }\n              ],\n              \"trainingTimeout\": 0,\n              \"sampleMs\": 0,\n              \"hyperParams\": {},\n              \"embedModelVersionId\": \"string\",\n              \"failOnMissingPositiveExamples\": true,\n              \"modelMetadata\": {}\n            },\n            \"message\": \"string\",\n            \"fieldsMap\": {},\n            \"params\": {},\n            \"paramsSpecs\": [\n              null\n            ]\n          }\n        }\n      ],\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"workflowId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"license\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"description\": \"string\",\n      \"notes\": \"string\",\n      \"useCases\": [\n        \"string\"\n      ],\n      \"checkConsents\": [\n        \"string\"\n      ],\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ],\n  \"action\": \"string\"\n});\n\nconst requestOptions = {\n  method: \"PATCH\",\n  headers: myHeaders,\n  body: raw,\n  redirect: \"follow\"\n};\n\nfetch(\"https://api.clarifai.com/v2/workflows\", requestOptions)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.error(error));"
          },
          {
            "lang": "NodeJs",
            "label": "NODEJS",
            "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"userAppId\": {\n    \"userId\": \"string\",\n    \"appId\": \"string\"\n  },\n  \"workflows\": [\n    {\n      \"id\": \"string\",\n      \"appId\": \"string\",\n      \"createdAt\": \"string\",\n      \"nodes\": [\n        {\n          \"id\": \"string\",\n          \"nodeInputs\": [\n            {\n              \"nodeId\": \"string\"\n            }\n          ],\n          \"suppressOutput\": true,\n          \"outputInfoOverride\": {\n            \"outputConfig\": {\n              \"conceptsMutuallyExclusive\": true,\n              \"existingModelId\": \"string\",\n              \"language\": \"string\",\n              \"hyperParameters\": \"string\",\n              \"maxConcepts\": 0,\n              \"minValue\": null,\n              \"selectConcepts\": [\n                {\n                  \"id\": \"string\",\n                  \"name\": \"string\",\n                  \"value\": null,\n                  \"createdAt\": \"string\",\n                  \"language\": \"string\",\n                  \"appId\": \"string\",\n                  \"definition\": \"string\",\n                  \"vocabId\": \"string\",\n                  \"visibility\": {\n                    \"gettable\": \"string\"\n                  },\n                  \"userId\": \"string\",\n                  \"keypointInfo\": {\n                    \"keypointNames\": [\n                      \"string\"\n                    ],\n                    \"skeleton\": [\n                      {\n                        \"k1\": 0,\n                        \"k2\": 0\n                      }\n                    ]\n                  },\n                  \"extraInfo\": {\n                    \"isRankable\": true\n                  }\n                }\n              ],\n              \"trainingTimeout\": 0,\n              \"sampleMs\": 0,\n              \"hyperParams\": {},\n              \"embedModelVersionId\": \"string\",\n              \"failOnMissingPositiveExamples\": true,\n              \"modelMetadata\": {}\n            },\n            \"message\": \"string\",\n            \"fieldsMap\": {},\n            \"params\": {},\n            \"paramsSpecs\": [\n              null\n            ]\n          }\n        }\n      ],\n      \"metadata\": {},\n      \"visibility\": {\n        \"gettable\": \"string\"\n      },\n      \"userId\": \"string\",\n      \"modifiedAt\": \"string\",\n      \"version\": {\n        \"id\": \"string\",\n        \"workflowId\": \"string\",\n        \"createdAt\": \"string\",\n        \"modifiedAt\": \"string\",\n        \"visibility\": {\n          \"gettable\": \"string\"\n        },\n        \"nodes\": [\n          {\n            \"id\": \"string\",\n            \"nodeInputs\": [\n              {\n                \"nodeId\": \"string\"\n              }\n            ],\n            \"suppressOutput\": true,\n            \"outputInfoOverride\": {\n              \"outputConfig\": {\n                \"conceptsMutuallyExclusive\": true,\n                \"existingModelId\": \"string\",\n                \"language\": \"string\",\n                \"hyperParameters\": \"string\",\n                \"maxConcepts\": 0,\n                \"minValue\": null,\n                \"selectConcepts\": [\n                  {\n                    \"id\": \"string\",\n                    \"name\": \"string\",\n                    \"value\": null,\n                    \"createdAt\": \"string\",\n                    \"language\": \"string\",\n                    \"appId\": \"string\",\n                    \"definition\": \"string\",\n                    \"vocabId\": \"string\",\n                    \"visibility\": {\n                      \"gettable\": \"string\"\n                    },\n                    \"userId\": \"string\",\n                    \"keypointInfo\": {\n                      \"keypointNames\": [\n                        \"string\"\n                      ],\n                      \"skeleton\": [\n                        {\n                          \"k1\": 0,\n                          \"k2\": 0\n                        }\n                      ]\n                    },\n                    \"extraInfo\": {\n                      \"isRankable\": true\n                    }\n                  }\n                ],\n                \"trainingTimeout\": 0,\n                \"sampleMs\": 0,\n                \"hyperParams\": {},\n                \"embedModelVersionId\": \"string\",\n                \"failOnMissingPositiveExamples\": true,\n                \"modelMetadata\": {}\n              },\n              \"message\": \"string\",\n              \"fieldsMap\": {},\n              \"params\": {},\n              \"paramsSpecs\": [\n                null\n              ]\n            }\n          }\n        ],\n        \"metadata\": {},\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"description\": \"string\",\n        \"license\": \"string\"\n      },\n      \"isStarred\": true,\n      \"starCount\": 0,\n      \"description\": \"string\",\n      \"notes\": \"string\",\n      \"useCases\": [\n        \"string\"\n      ],\n      \"checkConsents\": [\n        \"string\"\n      ],\n      \"bookmarkOrigin\": {\n        \"id\": \"string\",\n        \"appId\": \"string\",\n        \"userId\": \"string\",\n        \"resourceType\": \"string\"\n      },\n      \"image\": {\n        \"url\": \"string\",\n        \"base64\": \"string\",\n        \"allowDuplicateUrl\": true,\n        \"hosted\": {\n          \"prefix\": \"string\",\n          \"suffix\": \"string\",\n          \"sizes\": [\n            \"string\"\n          ],\n          \"crossorigin\": \"string\"\n        },\n        \"imageInfo\": {\n          \"width\": 0,\n          \"height\": 0,\n          \"format\": \"string\",\n          \"colorMode\": \"string\"\n        }\n      }\n    }\n  ],\n  \"action\": \"string\"\n});\n\nlet config = {\n  method: 'patch',\n  maxBodyLength: Infinity,\n  url: 'https://api.clarifai.com/v2/workflows',\n  headers: { \n    'Authorization': 'Bearer YOUR_PERSONAL_ACCESS_TOKEN', \n    'Accept': 'application/json', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
          }
        ]
      }
    },
    "/v2/workflows/{workflowId}": {
      "get": {
        "summary": "Get a specific workflow from an app.",
        "operationId": "V2_GetWorkflow2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleWorkflowResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "description": "Workflow ID to retrieve\nIf no ID is specified we return default workflow of the application\nIf an ID is specified by default we first looks into Clarifai workflows for a Workflow ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "favorClarifaiWorkflows",
            "description": "Use this flag to look into clarifai published workflows first for a Workflow ID",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "additionalFields",
            "description": "(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "excludeClarifaiWorkflows",
            "description": "if true will not expand search to clarifai workflows",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete a single workflow.",
        "operationId": "V2_DeleteWorkflow2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/workflows/{workflowId}/publish": {
      "post": {
        "operationId": "V2_PostWorkflowVersionsPublish2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "publications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiWorkflowVersionPublishRequest"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/workflows/{workflowId}/results": {
      "post": {
        "summary": "Predict using a workflow.",
        "operationId": "V2_PostWorkflowResults3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostWorkflowResultsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "description": "Workflow ID to retrieve\nIf no ID is specified we return default workflow of the application\nIf an ID is specified by default we first looks into Clarifai workflows for a Workflow ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "versionId": {
                    "type": "string",
                    "title": "Workflow version ID to retrieve\nIf no ID is specified, latest workflow version is used"
                  },
                  "inputs": {
                    "type": "array",
                    "items": {}
                  },
                  "outputConfig": {
                    "$ref": "#/components/schemas/apiOutputConfig"
                  },
                  "favorClarifaiWorkflows": {
                    "type": "boolean",
                    "title": "Use this flag to look into clarifai published workflows first for a Workflow ID"
                  },
                  "workflowState": {
                    "$ref": "#/components/schemas/apiWorkflowState"
                  }
                },
                "title": "PostWorkflowResultsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/workflows/{workflowId}/results/similarity": {
      "post": {
        "summary": "Compare embeddings distances using a workflow",
        "operationId": "V2_PostWorkflowResultsSimilarity3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiPostWorkflowResultsSimilarityResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "versionId": {
                    "type": "string",
                    "title": "Workflow version ID to retrieve\nIf no ID is specified, latest workflow version is used"
                  },
                  "modelVersionId": {
                    "type": "string",
                    "title": "The specific model version whose outputs we are comparing"
                  },
                  "probeInputs": {
                    "type": "array",
                    "title": "Each probe is compared against every pool input",
                    "items": {}
                  },
                  "poolInputs": {
                    "type": "array",
                    "title": "Each pool input is compared against ever probe input",
                    "items": {}
                  },
                  "favorClarifaiWorkflows": {
                    "type": "boolean",
                    "title": "Use this flag to look into clarifai published workflows first for a Workflow ID"
                  }
                },
                "title": "PostWorkflowResultsSimilarityRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/workflows/{workflowId}/unpublish": {
      "post": {
        "operationId": "V2_PostWorkflowVersionsUnPublish2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "publications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiWorkflowVersionUnPublishRequest"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/workflows/{workflowId}/versions": {
      "get": {
        "summary": "List workflow versions.",
        "operationId": "V2_ListWorkflowVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "description": "List versions for the workflow identified by this id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks.\nDefaults to 1.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "perPage",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults\nto 128.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      },
      "delete": {
        "summary": "Delete workflow versions.",
        "operationId": "V2_DeleteWorkflowVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statusBaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "description": "The id of the workflow that has the requested versions to delete.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "workflowVersionIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Delete the versions identified by these ids"
                  }
                },
                "title": "DeleteWorkflowVersionsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      },
      "patch": {
        "summary": "Patch workflow versions.",
        "operationId": "V2_PatchWorkflowVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiMultiWorkflowVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "description": "The id of the workflow that has the requested versions to patch.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userAppId": {
                    "$ref": "#/components/schemas/apiUserAppIDSet"
                  },
                  "workflowVersions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/apiWorkflowVersion"
                    },
                    "description": "Patch these versions."
                  },
                  "action": {
                    "type": "string",
                    "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
                  }
                },
                "title": "PatchWorkflowVersionsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "V2"
        ]
      }
    },
    "/v2/workflows/{workflowId}/versions/{workflowVersionId}": {
      "get": {
        "summary": "Get single workflow version.",
        "operationId": "V2_GetWorkflowVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSingleWorkflowVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "workflowId",
            "description": "The id of the workflow that has the requested version.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowVersionId",
            "description": "Get the identified by this id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.userId",
            "description": "Note user_id 'me' is reserved - it is the alias for the id of authorized user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userAppId.appId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "V2"
        ]
      }
    }
  },
  "components": {
    "requestBodies": {
      "V2_DeleteCollectorsBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userAppId": {
                  "type": "object",
                  "description": "Common message to identify the app in a url endpoint."
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "deleteAll": {
                  "type": "boolean"
                }
              },
              "description": "Request to delete several things by the list of ids."
            }
          }
        },
        "required": true
      },
      "apiDeleteAnnotationsRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/apiDeleteAnnotationsRequest"
            }
          }
        },
        "description": "Request to delete several things by the list of ids.",
        "required": true
      },
      "V2_DeleteComputeClustersBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userAppId": {
                  "type": "object",
                  "properties": {
                    "appId": {
                      "type": "string"
                    }
                  },
                  "description": "Only the user_id is used from this.",
                  "title": "Only the user_id is used from this."
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "List of nodepool ids to be deleted"
                }
              }
            }
          }
        },
        "required": true
      },
      "V2_DeleteAnnotations3Body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userAppId": {
                  "type": "object",
                  "description": "Common message to identify the app in a url endpoint."
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Delete annotations with IDs"
                },
                "inputIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Delete annotations for these Input IDs\nNote that 'ids' are optional but if the are provided the number and order in\n'ids' and 'input_ids' should match\nIf you do not specifiy 'ids' all the annotations for 'input_ids' are deleted\nHowever you need to specify at least one value for 'input_ids'\ni.e. this API does not support deleting all annotations"
                }
              },
              "description": "Request to delete several things by the list of ids."
            }
          }
        },
        "required": true
      },
      "V2_PostModelOutputs3Body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userAppId": {
                  "type": "object",
                  "description": "Common message to identify the app in a url endpoint."
                },
                "versionId": {
                  "type": "string"
                },
                "inputs": {
                  "type": "array",
                  "items": {}
                },
                "runnerSelector": {
                  "$ref": "#/components/schemas/apiRunnerSelector"
                }
              },
              "description": "//////////////////////////////////////////////////\nModel prediction related stuff needs inputs and produces outputs.\n//////////////////////////////////////////////////\nModel prediction."
            }
          }
        },
        "required": true
      },
      "V2_PatchAnnotationsSearchesBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userAppId": {
                  "type": "object",
                  "description": "The user_id and app_id to query from.",
                  "title": "The user_id and app_id to query from."
                },
                "searches": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/apiSearch"
                  },
                  "title": "The searches to be patched"
                },
                "action": {
                  "type": "string",
                  "title": "The action to perform on the patched Search objects\nFor now only action 'overwrite' is supported"
                }
              }
            }
          }
        },
        "required": true
      },
      "V2_DeleteInputsBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userAppId": {
                  "type": "object",
                  "description": "Common message to identify the app in a url endpoint."
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "description": "Request to delete several things by the list of ids."
            }
          }
        },
        "required": true
      },
      "V2_PostModelOutputsBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userAppId": {
                  "type": "object",
                  "description": "Common message to identify the app in a url endpoint."
                },
                "inputs": {
                  "type": "array",
                  "items": {}
                },
                "runnerSelector": {
                  "$ref": "#/components/schemas/apiRunnerSelector"
                }
              },
              "description": "//////////////////////////////////////////////////\nModel prediction related stuff needs inputs and produces outputs.\n//////////////////////////////////////////////////\nModel prediction."
            }
          }
        },
        "required": true
      }
    },
    "schemas": {
      "BookmarkOriginBookmarkType": {
        "type": "string",
        "enum": [
          "unknown",
          "model",
          "workflow",
          "dataset",
          "module"
        ],
        "default": "unknown"
      },
      "DeploymentSchedulingChoice": {
        "type": "string",
        "enum": [
          "UNKNOWN_SCHEDULING_CHOICE",
          "FAIL",
          "RANDOM",
          "PRICE",
          "PERFORMANCE",
          "NETWORK",
          "UTILIZATION",
          "PREFER_SPOT",
          "PREFER_ONDEMAND"
        ],
        "default": "UNKNOWN_SCHEDULING_CHOICE",
        "description": "In some scenarios it may not be obvous how we should schedule a resource to underlying nodes\nwithin the nodepool(s) above. The SchedulerChoice allows us to specify how to decide which\nnodepool to use when there are multiple nodepools and how to decide which type of node\nwithin a nodepool if there are multiple types.\nIf here are multiple nondepools then a decision on which to use comes into play\nif it is not specified in the prediction request.\nEven with a single nodepool a choice may come up such as when a resource that needs scheduling\nhas not specified the accelerator types it supports and the nodepool has multiple types.\n\n - FAIL: fail if there is any ambiguity.\n - RANDOM: randomly pick amongst the nodepools/nodes to assign.\n - PRICE: choose the compute that is cheaper\n - PERFORMANCE: schedule to the fastest known iption.\n - NETWORK: optimize based on network latency.\n - UTILIZATION: send to the least used nodepool based on it's capacity.\n - PREFER_SPOT: choose spot instances over on-demand\n - PREFER_ONDEMAND: choose on-demand instances over spot."
      },
      "MatrixUint64": {
        "type": "object",
        "properties": {
          "nCols": {
            "type": "string",
            "format": "uint64",
            "title": "Number of columns"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "description": "Matrix data stored as an array.\nIn order to access matrix element at row i & column j, use data[i*n_cols+j]."
          }
        },
        "description": "Store matrix of uint64s values.\nIt is recommended to store the matrix as a 1D array\nbecause it produces less bytes during serialization than a 2D array.\nThe matrix does store the number of columns, but it does not store the number of rows.\nThe number of rows can automatically be calculated as length(data)/n_cols."
      },
      "ModelTypeFieldModelTypeFieldType": {
        "type": "string",
        "enum": [
          "INVALID_MODEL_TYPE_FIELD_TYPE",
          "BOOLEAN",
          "STRING",
          "NUMBER",
          "ARRAY_OF_CONCEPTS",
          "ARRAY_OF_CONCEPTS_WITH_THRESHOLD",
          "RANGE",
          "ENUM",
          "COLLABORATORS",
          "JSON",
          "ARRAY_OF_NUMBERS",
          "WORKFLOW_EMBED_MODELS",
          "ARRAY_OF_STRINGS",
          "RECURSIVE_ENUM",
          "PYTHON_CODE",
          "DATASET_ID",
          "DATASET_VERSION_ID",
          "ARRAY_OF_MODEL_CONCEPTS",
          "DATASET",
          "DATASET_VERSION",
          "ENCRYPTED_STRING",
          "CHECKPOINT_MODEL"
        ],
        "default": "INVALID_MODEL_TYPE_FIELD_TYPE",
        "description": "These are various types of fields that we have UIs for.\n\n - ARRAY_OF_CONCEPTS: For auto-completing to concepts in the app. This goes into an data.concepts field.\n - ARRAY_OF_CONCEPTS_WITH_THRESHOLD: For auto-completing to concepts in the app. This goes into an data.concepts field.\n - RANGE: A range for a float value.\n - ENUM: If ENUM is used then the \"enum_options\" field should also be filled in with the respective ID and description\nfor the different ENUM options.\n - COLLABORATORS: For listing collaborators of the app. The field is a string of the collaborator's user_id.\n - JSON: For arbitrary json object: \"{...}\"\n - ARRAY_OF_NUMBERS: Such as [1.0, 2.0, 3.5]\n - WORKFLOW_EMBED_MODELS: For selecting the embed_model_version_id for context based models.\n - ARRAY_OF_STRINGS: Such as ['a', 'b', 'cantaloupe']\n - RECURSIVE_ENUM: If RECURSIVE_ENUM is used then the \"enum_options\" field should also be filled in with the respective ID and\ndescription for the different RECURSIVE_ENUM options, as well as model_type_fields for each enum choice.\n - PYTHON_CODE: For blocks of code that need to be specified by the user for setup or execution during workflow runs.\n - DATASET_ID: For selecting a dataset id in model parameters. String in API request.\n - DATASET_VERSION_ID: For selecting a dataset version id. String.\n - ARRAY_OF_MODEL_CONCEPTS: For auto-completing to concepts in the model.\n - DATASET: For selecting a dataset\n - DATASET_VERSION: For selecting a dataset version\n - ENCRYPTED_STRING: To pass a string downstream, that is encrypted in the DB and API.\n - CHECKPOINT_MODEL: For selecting a model version of the same model type to resume training from."
      },
      "ModuleVersionModuleNav": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "This is the left side title for this module and for browser tab title of the module.\nWe have this in the version so that users can change those settings\nwhen releasing a new version of their module."
          },
          "moduleSubNavs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleVersionModuleSubNav"
            },
            "description": "A list of subnav elements to put under the module title."
          }
        }
      },
      "ModuleVersionModuleSubNav": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "This is the display title for a navbar element to link to a specific page.\nThe name for this subnav element to show in the sidebar."
          },
          "queryKey": {
            "type": "string",
            "title": "The query param name"
          },
          "queryValue": {
            "type": "string",
            "title": "The query param value"
          }
        }
      },
      "NodeCapacityTypeCapacityType": {
        "type": "string",
        "enum": [
          "UKNOWN_CAPACITY_TYPE",
          "ON_DEMAND_TYPE",
          "SPOT_TYPE"
        ],
        "default": "UKNOWN_CAPACITY_TYPE"
      },
      "SearchMetric": {
        "type": "string",
        "enum": [
          "METRIC_NOT_SET",
          "EUCLIDEAN_DISTANCE",
          "COSINE_DISTANCE"
        ],
        "default": "METRIC_NOT_SET",
        "description": "Metric used for search. Can be EUCLIDEAN_DISTANCE (default) or COSINE_DISTANCE.\nCurrently only brute force search supports non-eudlicean metrics."
      },
      "SplitIntoDatasetsDatasetSplitMethod": {
        "type": "string",
        "enum": [
          "NOT_SET",
          "RANDOM_PERCENTAGE_SPLIT"
        ],
        "default": "NOT_SET",
        "title": "- RANDOM_PERCENTAGE_SPLIT: We will randomly split inputs into the datasets"
      },
      "TaskInputSourceTaskInputSourceType": {
        "type": "string",
        "enum": [
          "INPUT_SOURCE_TYPE_NOT_SET",
          "ALL_INPUTS",
          "SAVED_SEARCH",
          "DATASET"
        ],
        "default": "INPUT_SOURCE_TYPE_NOT_SET",
        "description": " - ALL_INPUTS: Use all inputs in the app.\n - SAVED_SEARCH: Use the inputs from a saved search.\n - DATASET: Inputs from a dataset."
      },
      "TaskReviewTaskReviewStrategy": {
        "type": "string",
        "enum": [
          "TASK_REVIEW_STRATEGY_NOT_SET",
          "NONE",
          "MANUAL",
          "CONSENSUS"
        ],
        "default": "TASK_REVIEW_STRATEGY_NOT_SET",
        "description": " - NONE: No review is needed.\n - MANUAL: Manual review strategy.\n - CONSENSUS: Consensus review strategy."
      },
      "TaskTaskType": {
        "type": "string",
        "enum": [
          "TYPE_NOT_SET",
          "CONCEPTS_CLASSIFICATION",
          "BOUNDING_BOX_DETECTION",
          "POLYGON_DETECTION"
        ],
        "default": "TYPE_NOT_SET",
        "description": " - CONCEPTS_CLASSIFICATION: Concepts classification tasks annotate concepts for the overall image, frame of video or section of text.\n - BOUNDING_BOX_DETECTION: Bounding box detection tasks annotate rectangular bounding box regions around each concept in an image, frame of video or section of text.\n - POLYGON_DETECTION: Polygon detection tasks annotate free-form regions around concepts in an image, frame of video or section of text."
      },
      "TaskWorkerPartitionedStrategyInfoTaskWorkerPartitionedStrategy": {
        "type": "string",
        "enum": [
          "PARTITIONED_WORKER_STRATEGY_NOT_SET",
          "EVENLY",
          "WEIGHTED"
        ],
        "default": "PARTITIONED_WORKER_STRATEGY_NOT_SET",
        "description": " - EVENLY: Each worker will label (approximately) the same number of inputs.\n - WEIGHTED: Each worker will have an assigned weight.\nSee weights field for more details."
      },
      "TaskWorkerTaskWorkerStrategy": {
        "type": "string",
        "enum": [
          "WORKER_STRATEGY_NOT_SET",
          "PARTITIONED",
          "FULL"
        ],
        "default": "WORKER_STRATEGY_NOT_SET",
        "description": " - PARTITIONED: The inputs will be partitioned in several partitions.\nEach worker will label one or more input partitions.\n - FULL: Each worker will label all inputs from input source."
      },
      "VisibilityGettable": {
        "type": "string",
        "enum": [
          "UNKNOWN_VISIBILITY",
          "PRIVATE",
          "ORG",
          "PUBLIC"
        ],
        "default": "UNKNOWN_VISIBILITY",
        "description": "Gettable defined the level of access for GET operations for this resource.\n\n - UNKNOWN_VISIBILITY: Default value not allowed.\n - PRIVATE: PRIVATE requires collaborator or team permissions in order to GET this resource.\n - ORG: ORG requires you to be in the same org in order to GET this resource, but don't have to be a\nteammate or collaborator.\n - PUBLIC: PUBLIC opens up GET access to the resource to any user on the platform even if they are not\na teammate or collaborator."
      },
      "apiAPIPostModelOutputsCollectorSource": {
        "type": "object",
        "properties": {
          "modelUserId": {
            "type": "string",
            "description": "To define the model that we should collect from we need to specify the following 4 IDs:\nThe User ID of the model we want to collect from.\nThis is User B in the example."
          },
          "modelAppId": {
            "type": "string",
            "description": "The App ID of the model we want to collect from."
          },
          "modelId": {
            "type": "string",
            "description": "The Model ID of the model we want to collect from."
          },
          "modelVersionId": {
            "type": "string",
            "description": "The Version ID of the model we want to collect from."
          },
          "postInputsKeyId": {
            "type": "string",
            "description": "This key is used to POST /inputs into your app by the collector. It can be an API key or a\nPAT. This needs the permissions that are needed for POST /inputs for the app_id this\nCollector is defined in."
          },
          "callerUserId": {
            "type": "string",
            "description": "This is a private field that defaults to the app owner for public users.\nIf this is left blank then this collector will collect from ALL users calling the given model."
          }
        },
        "description": "This is configuration for using the inputs send for model prediction in our API as\nas the source for data."
      },
      "apiAWSCreds": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "description": "AWS S3 storage credentials."
      },
      "apiAddConcepts": {
        "type": "object",
        "properties": {
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConcept"
            }
          }
        }
      },
      "apiAddMetadata": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          }
        }
      },
      "apiAddToDataset": {
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string"
          }
        }
      },
      "apiAiAssistParameters": {
        "type": "object",
        "properties": {
          "minThreshold": {
            "type": "number",
            "format": "float",
            "title": "Min and max threshold values for approving annotations by default based on prediction score"
          },
          "maxThreshold": {
            "type": "number",
            "format": "float"
          },
          "conceptRelationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "ids of concept relations. Used in AI assist workflow"
          }
        },
        "title": "AiAssistParameters"
      },
      "apiAnd": {
        "type": "object",
        "properties": {
          "output": {
            "$ref": "#/components/schemas/apiOutput"
          },
          "negate": {
            "type": "boolean",
            "title": "If True then this will flip the meaning of this part of the\nquery. This allow for queries such as dog AND ! metadata=={\"blah\":\"value\"}"
          }
        },
        "description": "This is the common building block of a query which is a sequence of And messages ANDed together.\nNote that some fields are used too RANK results (affect the scores) and some are used to FILTER\nresults (unordered subset of your app's contents). In general, FILTER operations are more\nefficient queries at scale and when combined with RANK operations can speed up search performance\nas you effectively operate on a smaller sub-set of your entire app."
      },
      "apiAnnotationFilter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "The ID for the annotation filter"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the annotation filter was created.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the annotation filter was modified.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "userId": {
            "type": "string",
            "description": "The user the annotation filter belongs to."
          },
          "appId": {
            "type": "string",
            "description": "The app the annotation filter belongs to."
          },
          "search": {
            "$ref": "#/components/schemas/apiSearch"
          }
        },
        "description": "AnnotationFilter is used to create a new dataset version.\nFor now, the filter is simply a wrapper over a Search.\nIn the future, we may add extra fields to customize the filtering."
      },
      "apiAnnotationFilterConfig": {
        "type": "object",
        "properties": {
          "ignoreEmptyInputs": {
            "type": "boolean",
            "description": "If true, empty inputs are not included in the dataset version.\nIf false, empty inputs are included in the dataset version.\nWe define an empty input as an input without any annotations after annotation filter is applied."
          }
        }
      },
      "apiAnnotationSearchMetrics": {
        "type": "object",
        "properties": {
          "groundTruth": {
            "$ref": "#/components/schemas/apiSearch"
          },
          "searchToEval": {
            "$ref": "#/components/schemas/apiSearch"
          },
          "metrics": {
            "$ref": "#/components/schemas/apiEvalMetrics"
          },
          "activeConceptCount": {
            "type": "integer",
            "format": "int64",
            "title": "active_concept_count is the number of concepts for this evaluation"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          }
        },
        "title": "AnnotationSearchMetrics"
      },
      "apiApp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "defaultLanguage": {
            "type": "string"
          },
          "defaultWorkflowId": {
            "type": "string",
            "title": "Default workflow id deprecated in favor of default_workflow"
          },
          "defaultWorkflow": {
            "$ref": "#/components/schemas/apiWorkflow"
          },
          "userId": {
            "type": "string",
            "title": "why is user_id present here when this message type is used in PostApps but completely ignored there? PostApp already\nspecifies the userid in path but doesn't even actually use neither of userids, it instead used the id from auth context.\nThis creates a lot of ambiguity, should always have different message types for Post/Get endpoints so that the minimum interface for each op can be described"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the app was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the app was last modified"
          },
          "legalConsentStatus": {
            "type": "integer",
            "format": "int64",
            "title": "if user accept legal consent for face recognition"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "description": {
            "type": "string",
            "description": "short description about the app."
          },
          "sampleMs": {
            "type": "integer",
            "format": "int64",
            "title": "Default value for model predictions on video: Sample delay for video predicting (1 frame per N milliseconds)"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "dataTierId": {
            "type": "string",
            "description": "data tier id this app is using."
          },
          "isStarred": {
            "type": "boolean",
            "title": "Is starred by the requesting user (only showed on get/list requests)\nPlease use PostAppStars/DeleteAppStars endpoints to star/unstar an app"
          },
          "starCount": {
            "type": "integer",
            "format": "int32",
            "title": "How many users have starred the app (only showed on get/list requests)\nComputed value, not editable"
          },
          "notes": {
            "type": "string",
            "description": "Notes for the application\nThis field should be used for in-depth notes and supports up to 64Kbs."
          },
          "image": {
            "$ref": "#/components/schemas/apiImage"
          },
          "isTemplate": {
            "type": "boolean",
            "description": "An app marked as a template can be duplicated by any user that can see it,\nincluding all visible resources within it."
          },
          "extraInfo": {
            "$ref": "#/components/schemas/apiAppExtraInfo"
          }
        },
        "title": "Application with tasks and datasets"
      },
      "apiAppCopyProgress": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "apiAppDuplication": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of an app duplication job."
          },
          "destinationApp": {
            "$ref": "#/components/schemas/apiApp"
          },
          "existingAppId": {
            "type": "string",
            "description": "The ID of an existing app you want to copy data into.\n\nIf not provided, then we will create a new application as the destination instead.\nThe various new_app_* fields can be used to set fields of this new application.\n\nDeprecated: Use destination_app.id with an existing ID instead."
          },
          "newAppId": {
            "type": "string",
            "description": "The ID to use when creating a new application.\nYou cannot set this field when copying into an existing app, i.e., when existing_app_is is set.\n\nIf not provided, then it will be generated automatically.\n\nDeprecated: Use destination_app.id with a new ID instead."
          },
          "newAppName": {
            "type": "string",
            "description": "The name to use when creating a new application.\nYou cannot set this field when copying into an existing app, i.e., when existing_app_is is set.\n\nIf not provided, then the ID of the new application is also used as the name.\n\nDeprecated: Application names are deprecated, use application IDs instead."
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the app duplication job was created."
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The last time when the app duplication job status was updated."
          },
          "filter": {
            "$ref": "#/components/schemas/apiAppDuplicationFilters"
          },
          "progress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiAppCopyProgress"
            },
            "title": "Copy progress for each resource type requested by the filter. Possible fields:\n - inputs\n - concepts\n - annotations\n - models\n - workflows\n - installed_module_versions"
          }
        },
        "title": "AppDuplication"
      },
      "apiAppDuplicationFilters": {
        "type": "object",
        "properties": {
          "copyInputs": {
            "type": "boolean",
            "description": "Copy inputs. Requires that copy_concepts is also set.\nNote that this will still copy input-level annotations even if copy_annotations is not set."
          },
          "copyConcepts": {
            "type": "boolean",
            "description": "Copy concepts."
          },
          "copyAnnotations": {
            "type": "boolean",
            "description": "Copy annotations. Requires that copy_inputs and copy_concepts are also set."
          },
          "copyModels": {
            "type": "boolean",
            "description": "Copy models. Requires that copy_concepts is also set."
          },
          "copyWorkflows": {
            "type": "boolean",
            "description": "Copy workflows."
          },
          "copyInstalledModuleVersions": {
            "type": "boolean",
            "description": "Copy installed module versions."
          }
        },
        "title": "AppDuplicationFilters"
      },
      "apiAppExtraInfo": {
        "type": "object",
        "properties": {
          "searchRevisionMarker": {
            "type": "string",
            "title": "Revision marker for this application.\nThe value of the revision changes when\n* inputs are added, updated or deleted\n* annotations are added, updated or deleted\n* inputs are added to or removed from datasets\nFor example, this value can be used to detect if client side caches related to searching should be invalidated.\nField not filled in for list endpoints, use GetApp"
          },
          "counts": {
            "$ref": "#/components/schemas/apiAppResourceCounts"
          }
        }
      },
      "apiAppQuery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Query by application name. This supports wildcard queries like \"gen*\" to match \"general\" as an example."
          }
        },
        "title": "App query"
      },
      "apiAppResourceCounts": {
        "type": "object",
        "properties": {
          "datasets": {
            "type": "string",
            "format": "int64"
          },
          "models": {
            "type": "string",
            "format": "int64"
          },
          "workflows": {
            "type": "string",
            "format": "int64"
          },
          "modules": {
            "type": "string",
            "format": "int64"
          },
          "inputs": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "apiAudio": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "This is a URL to a publicly accessible image file. The platform will download this file server\nside and then process."
          },
          "base64": {
            "type": "string",
            "format": "byte",
            "description": "The base64 field is using image file bytes directly in the request.\nNOTE: if you're sending a json request, then this MUST be base64 encoded before sending (hence\nthe name here).\nWhen using our grpc clients, you DO NOT need to base64 encode\nit yourself since the clients know how to do this for you automatically and will avoid the\nbase64 encoding if they send a binary request."
          },
          "allowDuplicateUrl": {
            "type": "boolean",
            "description": "If True then you will be allowed to have multiple urls."
          },
          "hosted": {
            "$ref": "#/components/schemas/apiHostedURL"
          },
          "audioInfo": {
            "$ref": "#/components/schemas/apiAudioInfo"
          }
        },
        "title": "Audio asset struct"
      },
      "apiAudioInfo": {
        "type": "object",
        "properties": {
          "audioFormat": {
            "type": "string",
            "title": "audio format"
          },
          "sampleRate": {
            "type": "integer",
            "format": "int32",
            "title": "sample rate"
          },
          "durationSeconds": {
            "type": "number",
            "format": "float",
            "title": "audio track duration in seconds"
          },
          "bitRate": {
            "type": "integer",
            "format": "int32",
            "title": "audio track bit rate"
          }
        }
      },
      "apiAutoscaleConfig": {
        "type": "object",
        "properties": {
          "minReplicas": {
            "type": "integer",
            "format": "int64",
            "description": "The minimum number of replicas for the runner to have.\nDefaults to 0 which means autoscaling can scale down to zero.\nIf you want a replica always up then set to >= 1."
          },
          "maxReplicas": {
            "type": "integer",
            "format": "int64",
            "description": "The maximium number of replicas to scale up the runner to."
          },
          "trafficHistorySeconds": {
            "type": "integer",
            "format": "int64",
            "description": "The number of seconds of traffic history to consider when autoscaling."
          },
          "scaleDownDelaySeconds": {
            "type": "integer",
            "format": "int64",
            "description": "The time to wait before scaling down after the last request."
          },
          "scaleUpDelaySeconds": {
            "type": "integer",
            "format": "int64",
            "description": "The time to wait between scaling up replicas without burst traffic."
          },
          "enablePacking": {
            "type": "boolean",
            "description": "Depending on your plan you may be able to enable packing of resources into a single node\nfor more compute and cost efficiency."
          }
        },
        "description": "It might be better to do this as runner autoscaling so that resources\nof a model are very simply what that model needs at minimum.\nNote that resources for things like modes inside runners are not\nrelated to how many replicas of those runners are needed to handle traffic."
      },
      "apiAzureBlobCreds": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string"
          },
          "accountKey": {
            "type": "string"
          }
        },
        "description": "Azure Blob storage credentials."
      },
      "apiBinaryMetrics": {
        "type": "object",
        "properties": {
          "numPos": {
            "type": "integer",
            "format": "int64"
          },
          "numNeg": {
            "type": "integer",
            "format": "int64"
          },
          "numTot": {
            "type": "integer",
            "format": "int64"
          },
          "rocAuc": {
            "type": "number",
            "format": "float"
          },
          "f1": {
            "type": "number",
            "format": "float"
          },
          "concept": {
            "$ref": "#/components/schemas/apiConcept"
          },
          "rocCurve": {
            "$ref": "#/components/schemas/apiROC"
          },
          "precisionRecallCurve": {
            "$ref": "#/components/schemas/apiPrecisionRecallCurve"
          },
          "avgPrecision": {
            "type": "number",
            "format": "float"
          },
          "areaName": {
            "type": "string"
          },
          "areaMin": {
            "type": "number",
            "format": "double"
          },
          "areaMax": {
            "type": "number",
            "format": "double"
          },
          "iou": {
            "type": "number",
            "format": "float"
          }
        },
        "title": "BinaryMetrics"
      },
      "apiBookmarkOrigin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "original resource id"
          },
          "appId": {
            "type": "string",
            "title": "original resource app id"
          },
          "userId": {
            "type": "string",
            "title": "original resource user id"
          },
          "resourceType": {
            "$ref": "#/components/schemas/BookmarkOriginBookmarkType"
          }
        }
      },
      "apiBoundingBox": {
        "type": "object",
        "properties": {
          "topRow": {
            "type": "number",
            "format": "float",
            "title": "The top left of the bounding box normalized to the data dimension to be within [0-1.0]"
          },
          "leftCol": {
            "type": "number",
            "format": "float",
            "title": "The left column of the bounding box normalized to the data dimension to be within [0-1.0]"
          },
          "bottomRow": {
            "type": "number",
            "format": "float",
            "title": "The bottom row of the bounding box normalized to the data dimension to be within [0-1.0]"
          },
          "rightCol": {
            "type": "number",
            "format": "float",
            "title": "The right col of the bounding box normalized to the data dimension to be within [0-1.0]"
          }
        },
        "description": "Rectangular bounding box for a region."
      },
      "apiBuildInfo": {
        "type": "object",
        "properties": {
          "dockerImageName": {
            "type": "string",
            "title": "Docker image name"
          },
          "dockerImageTag": {
            "type": "string",
            "title": "Docker image tag"
          },
          "dockerImageDigest": {
            "type": "string",
            "title": "Docker image digest"
          }
        }
      },
      "apiBulkOperation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id of the Bulk Operation task"
          },
          "inputIds": {
            "$ref": "#/components/schemas/apiInputIDs"
          },
          "search": {
            "$ref": "#/components/schemas/apiSearch"
          },
          "dataset": {
            "$ref": "#/components/schemas/apiDataset"
          },
          "operation": {
            "$ref": "#/components/schemas/apiOperation"
          },
          "appId": {
            "type": "string",
            "title": "Application ID that this Operation was created from"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "progress": {
            "$ref": "#/components/schemas/apiProgress"
          },
          "createdBy": {
            "type": "string",
            "title": "User id that created this operation"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the operation was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Last time the status got updated"
          }
        }
      },
      "apiCancelBulkOperationRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "List of bulk operation ids to be cancelled"
          }
        },
        "title": "Cancel a list of bulk operation ids"
      },
      "apiCancelInputsExtractionJobsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "List of extraction job ids to be cancelled"
          }
        },
        "title": "Cancel a list of extraction job ids"
      },
      "apiCloudProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the cloud provider."
          },
          "name": {
            "type": "string",
            "description": "Name of the cloud provider."
          }
        },
        "description": "CloudProvider represents the entity that provides the infrastructure where the Nodepools are deployed.\nThis could be a public cloud provider like AWS, GCP, Azure, etc., or a self-hosted infrastructure."
      },
      "apiCluster": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "title": "Number of annotations tied to the cluster in the app"
          },
          "score": {
            "type": "number",
            "format": "float",
            "description": "The score assigned to this cluster.\nFor List Clusters endpoint, this represents percentage of inputs in the app assigned to this cluster."
          },
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiHit"
            },
            "title": "Representative hits for cluster (for now we only return 1)"
          },
          "projection": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "title": "Cluster data"
      },
      "apiCollaboration": {
        "type": "object",
        "properties": {
          "app": {
            "$ref": "#/components/schemas/apiApp"
          },
          "appOwner": {
            "$ref": "#/components/schemas/apiUser"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "the low-level scope users are shared with for this collaboration"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "the endpoint-level scopes users are shared with for this collaboration"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "when is the collaboration created"
          }
        },
        "description": "collaboration includes an app you're invited to work on."
      },
      "apiCollaborator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id of this collaborator"
          },
          "app": {
            "$ref": "#/components/schemas/apiApp"
          },
          "user": {
            "$ref": "#/components/schemas/apiUser"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "the permission this collaborator"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the app was shared with. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the collaborator was updated."
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the collaborator was removed from app."
          }
        },
        "title": "Collaborator - invited user, who shares an access to an application"
      },
      "apiCollector": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the collector."
          },
          "description": {
            "type": "string",
            "description": "Human readable description for the collector."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the collector is created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "preQueueWorkflowId": {
            "type": "string",
            "description": "This is a workflow to run inline in model predict calls. It should ONLY have very fast and\nlight-weight models in it as it will effect the speed of the predictions being made.\nThis workflow's purpose is to filter down the inputs to queue for the collector to process.\nThe input to this workflow is going to be the OUTPUT of the model, not the input to the model\nsince we want to encourage having fast workflows that can also take advantage of the model\noutputs to make deciions (for example: thresholding based on concepts). If the workflow\noutput has any field that is non-empty then the input will be queued for the collector\nto process with the post_queue_workflow_id.\n\nAs a simpler alternative, pre_queue_random_sample can be set to just use random sampling instead."
          },
          "preQueueRandomSample": {
            "type": "number",
            "format": "float",
            "description": "Instead of needing to create a new workflow for pre_queue_workflow_id, if just random sampling\nof the model inputs is required, then pre_queue_random_sample can be set to a value from (0-1]\nto denote the fraction of inputs to collect."
          },
          "postQueueWorkflowId": {
            "type": "string",
            "description": "A workflow to run to after the collector is processing the queued input. This workflow\nuses the original input to the model as input to the workflow so that you can run additional\nmodels as well on that input to decide whether to queue the model or not. If the workflow\noutput has any field that is non-empty then it will be passed on to POST /inputs to\nthe destination app."
          },
          "collectorSource": {
            "$ref": "#/components/schemas/apiCollectorSource"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "collectOutputs": {
            "type": "boolean",
            "description": "Whether to collect outputs or not. Default is false. If selected, outputs from the\noriginal model predict call will be posted as annotations along with the input with success status."
          }
        },
        "title": "Collector is a data pathway from a CollectorSource to an app to collect data automatically.\nFor example, a CollectorSource"
      },
      "apiCollectorSource": {
        "type": "object",
        "properties": {
          "apiPostModelOutputsCollectorSource": {
            "$ref": "#/components/schemas/apiAPIPostModelOutputsCollectorSource"
          }
        },
        "description": "Configuration for the source to collect data from.\nOnly one of the fields can be present at a time.\n\nThe ID of the source in case we want to implment /collectors/{collector_id}/sources\n string id = 1;"
      },
      "apiColor": {
        "type": "object",
        "properties": {
          "rawHex": {
            "type": "string"
          },
          "w3c": {
            "$ref": "#/components/schemas/apiW3C"
          },
          "value": {
            "type": "number",
            "format": "float"
          }
        },
        "title": "Color data"
      },
      "apiComputeCluster": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "description": "Short description of cluster region."
          },
          "cloudProvider": {
            "$ref": "#/components/schemas/apiCloudProvider"
          },
          "region": {
            "type": "string",
            "description": "The region. The naming here depends on the cluster choice above and will be validated\nagainst which clusters+regions that Clarifai currently supports."
          },
          "userId": {
            "type": "string",
            "description": "The user/org that this compute cluster belongs to."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the compute cluster was created."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the compute cluster was last modified."
          }
        },
        "description": "We define a cluster here to be used in Nodepools and by the cloud provider.\nThere will be one cloud provider per Cluster.\nThis allows us to define Clusters that are VPCs within one physical cloud and have that\nmanaged by one cloud provider which can list all nodepools for that VPC to deploy them and\norchestrate work within them."
      },
      "apiComputeInfo": {
        "type": "object",
        "properties": {
          "numCpus": {
            "type": "integer",
            "format": "int64",
            "description": "Number of CPUs."
          },
          "cpuMemory": {
            "type": "string",
            "description": "Amount of CPU memory to use as a minimum."
          },
          "numAccelerators": {
            "type": "integer",
            "format": "int64",
            "description": "Number of accelerators (typically GPUs, TPUs, etc. not CPUs) for this resource."
          },
          "acceleratorMemory": {
            "type": "string",
            "description": "Amount of accelerator/GPU memory to use as a minimum.\nThis is defined per accelerator.\nThis follows the format used by kubernetes like 1Ki, 2Mi, 3Gi, 4Ti.\n\nThe supported accelerators that the resource can run on. If the resource requires a specific\n accelerator type then it will only be scheduled on nodes that have that type of accelerator.\n If there is no hard requirements beyond the number of accelerators and their memory then this\n field can be left empty.\n This setting will cause an error if num_accelerators == 0"
          },
          "acceleratorType": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Or should it be removed completely and use the nodepool accelerator type itself.\nThese are the supported accelerators that the model can run on."
          }
        },
        "description": "These are the resource needs of a given API object such as a model.\nThis is what they require as a minimum to run and will be used upon scheduling\nas the request and limit for the k8s pod. If we want to separate limits and requests in the\nfuture we can allow setting a limits ComputeInfo and a requests ComputeInfo."
      },
      "apiConcept": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The concept's unique id."
          },
          "name": {
            "type": "string",
            "description": "The name of the concept in the given language."
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "Used to indicate presence (1.0) or not (0.0) of this concept when making a request.\nThis is also the prediction probability when returning predictions from our API.\nFor convenience we use the default of 1.0 when making requests so the concept you provide is\nis treated as a positive (1.0) and not a negative (which would be value == 0.0)."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the concept was created. The format is https://www.ietf.org/rfc/rfc3339.txt .\nExample: \"2006-01-02T15:04:05.999999Z\". This field is used only in a response."
          },
          "language": {
            "type": "string",
            "description": "The language in which the concept name is in. This is *ONLY* used in the response and setting\nit in a request is ignored since the default language of your app is used when creating\nor patching a Concept. To set other languages for your concept use the ConceptLanguage object\nand its corresponding endpoints."
          },
          "appId": {
            "type": "string",
            "description": "The application id that this concept is within. This can be ignored by most users."
          },
          "definition": {
            "type": "string",
            "description": "The definition for the concept. Similar to name. This can be ignored by most users."
          },
          "vocabId": {
            "type": "string",
            "description": "The vocabulary that this concept belongs to. This is useful if you have different unique sets\nof concepts that you can separate out based on this field. For example \"age_appearance\" vs\n\"gender_appearance\" in a list of concept returned from the demographics model."
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "userId": {
            "type": "string",
            "description": "The user the concept belongs to."
          },
          "keypointInfo": {
            "$ref": "#/components/schemas/apiKeypointInfo"
          },
          "extraInfo": {
            "$ref": "#/components/schemas/apiConceptExtraInfo"
          }
        },
        "title": "Concept or tag"
      },
      "apiConceptCount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The concept's unique id."
          },
          "name": {
            "type": "string",
            "description": "The name of the concept."
          },
          "conceptTypeCount": {
            "$ref": "#/components/schemas/apiConceptTypeCount"
          },
          "detailConceptCount": {
            "$ref": "#/components/schemas/apiDetailConceptCount"
          }
        },
        "title": "ConceptCount"
      },
      "apiConceptExtraInfo": {
        "type": "object",
        "properties": {
          "isRankable": {
            "type": "boolean",
            "description": "Whether this concept is rankable based on ConceptExtraInfoRequest configuration."
          }
        },
        "description": "ConceptExtraInfo represents extra information related to a concept that is context-dependent.\nIt is only set when requested in ConceptExtraInfoRequest."
      },
      "apiConceptExtraInfoRequest": {
        "type": "object"
      },
      "apiConceptLanguage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "This is the language code for the language such as \"en\"."
          },
          "name": {
            "type": "string",
            "description": "The type of the outside source."
          },
          "definition": {
            "type": "string",
            "description": "The ID that is referenced in the source."
          }
        },
        "description": "This represents a link to an outside source for the given concept.\nThe values from here are sticked into Concept message into the name and definition fields when\nreturning from the API in your default language. The \"id\" field here becomes the \"language\"\nfield of the Concept message which is a little weird."
      },
      "apiConceptQuery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the concept to search."
          },
          "language": {
            "type": "string",
            "description": "The language of the concept name in a search. Defaults to English."
          },
          "workflowId": {
            "type": "string",
            "description": "Deprecated: Use workflow.id instead."
          },
          "useCases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorkflowModelUseCase"
            },
            "description": "The concepts must belong to models with specified use cases.\nMultiple values are joined using an OR condition."
          },
          "workflow": {
            "$ref": "#/components/schemas/apiWorkflow"
          }
        },
        "title": "ConceptQuery"
      },
      "apiConceptRelation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID of the concept relation"
          },
          "subjectConcept": {
            "$ref": "#/components/schemas/apiConcept"
          },
          "objectConcept": {
            "$ref": "#/components/schemas/apiConcept"
          },
          "predicate": {
            "type": "string",
            "description": "The predicate (i.e. edge) linking the subject and the object\nBoth subject_concept and object_concept are concepts.\nThe predicate is the type of relationship.\nThat predicate acts on the subject.\n\nThere are three current types of predicates:\n1) \"hyponym\"\n2) \"hypernym\"\n3) \"synonym\"\n\n1) For example, 'hyponym' is a type of predicate which represents 'is_a_kind_of' relation so\nthe following relationship:\n'honey' (subject), 'hyponym' (predicate), 'food' (object)\nCan more easily be read as:\n'honey' 'is a kind of' 'food'\n\n\n2) The 'hypernym' relation is the opposite of 'hyponym' and when you add one of the\nrelationships the opposite will automatically appear for you in queries.\n\nThe 'hypernym' can be read as 'is a parent of' so:\n'food' (subject), 'hypernym' (predicate), 'honey' (object)\nCan more easily be read as:\n'food' is a parent of 'honey'\n\n3) The 'synonym' relation defines two concepts that essential mean the same thing. This\nis more like a \"is\" relationship. So for example a 'synonym' relationship could be:\n\"puppy\" is \"pup\"\nThe reverse is also true once the former is added so:\n\"pup\" is \"puppy\"\nwill appear in queries as well."
          },
          "knowledgeGraphId": {
            "type": "string",
            "description": "The knowledge graph id that this edge belongs to. If using the app's global knowledge graph\nand not a specific one then this should be the empty string \"\"."
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          }
        },
        "title": "This represents a relation (i.e. edge) between the subject concept and the object concept"
      },
      "apiConceptTypeCount": {
        "type": "object",
        "properties": {
          "positive": {
            "type": "integer",
            "format": "int64",
            "description": "The number of inputs that have a concept with a value of 1.0 (indicating presence of the\nconcept in an input)."
          },
          "negative": {
            "type": "integer",
            "format": "int64",
            "description": "The number of inputs that have a concept with a value of 0.0 (indicating absence of the\nconcept in an input)."
          }
        },
        "title": "ConceptTypeCount"
      },
      "apiConfusionMatrix": {
        "type": "object",
        "properties": {
          "matrix": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConfusionMatrixEntry"
            }
          },
          "conceptIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "These concept_ids are ordered by the strength of the diagonal in the ConfusionMatrix."
          }
        },
        "title": "ConfusionMatrix"
      },
      "apiConfusionMatrixEntry": {
        "type": "object",
        "properties": {
          "predicted": {
            "type": "string"
          },
          "actual": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "float"
          },
          "predictedConcept": {
            "$ref": "#/components/schemas/apiConcept"
          },
          "actualConcept": {
            "$ref": "#/components/schemas/apiConcept"
          }
        },
        "title": "ConfusionMatrixEntry"
      },
      "apiCooccurrenceMatrix": {
        "type": "object",
        "properties": {
          "matrix": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCooccurrenceMatrixEntry"
            }
          },
          "conceptIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "These concept_ids are ordered by the strength of the diagonal in the ConfusionMatrix."
          }
        },
        "title": "CooccurrenceMatrix"
      },
      "apiCooccurrenceMatrixEntry": {
        "type": "object",
        "properties": {
          "row": {
            "type": "string",
            "title": "concept_id for the row"
          },
          "col": {
            "type": "string",
            "title": "concept_id for the col"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "NOTE: this is inefficient, should just have the order of the rows/cols"
      },
      "apiData": {
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/apiImage"
          },
          "video": {
            "$ref": "#/components/schemas/apiVideo"
          },
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConcept"
            },
            "description": "A list of concepts."
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "geo": {
            "$ref": "#/components/schemas/apiGeo"
          },
          "colors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiColor"
            },
            "description": "The dominant colors within an image."
          },
          "clusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCluster"
            },
            "description": "Clustering centroids for inputs."
          },
          "embeddings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiEmbedding"
            },
            "description": "Embedding vectors representing each input."
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiRegion"
            },
            "description": "For recursing into localized regions of an input."
          },
          "frames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiFrame"
            },
            "description": "For temporal content like video."
          },
          "text": {
            "$ref": "#/components/schemas/apiText"
          },
          "audio": {
            "$ref": "#/components/schemas/apiAudio"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTrack"
            },
            "description": "Track information."
          },
          "timeSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTimeSegment"
            },
            "description": "Time segments information."
          },
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiHit"
            },
            "title": "Holds score, rank, and user, app, input IDs and search hit data"
          },
          "heatmaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiImage"
            },
            "title": "Heatmap as 2d image"
          }
        },
        "title": "Data"
      },
      "apiDataSourceCredentials": {
        "type": "object",
        "properties": {
          "s3Creds": {
            "$ref": "#/components/schemas/apiAWSCreds"
          },
          "gcpCreds": {
            "type": "string",
            "format": "byte",
            "description": "GCP Cloud Storage uses service account key data(creds.json) as Byte array for authentication."
          },
          "azureBlobCreds": {
            "$ref": "#/components/schemas/apiAzureBlobCreds"
          }
        }
      },
      "apiDataSourceURL": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Supported providers are AWS S3, Azure blob, GCP cloud storage."
          },
          "credentials": {
            "$ref": "#/components/schemas/apiDataSourceCredentials"
          }
        }
      },
      "apiDataType": {
        "type": "string",
        "enum": [
          "UNDEFINED",
          "STRING",
          "UINT8",
          "INT32",
          "INT64",
          "FP32"
        ],
        "default": "UNDEFINED",
        "title": "- UNDEFINED: Default value, should not be used"
      },
      "apiDataset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "The ID for the dataset"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the dataset was created.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the dataset was modified.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "appId": {
            "type": "string",
            "description": "The app the dataset belongs to."
          },
          "userId": {
            "type": "string",
            "description": "The user the dataset belongs to."
          },
          "description": {
            "type": "string",
            "title": "Description of the dataset"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "defaultProcessingInfo": {
            "$ref": "#/components/schemas/apiDatasetVersionProcessingInfo"
          },
          "notes": {
            "type": "string",
            "description": "Notes for the dataset\nThis field should be used for in-depth notes and supports up to 64Kbs."
          },
          "version": {
            "$ref": "#/components/schemas/apiDatasetVersion"
          },
          "isStarred": {
            "type": "boolean",
            "description": "Whether the dataset is starred by the requesting user."
          },
          "starCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of users that starred this dataset."
          },
          "bookmarkOrigin": {
            "$ref": "#/components/schemas/apiBookmarkOrigin"
          },
          "image": {
            "$ref": "#/components/schemas/apiImage"
          }
        },
        "title": "Dataset"
      },
      "apiDatasetInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the input was added to the dataset.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          }
        },
        "title": "DatasetInput"
      },
      "apiDatasetSplit": {
        "type": "object",
        "properties": {
          "dataset": {
            "$ref": "#/components/schemas/apiDataset"
          },
          "percentage": {
            "type": "integer",
            "format": "int64",
            "title": "For RANDOM_PERCENTAGE_SPLIT.\nValues from (0,100]"
          }
        }
      },
      "apiDatasetVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "The ID for the dataset version"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the dataset version was created.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the dataset version was modified.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "appId": {
            "type": "string",
            "description": "The app the dataset version belongs to."
          },
          "userId": {
            "type": "string",
            "description": "The user the dataset version belongs to."
          },
          "datasetId": {
            "type": "string",
            "description": "The dataset the dataset version belongs to."
          },
          "annotationFilterConfig": {
            "$ref": "#/components/schemas/apiAnnotationFilterConfig"
          },
          "modelPredictConfig": {
            "$ref": "#/components/schemas/apiModelPredictConfig"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "description": {
            "type": "string",
            "title": "Description of the dataset version"
          },
          "processingInfo": {
            "$ref": "#/components/schemas/apiDatasetVersionProcessingInfo"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/apiDatasetVersionMetrics"
            },
            "title": "Dataset version metrics"
          },
          "exportInfo": {
            "$ref": "#/components/schemas/apiDatasetVersionExportInfo"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "embedModelVersionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The embedding models to return embeddings for. If empty, no embeddings are returned."
          },
          "requestOrigin": {
            "$ref": "#/components/schemas/apiDatasetVersionRequestOrigin"
          }
        },
        "title": "DatasetVersion"
      },
      "apiDatasetVersionExport": {
        "type": "object",
        "properties": {
          "format": {
            "$ref": "#/components/schemas/apiDatasetVersionExportFormat"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "url": {
            "type": "string",
            "description": "url is the URL from where the dataset version export can be downloaded."
          },
          "size": {
            "type": "string",
            "format": "uint64",
            "description": "size is the size of the dataset version export in number of bytes."
          },
          "includeEmbeddings": {
            "type": "boolean",
            "description": "whether to include embeddings in the export or not."
          }
        },
        "description": "DatasetVersionExport contains metadata for a single dataset version export."
      },
      "apiDatasetVersionExportFormat": {
        "type": "string",
        "enum": [
          "DATASET_VERSION_EXPORT_FORMAT_NOT_SET",
          "CLARIFAI_DATA_PROTOBUF",
          "CLARIFAI_DATA_JSON",
          "COCO"
        ],
        "default": "DATASET_VERSION_EXPORT_FORMAT_NOT_SET",
        "description": " - CLARIFAI_DATA_PROTOBUF: CLARIFAI_DATA_PROTOBUF is the proprietary Clarifai API Data format. It\nis a ZIP-archive containing batches of serialized InputBatch protobuf messages.\n\nNote that only the \"id\" and \"data\" fields of exported inputs are set.\n - CLARIFAI_DATA_JSON: CLARIFAI_DATA_JSON is the proprietary Clarifai API Data format in JSON. It\nis a ZIP-archive containing batches of serialized InputBatch JSON messages.\n\nNote that only the \"id\" and \"data\" fields of exported inputs are set.\n - COCO: COCO is the data format used by Common Objects in Context. It is a\nZIP-archive containing JSON files with the dataset version annotations.\nSee https://cocodataset.org/#format-data."
      },
      "apiDatasetVersionExportInfo": {
        "type": "object",
        "properties": {
          "clarifaiDataProtobuf": {
            "$ref": "#/components/schemas/apiDatasetVersionExport"
          },
          "clarifaiDataJson": {
            "$ref": "#/components/schemas/apiDatasetVersionExport"
          },
          "coco": {
            "$ref": "#/components/schemas/apiDatasetVersionExport"
          }
        },
        "description": "DatasetVersionExportInfo contains information about all exports of a dataset version.\n\nIf the dataset version has not been exported in a format, then the DatasetVersionExport\nfield for that format is empty instead of having a \"not exported\" status."
      },
      "apiDatasetVersionMetrics": {
        "type": "object",
        "properties": {
          "inputsCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of inputs"
          },
          "unlabeledInputsCount": {
            "type": "string",
            "format": "uint64",
            "description": "Number of unlabeled inputs\nAn input is considered unlabeled if it there are no annotations with positive labels for that input."
          },
          "inputsWithMetadataCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of inputs that have metadata"
          },
          "inputsWithGeoCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of inputs that have geo information"
          },
          "regionsCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of regions"
          },
          "regionLocationMatrix": {
            "$ref": "#/components/schemas/MatrixUint64"
          },
          "boundingBoxesCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of bounding boxes"
          },
          "polygonsCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of polygons"
          },
          "pointsCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of points"
          },
          "masksCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of masks"
          },
          "regionInputsCount": {
            "type": "string",
            "format": "uint64",
            "description": "Number of inputs that have regions attached\nNote that this is not a recursive count: if an input contains frames that contains regions, then the region_frames_count is increased, but region_inputs_count is not increased."
          },
          "regionFramesCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of frames that have regions attached"
          },
          "framesCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of frames"
          },
          "frameInputsCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of inputs that have frames attached"
          },
          "embeddingsCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of embeddings"
          },
          "positiveInputTagsCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of positive tags added at input-level"
          },
          "positiveRegionTagsCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of positive tags added at region-level"
          },
          "positiveFrameTagsCount": {
            "type": "string",
            "format": "uint64",
            "title": "Number of positive tags added at frame-level"
          }
        }
      },
      "apiDatasetVersionMetricsGroup": {
        "type": "object",
        "properties": {
          "parentPath": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/apiDatasetVersionMetricsGroupType"
          },
          "value": {},
          "metrics": {
            "$ref": "#/components/schemas/apiDatasetVersionMetrics"
          }
        }
      },
      "apiDatasetVersionMetricsGroupType": {
        "type": "string",
        "enum": [
          "DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET",
          "INPUT_TYPE",
          "CONCEPT_ID",
          "CONCEPTS_COUNT",
          "BOUNDING_BOXES_COUNT",
          "POLYGONS_COUNT",
          "POINTS_COUNT",
          "MASKS_COUNT",
          "PIXELS_COUNT",
          "ASPECT_RATIO"
        ],
        "default": "DATASET_VERSION_METRICS_GROUP_TYPE_NOT_SET",
        "description": " - INPUT_TYPE: Group data examples by input type.\nExamples: images, videos, text, audio.\n - CONCEPT_ID: Group data examples by concept ID.\nExamples: inputs with cat concept, inputs with dog concept.\n - CONCEPTS_COUNT: Group data examples by concepts count.\nExamples: inputs with 20 concepts, inputs with 21 concepts.\n - BOUNDING_BOXES_COUNT: Group data examples by bounding boxes count.\nExamples: inputs with 20 bounding boxes, inputs with 21 bounding boxes.\n - POLYGONS_COUNT: Group data examples by polygons count.\nExamples: inputs with 20 polygons, inputs with 21 polygons.\n - POINTS_COUNT: Group data examples by points count.\nExamples: inputs with 20 points, inputs with 21 points.\n - MASKS_COUNT: Group data examples by masks count.\nExamples: inputs with 20 masks, inputs with 21 masks.\n - PIXELS_COUNT: Group data examples by pixels count.\nIn order to reduce the number of groups, we use bins.\nExamples for bin size = 400: inputs with [200000, 200400) pixels, inputs with [200400, 200800) pixels.\n - ASPECT_RATIO: Group data examples by aspect ratio.\nIn order to reduce the number of groups, we use bins.\nExamples for bin size = 0.1: inputs with [0.5, 0.6) aspect ratio, inputs with [0.6, 0.7) aspect ratio."
      },
      "apiDatasetVersionProcessingInfo": {
        "type": "object",
        "properties": {
          "frameInterpolationInfo": {
            "$ref": "#/components/schemas/apiFrameInterpolationInfo"
          }
        },
        "description": "DatasetVersionProcessingInfo contains information about processing applied\nto a dataset version."
      },
      "apiDatasetVersionRequestOrigin": {
        "type": "string",
        "enum": [
          "DATASET_VERSION_REQUEST_ORIGIN_NOT_SET",
          "MANUAL",
          "TRAINING",
          "EVAL_GROUND_TRUTH",
          "EVAL_PREDICTIONS"
        ],
        "default": "DATASET_VERSION_REQUEST_ORIGIN_NOT_SET"
      },
      "apiDeleteAnnotationFiltersRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "annotationFilterIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Specify which filters to delete."
          }
        },
        "description": "Request to delete several annotation filters by list of ids."
      },
      "apiDeleteAnnotationsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Delete annotations with IDs"
          },
          "inputIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Delete annotations for these Input IDs\nNote that 'ids' are optional but if the are provided the number and order in\n'ids' and 'input_ids' should match\nIf you do not specifiy 'ids' all the annotations for 'input_ids' are deleted\nHowever you need to specify at least one value for 'input_ids'\ni.e. this API does not support deleting all annotations"
          }
        },
        "description": "Request to delete several things by the list of ids."
      },
      "apiDeleteBulkOperationRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "List of bulk operation ids to be deleted"
          }
        },
        "description": "Request to delete the terminated bulk operations by ID\nOnly operations in terminated state can be deleted."
      },
      "apiDeleteCollectorsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deleteAll": {
            "type": "boolean"
          }
        },
        "description": "Request to delete several things by the list of ids."
      },
      "apiDeleteConcepts": {
        "type": "object",
        "properties": {
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConcept"
            }
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "apiDeleteDatasetsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "datasetIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request to delete several datasets by list of ids."
      },
      "apiDeleteFromDataset": {
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string"
          }
        }
      },
      "apiDeleteGeo": {
        "type": "object"
      },
      "apiDeleteInputsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request to delete several things by the list of ids."
      },
      "apiDeleteLabelOrdersRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request to delete a list of label orders."
      },
      "apiDeleteMetadata": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          }
        }
      },
      "apiDeleteModelsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deleteAll": {
            "type": "boolean"
          }
        },
        "description": "Request to delete several things by the list of ids."
      },
      "apiDeleteTasksRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Request to delete a list of tasks."
      },
      "apiDeleteUploadsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "Stops or deletes multipart upload"
      },
      "apiDeleteWorkflowsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deleteAll": {
            "type": "boolean"
          }
        },
        "description": "Request to delete several things by the list of ids."
      },
      "apiDeployment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "An id for this configured deployment."
          },
          "userId": {
            "type": "string",
            "description": "The user who owns the deployment. These live in the user/org account."
          },
          "autoscaleConfig": {
            "$ref": "#/components/schemas/apiAutoscaleConfig"
          },
          "nodepools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiNodepool"
            },
            "title": "You can configure different autoscaling per nodepool(s).\nThese nodepools have to be also owned by the same user_id/org as this deployment.\nIf there is more than one nodepool we use the model's ComputeInfo to match\nwith what the nodepool provides to decide which one can handle it combined with the\nNodepoolRank below. Note: even within a single nodepool if it is heterogeneous then\nwe need a way to rank scheduling choices when we don't know how to decide (like a model\nsupports"
          },
          "workflow": {
            "$ref": "#/components/schemas/apiWorkflow"
          },
          "schedulingChoice": {
            "$ref": "#/components/schemas/DeploymentSchedulingChoice"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          }
        },
        "description": "A deployment allows you to configure how runners for a particular type of resource will\nscale up and down. These are unique per user_id, nodepool and model so for differnet nodepools\nyou can scale differently."
      },
      "apiDetailConceptCount": {
        "type": "object",
        "properties": {
          "processed": {
            "$ref": "#/components/schemas/apiConceptTypeCount"
          },
          "toProcess": {
            "$ref": "#/components/schemas/apiConceptTypeCount"
          },
          "errors": {
            "$ref": "#/components/schemas/apiConceptTypeCount"
          },
          "processing": {
            "$ref": "#/components/schemas/apiConceptTypeCount"
          }
        },
        "title": "DetailConceptCount"
      },
      "apiEmailAddress": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          }
        },
        "title": "EmailAddress"
      },
      "apiEmbedding": {
        "type": "object",
        "properties": {
          "vector": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "numDimensions": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "Embedding"
      },
      "apiEndpointDeps": {
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string",
            "title": "The fully qualified endpoint to"
          },
          "dependingScopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other scopes that are required."
          }
        },
        "title": "EndpointDeps"
      },
      "apiEvalInfo": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "description": "To control the evaluation process.\nAllow a list of parameters."
          }
        }
      },
      "apiEvalMetrics": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "userId": {
            "type": "string",
            "title": "user id that owns this evaluation"
          },
          "appId": {
            "type": "string",
            "title": "app id that owns this evaluation"
          },
          "id": {
            "type": "string",
            "title": "Id of this evaluation"
          },
          "groundTruthDataset": {
            "$ref": "#/components/schemas/apiDataset"
          },
          "predictionsDataset": {
            "$ref": "#/components/schemas/apiDataset"
          },
          "summary": {
            "$ref": "#/components/schemas/apiMetricsSummary"
          },
          "confusionMatrix": {
            "$ref": "#/components/schemas/apiConfusionMatrix"
          },
          "cooccurrenceMatrix": {
            "$ref": "#/components/schemas/apiCooccurrenceMatrix"
          },
          "labelCounts": {
            "$ref": "#/components/schemas/apiLabelDistribution"
          },
          "binaryMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiBinaryMetrics"
            }
          },
          "testSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiEvalTestSetEntry"
            }
          },
          "metricsByArea": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiBinaryMetrics"
            }
          },
          "metricsByClass": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiBinaryMetrics"
            }
          },
          "trackerMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTrackerMetrics"
            }
          },
          "evalInfo": {
            "$ref": "#/components/schemas/apiEvalInfo"
          },
          "extendedMetrics": {
            "$ref": "#/components/schemas/apiExtendedMetrics"
          }
        },
        "title": "EvalMetrics"
      },
      "apiEvalTestSetEntry": {
        "type": "object",
        "properties": {
          "predictedConcepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConcept"
            }
          },
          "groundTruthConcepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConcept"
            },
            "title": "All the ground truth concepts will be show on the top level"
          }
        },
        "title": "EvalTestSetEntry"
      },
      "apiEvaluationType": {
        "type": "string",
        "enum": [
          "Undefined",
          "Classification",
          "Detection",
          "Segmentation",
          "Clustering",
          "Tracker",
          "Generation"
        ],
        "default": "Undefined",
        "title": "- Classification: default"
      },
      "apiExtendedMetrics": {
        "type": "object",
        "properties": {
          "userMetrics": {
            "type": "object"
          }
        }
      },
      "apiFieldsValue": {
        "type": "object",
        "properties": {
          "confusionMatrix": {
            "type": "boolean"
          },
          "cooccurrenceMatrix": {
            "type": "boolean"
          },
          "labelCounts": {
            "type": "boolean"
          },
          "binaryMetrics": {
            "type": "boolean"
          },
          "testSet": {
            "type": "boolean"
          },
          "metricsByArea": {
            "type": "boolean"
          },
          "metricsByClass": {
            "type": "boolean"
          }
        },
        "title": "FieldsValue"
      },
      "apiFilter": {
        "type": "object",
        "properties": {
          "negate": {
            "type": "boolean",
            "title": "If True then this will flip the meaning of this part of the\nquery. This allow for queries such as dog AND ! metadata=={\"blah\":\"value\"}"
          },
          "lastUpdatedTimeRange": {
            "$ref": "#/components/schemas/apiTimeRange"
          }
        },
        "title": "Filter"
      },
      "apiFrame": {
        "type": "object",
        "properties": {
          "frameInfo": {
            "$ref": "#/components/schemas/apiFrameInfo"
          },
          "id": {
            "type": "string",
            "description": "An ID for the frame."
          }
        },
        "description": "A Frame of time-series Data such as a Video."
      },
      "apiFrameInfo": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int64",
            "title": "Deprecated. Use Time instead.\nThe index of the frame, informational and optional.\nDepends on the sampling rate used during processing\nMay be 0 for interpolated frames that are generated for brief time (training) or if new frame is manually added"
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "description": "time in the video in milliseconds. This is independent of the sampling rates used during\nprocessing."
          }
        },
        "description": "The information of the location of the Frame."
      },
      "apiFrameInterpolationInfo": {
        "type": "object",
        "properties": {
          "sampleMs": {
            "type": "integer",
            "format": "int64",
            "description": "sample_ms is the sampling rate at which frame annotations are interpolated.\nIf sample_ms is zero, then the dataset default_processing_info value is used.\nIf the dataset default is zero or not set, then the input frame prediction\nsampling rate is used."
          }
        },
        "description": "FrameInterpolationInfo contains information about frame annotations\ninterpolated from other video annotations, such as image object-detection\nregions generated from video object-tracking regions."
      },
      "apiFullTag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Display name of the tag. Ex. \"English\""
          },
          "id": {
            "type": "string",
            "title": "Id value for referencing. Ex. \"en\""
          }
        }
      },
      "apiGeo": {
        "type": "object",
        "properties": {
          "geoPoint": {
            "$ref": "#/components/schemas/apiGeoPoint"
          },
          "geoLimit": {
            "$ref": "#/components/schemas/apiGeoLimit"
          },
          "geoBox": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiGeoBoxedPoint"
            },
            "title": "NOTE: inconsistency: should have been geo_boxed_points"
          }
        },
        "title": "Geo"
      },
      "apiGeoBoxedPoint": {
        "type": "object",
        "properties": {
          "geoPoint": {
            "$ref": "#/components/schemas/apiGeoPoint"
          }
        },
        "title": "GeoBoxedPoint"
      },
      "apiGeoLimit": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "float"
          }
        },
        "title": "GeoLimit"
      },
      "apiGeoPoint": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "format": "float"
          },
          "latitude": {
            "type": "number",
            "format": "float"
          }
        },
        "title": "GeoPoint"
      },
      "apiGetResourceCountsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "datasets": {
            "type": "string",
            "format": "int64"
          },
          "models": {
            "type": "string",
            "format": "int64"
          },
          "workflows": {
            "type": "string",
            "format": "int64"
          },
          "modules": {
            "type": "string",
            "format": "int64"
          },
          "inputs": {
            "type": "string",
            "format": "int64"
          }
        },
        "title": "ResourceCountResponse"
      },
      "apiGetVideoManifestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "manifestUrl": {
            "type": "string",
            "title": "MPEG-dash manifest as data-URI, base64-encoded\nCan be empty if status is FAILED\nCan be fallback manifest if status is MIXED_STATUS"
          }
        }
      },
      "apiHit": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "format": "float",
            "description": "This is the score for the ranked Hit results of the search query. This score is a number\nbetween 0.0 and 1.0 as it represents a confidence in the search Hit. For example, if you search\nfor \"car\" and get a close matching Hit, the score should be close to 1.0. If you get a score\nof close to 0.0 that means it's very disimilar to your query, in this case NOT a \"car\". There\nis a special intermediate score of 0.5 that means that the Hit is not really correlated with\nyour search query (ie. not similar or dissimlar to the query) which is a common occurrence\nwhen using negate queries.\nNote: some queries that are just filtering down your app of inputs may just return a score of\n1.0 for all Hits."
          },
          "userId": {
            "type": "string",
            "description": "The customer-facing id of the user who owns the app the asset came from."
          },
          "appId": {
            "type": "string",
            "description": "The cfid of the app the asset came from."
          }
        },
        "title": "Hit"
      },
      "apiHitCount": {
        "type": "object",
        "properties": {
          "estimatedTotal": {
            "type": "string",
            "format": "uint64",
            "description": "The estimated total number of hits for the search query, not just the current page."
          }
        }
      },
      "apiHostedURL": {
        "type": "object",
        "properties": {
          "prefix": {
            "type": "string",
            "description": "Prefix of the URL of every hosted image."
          },
          "suffix": {
            "type": "string",
            "description": "Suffix of an image stored in different sizes."
          },
          "sizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The sizes field lists which images of the different sizes are hosted in our storage. The URL\nof each hosted image can be obtained by joining the prefix, one of the sizes and suffix."
          },
          "crossorigin": {
            "type": "string",
            "title": "The crossorigin property of html media tag\nFor Secure Data Hosting this needs to be set to 'use-credentials'"
          }
        },
        "title": "HostedURL"
      },
      "apiIdUpdateSource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "old id"
          },
          "newId": {
            "type": "string",
            "title": "new id"
          }
        }
      },
      "apiImage": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "This is a URL to a publicly accessible image file. The platform will download this file server\nside and then process."
          },
          "base64": {
            "type": "string",
            "format": "byte",
            "description": "The base64 field is using image file bytes directly in the request.\nNOTE: if you're sending a json request, then this MUST be base64 encoded before sending (hence\nthe name here).\nWhen using our grpc clients, you DO NOT need to base64 encode\nit yourself since the clients know how to do this for you automatically and will avoid the\nbase64 encoding if they send a binary request."
          },
          "allowDuplicateUrl": {
            "type": "boolean"
          },
          "hosted": {
            "$ref": "#/components/schemas/apiHostedURL"
          },
          "imageInfo": {
            "$ref": "#/components/schemas/apiImageInfo"
          }
        },
        "title": "Image"
      },
      "apiImageInfo": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32",
            "title": "width"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "title": "height"
          },
          "format": {
            "type": "string",
            "title": "image format"
          },
          "colorMode": {
            "type": "string",
            "title": "image color mode"
          }
        }
      },
      "apiImportInfo": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "description": "Used to configure model imports from third-party toolkits."
          }
        }
      },
      "apiInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "The ID for the input"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the input was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the input was modified."
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "datasetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of dataset IDs that this input is part of\nCurrently, this field is ONLY used to\n* search inputs part of dataset(s), e.g. in `PostSearches`, `PostInputsSearches` and `PostAnnotationsSearches` endpoints, and\n* to add inputs to dataset(s) in `PostInputs` endpoint.\nNote that this field is ignored for other endpoints, e.g. `GetInput`, `ListInputs` and `PatchInputs`."
          }
        },
        "title": "Input"
      },
      "apiInputCount": {
        "type": "object",
        "properties": {
          "processed": {
            "type": "integer",
            "format": "int64"
          },
          "toProcess": {
            "type": "integer",
            "format": "int64"
          },
          "errors": {
            "type": "integer",
            "format": "int64"
          },
          "processing": {
            "type": "integer",
            "format": "int64"
          },
          "reindexed": {
            "type": "integer",
            "format": "int64"
          },
          "toReindex": {
            "type": "integer",
            "format": "int64"
          },
          "reindexErrors": {
            "type": "integer",
            "format": "int64"
          },
          "reindexing": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "NOTE: inconsistency: this is weird mix of plural and singular words."
      },
      "apiInputIDConflictResolution": {
        "type": "string",
        "enum": [
          "INPUT_ID_CONFLICT_RESOLUTION_NOT_SET",
          "SKIP",
          "SUFFIX"
        ],
        "default": "INPUT_ID_CONFLICT_RESOLUTION_NOT_SET",
        "description": " - INPUT_ID_CONFLICT_RESOLUTION_NOT_SET: Defaults to SKIP\n - SKIP: Mark duplicate inputs as error and skip processing them.\n - SUFFIX: Add a suffix to inputs with conflicting IDs. Attempts numeric suffixes \"-1\" to \"-9\" and then a randomized suffix. Identical ID's in the same request are still treated as errors."
      },
      "apiInputIDs": {
        "type": "object",
        "properties": {
          "inputIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "apiInputInfo": {
        "type": "object",
        "properties": {
          "fieldsMap": {
            "type": "object",
            "description": "Map from the api.Data field names to the underlying model graph's inputs. When using a\nPretrainedModelConfig the values in this map need to match the Triton config.pbtxt input names."
          },
          "params": {
            "type": "object",
            "description": "To control the inputs to the given model we allow a list of parameters\ndefined for each ModelType as a Struct (JSON object) here. During training or inference, the\nsettings contained within are sent to the training processor to alter the training process."
          }
        },
        "title": "InputInfo"
      },
      "apiInputsAddJob": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id of the job"
          },
          "callBackUrl": {
            "type": "string",
            "description": "If call back url is set, we will send a Post request to this endpoint with job status."
          },
          "appPat": {
            "type": "string",
            "title": "Personal Access Token to the application to which inputs are added"
          },
          "progress": {
            "$ref": "#/components/schemas/apiInputsAddJobProgress"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the job was created.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Most recent time when the job was updated.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "extractionJobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiInputsExtractionJob"
            },
            "title": "Sub-jobs that extract inputs from the cloud and/or archives"
          },
          "uploads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiUpload"
            },
            "title": "Archive uploads"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          }
        }
      },
      "apiInputsAddJobProgress": {
        "type": "object",
        "properties": {
          "pendingCount": {
            "type": "string",
            "format": "uint64"
          },
          "inProgressCount": {
            "type": "string",
            "format": "uint64"
          },
          "successCount": {
            "type": "string",
            "format": "uint64"
          },
          "failedCount": {
            "type": "string",
            "format": "uint64"
          }
        }
      },
      "apiInputsDataSource": {
        "type": "object",
        "properties": {
          "inputsAddJobId": {
            "type": "string",
            "description": "Collect statistics about created inputs in job with given ID.\nOn Post call:\n* If job ID is empty, then job is automatically created with random ID.\n* If job ID is non-empty, then a new job will be created with given ID."
          },
          "url": {
            "$ref": "#/components/schemas/apiDataSourceURL"
          },
          "inputIdConflictResolution": {
            "$ref": "#/components/schemas/apiInputIDConflictResolution"
          }
        }
      },
      "apiInputsExtractionJob": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "id": {
            "type": "string",
            "title": "ID of extraction job"
          },
          "url": {
            "type": "string",
            "title": "Url of archive or bucket"
          },
          "progress": {
            "$ref": "#/components/schemas/apiInputsExtractionJobProgress"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the extraction job was started.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Most recent time when the extraction job was updated.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "inputIdConflictResolution": {
            "$ref": "#/components/schemas/apiInputIDConflictResolution"
          }
        }
      },
      "apiInputsExtractionJobProgress": {
        "type": "object",
        "properties": {
          "audioInputsCount": {
            "type": "string",
            "format": "uint64"
          },
          "imageInputsCount": {
            "type": "string",
            "format": "uint64"
          },
          "videoInputsCount": {
            "type": "string",
            "format": "uint64"
          },
          "textInputsCount": {
            "type": "string",
            "format": "uint64"
          },
          "pendingArchivesCount": {
            "type": "string",
            "format": "uint64"
          },
          "inProgressArchivesCount": {
            "type": "string",
            "format": "uint64"
          },
          "completedArchivesCount": {
            "type": "string",
            "format": "uint64"
          },
          "failedArchivesCount": {
            "type": "string",
            "format": "uint64"
          }
        }
      },
      "apiInputsUpload": {
        "type": "object",
        "properties": {
          "inputsAddJobId": {
            "type": "string",
            "description": "Collect statistics about created inputs in job with given ID.\n* If job ID is empty, then job is automatically created with random ID.\n* If job ID is non-empty, then a new job will be created with given ID."
          },
          "appPat": {
            "type": "string",
            "title": "Personal Access Token to the application to which inputs are added"
          },
          "upload": {
            "$ref": "#/components/schemas/apiUpload"
          },
          "inputIdConflictResolution": {
            "$ref": "#/components/schemas/apiInputIDConflictResolution"
          }
        }
      },
      "apiInstalledModuleVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique id for this install. This will be used in the browser url."
          },
          "moduleVersion": {
            "$ref": "#/components/schemas/apiModuleVersion"
          },
          "appId": {
            "type": "string",
            "description": "The app_id the ModuleVersion is installed into (not necessary where the ModuleVersion was\ncreated). This doesn't have to be provided in requests to install, but will be returned in\nresponses."
          },
          "userId": {
            "type": "string",
            "description": "The user that the app belongs to where the ModuleVersion is installed into (not necessary where\nthe ModuleVersion was created). This doesn't have to be provided in requests to install, but\nwill be returned in responses."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the install was created."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the install was last modified."
          },
          "deployUrl": {
            "type": "string",
            "description": "The URL of where this app module version is deployed.\nIf you provide this deploy_url when creating the install then it will\nbe treated as a pre-deployed module. You can only use a pre-deployed module\nin when installing to an app_id that you own as the creator of the module.\nIf you want to install someone elses module or to rely on Clarifai deploying\nyour module for you, leave deploy_url empty when creating the install.\nIf it is left empty, then deployment will occur when this module version is\ninstalled into an app using the git_commit_url of the ModuleVersion."
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "keyId": {
            "type": "string",
            "description": "The key ID to use for making requests to the API for this module.\nThis key is associated to this installed module version by PostInstalledModuleVersionsKey\nrequest. The key is associated with the CALLER not the App Owner where this module is installed\nnor the author of the module. This allows the module to act on behalf of the caller at all\ntimes so we get proper permissions the caller has (such as if they are stranger, teammate or\ncollaborator). This key should be a personal access token to enable modules to work across apps\nand have necessary abilities beyond what app-specific keys offer."
          }
        }
      },
      "apiInstanceType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "description": "Short description of instance type."
          },
          "computeInfo": {
            "$ref": "#/components/schemas/apiComputeInfo"
          }
        },
        "description": "The instance types that will be available in this pool of nodes.\nClarifai offers multiple different choices that combine cpu cores, memory and accelerator."
      },
      "apiKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of this key, it is used for authorization."
          },
          "type": {
            "type": "string",
            "title": "The type of key, it can be api_key or personal_access_token, the default value is api_key"
          },
          "description": {
            "type": "string",
            "title": "The description"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "The low-level scopes this key has"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "The endpoint-level scopes this key has"
          },
          "apps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiApp"
            },
            "description": "The apps that this key give you access to, it is empty if this key is personal_access_token\nAPI key can only give you access to a single app."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the key was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "title": "When does the key expires, the key won't expire if this is empty"
          },
          "authorizedIdpIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "list of idp ids at which key is currently authorized"
          }
        },
        "title": "Key"
      },
      "apiKeypointEdge": {
        "type": "object",
        "properties": {
          "k1": {
            "type": "integer",
            "format": "int64"
          },
          "k2": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "apiKeypointInfo": {
        "type": "object",
        "properties": {
          "keypointNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Names of the keypoints"
          },
          "skeleton": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiKeypointEdge"
            },
            "description": "Defines the connections between keypoint_names. Each value represents the index in keypoint_names."
          }
        }
      },
      "apiKnowledgeGraph": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID of the knowledge graph"
          },
          "name": {
            "type": "string",
            "title": "Name of the knowledge graph"
          },
          "description": {
            "type": "string",
            "title": "Human readable description of the knowledge graph"
          },
          "examplesAppId": {
            "type": "string",
            "title": "The app that contains the images that correspond to the concepts in the knowledge graph"
          },
          "sampledExamplesAppId": {
            "type": "string",
            "title": "The app that contains the sample images that we want to show the customer for the concepts in the knowledge graph"
          }
        },
        "title": "A Knowledge Graph is a logical subsets of edges in the overall Concept Graph"
      },
      "apiLOPQEvalResult": {
        "type": "object",
        "properties": {
          "k": {
            "type": "integer",
            "format": "int32",
            "description": "Rank k for which all metrics are reported."
          },
          "recallVsBruteForce": {
            "type": "number",
            "format": "float",
            "description": "Recall @ k assuming the brute force search is the ground truth."
          },
          "kendallTauVsBruteForce": {
            "type": "number",
            "format": "float",
            "description": "Kendall's tau correlation @ k assuming the brute force search is the ground truth."
          },
          "mostFrequentCodePercent": {
            "type": "number",
            "format": "float",
            "description": "The percentage of the most frequent code in the indexed part of evaluation data."
          },
          "lopqNdcg": {
            "type": "number",
            "format": "float",
            "description": "To compute the relevance score between two images we consider two cases:\n1) Only one label for each image\nAn image is relevant to an image query iff they are labeled the same (score 1), and\nnot relevant otherwise (score 0)\n2) Multiple labels for each image\nHere an image relevancy with respect to a single image query is measured by f-beta score\nassuming the query image list of labels as ground truth and comparing them with that of\nthe search result. These labels can come from image annotations or if substitute_annotation_misses\nis set, predictions of base classifier where any prediction with prob < prob_threshold are\ndiscarded. To quantify the relevancy score of a single search result we opt to compute precision\nand recall @ k for simplicity, and combine them with f-beta score to obtain a single number.",
            "title": "Normalized Discounted Cumulative Gain (NDCG) @ k with a ground truth inferred from annotations\nand/or prediction for this evaluation LOPQ model.\nNDCG uses individual relevance scores of each returned image to evaluate the usefulness, or\ngain, of a document based on its position in the result list. The premise of DCG is that\nhighly relevant documents appearing lower in a search result list should be penalized as the\ngraded relevance value is reduced logarithmically proportional to the position of the result.\nSee: https://en.wikipedia.org/wiki/Information_retrieval#Discounted_cumulative_gain"
          },
          "bruteForceNdcg": {
            "type": "number",
            "format": "float",
            "description": "Brute force NDCG which gives a baseline to compare to and is a measure of how good\nthe embeddings are."
          }
        },
        "title": "LOPQEvalResult"
      },
      "apiLabelCount": {
        "type": "object",
        "properties": {
          "conceptName": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "concept": {
            "$ref": "#/components/schemas/apiConcept"
          }
        },
        "title": "LabelCount"
      },
      "apiLabelDistribution": {
        "type": "object",
        "properties": {
          "positiveLabelCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiLabelCount"
            }
          }
        },
        "title": "LabelDistribution"
      },
      "apiLabelOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id of the order"
          },
          "name": {
            "type": "string",
            "title": "name of the order"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "autoRelease": {
            "type": "boolean",
            "description": "if set to true, automatically release the labels once passed clarifai review."
          },
          "allowEmptyTag": {
            "type": "boolean",
            "description": "allow input without any tag."
          },
          "desiredFulfillTime": {
            "type": "string",
            "format": "date-time",
            "title": "User desired estimation when the task should be done"
          },
          "estimateFulfillTime": {
            "type": "string",
            "format": "date-time",
            "description": "Clarifai estimation when the task should be done ."
          },
          "task": {
            "$ref": "#/components/schemas/apiTask"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the label order was created.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Most recent time when the label order was updated.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          }
        },
        "title": "LabelOrder"
      },
      "apiLabelSubmitConfig": {
        "type": "object",
        "properties": {
          "taskAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTaskAssignment"
            }
          }
        }
      },
      "apiLayerShape": {
        "type": "object",
        "properties": {
          "dims": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "title": "Supported dimensions\nExample: [-1,4] is a 2-dimensional array with the first dimension of variablesize, but second dimension with a static size: [[1,2,3,4],[4,5,6,7],...]"
          },
          "maxDims": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Max dimension size, applicable to layers that can have flexible sizes."
          },
          "dataType": {
            "$ref": "#/components/schemas/apiDataType"
          },
          "description": {
            "type": "string",
            "title": "Description about the dimensions"
          }
        }
      },
      "apiListOpenSourceLicensesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "licenses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "ListOpenSourceLicensesResponse"
      },
      "apiMask": {
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/apiImage"
          }
        },
        "description": "Segmentation mask."
      },
      "apiMetricsSummary": {
        "type": "object",
        "properties": {
          "top1Accuracy": {
            "type": "number",
            "format": "float"
          },
          "top5Accuracy": {
            "type": "number",
            "format": "float"
          },
          "macroAvgRocAuc": {
            "type": "number",
            "format": "float"
          },
          "macroStdRocAuc": {
            "type": "number",
            "format": "float"
          },
          "macroAvgF1Score": {
            "type": "number",
            "format": "float"
          },
          "macroStdF1Score": {
            "type": "number",
            "format": "float"
          },
          "macroAvgPrecision": {
            "type": "number",
            "format": "float"
          },
          "macroAvgRecall": {
            "type": "number",
            "format": "float"
          },
          "meanAvgPrecisionIou50": {
            "type": "number",
            "format": "float"
          },
          "meanAvgPrecisionIouRange": {
            "type": "number",
            "format": "float"
          },
          "lopqMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiLOPQEvalResult"
            }
          }
        },
        "title": "MetricsSummary"
      },
      "apiModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The model's ID. Must be unique within a particular app and URL-friendly."
          },
          "name": {
            "type": "string",
            "description": "DEPRECATED: Please use the model id to name the model."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the model was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\n the following from the API:\n \"2017-04-11T21:50:50.223962Z\""
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "title": "When was the most recent model version created at"
          },
          "appId": {
            "type": "string",
            "description": "The app the model belongs to."
          },
          "outputInfo": {
            "$ref": "#/components/schemas/apiOutputInfo"
          },
          "modelVersion": {
            "$ref": "#/components/schemas/apiModelVersion"
          },
          "displayName": {
            "type": "string",
            "description": "DEPRECATED: Please use the model id to name the model."
          },
          "userId": {
            "type": "string",
            "description": "The user id that the model belongs to."
          },
          "defaultEvalInfo": {
            "$ref": "#/components/schemas/apiEvalInfo"
          },
          "modelTypeId": {
            "type": "string",
            "description": "The ModelType.Id that is used for this model. This is used for all versions and you cannot\nchange model_type_id between versions of the same model."
          },
          "task": {
            "type": "string",
            "title": "The task the model was trained to do"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "description": {
            "type": "string",
            "title": "Short description about this model"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "presets": {
            "type": "object"
          },
          "notes": {
            "type": "string",
            "description": "Notes for the model\nThis field should be used for in-depth notes and supports up to 64Kbs."
          },
          "toolkits": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tags from toolkits category"
          },
          "useCases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tags from use_cases category"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags from languages category."
          },
          "languagesFull": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiFullTag"
            },
            "description": "Tags from languages category with names, only used in responses."
          },
          "checkConsents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isStarred": {
            "type": "boolean",
            "title": "Is starred by the requesting user (only showed on get/list requests)\nPlease use PostModelStars/DeleteModelStars endpoints to star/unstar a model"
          },
          "starCount": {
            "type": "integer",
            "format": "int32",
            "title": "How many users have starred the model (only showed on get/list requests)\nComputed value, not editable"
          },
          "workflowRecommended": {
            "type": "boolean",
            "title": "Whether it's recommended that this model is used within a workflow"
          },
          "bookmarkOrigin": {
            "$ref": "#/components/schemas/apiBookmarkOrigin"
          },
          "image": {
            "$ref": "#/components/schemas/apiImage"
          }
        },
        "description": "This is the Model object which represents a created model in the platform.\nEach model has a particular type denoted by the model_type_id.\nWhen creating a Model with PostModels the following happens:\n - if the ModelType is trainable, then a new ModelVersion is created that is\n   - UNTRAINED status by default\n   - TRAINED status if a ModelVersion was included with PretrainedModelConfig in PostModels\n - if the ModelType is not trainable, then a new ModelVersion is created with TRAINED status.\nTo modify config settings like OutputInfo for the Model you an use PatchModels. This will\nalso create a new ModelVersion, potentially UNTRAINED following the same rules as above.\nThe fields that are patchable include Model.name, Model.display_name and Model.output_info\n(except the Model.output_info.type and Model.output_info.type_ext)."
      },
      "apiModelLayerInfo": {
        "type": "object",
        "properties": {
          "dataFieldName": {
            "type": "string",
            "title": "The api.Data field this layer will be parsed into"
          },
          "shapes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiLayerShape"
            },
            "description": "Description of the expected shape. Can support multiple support layer shapes."
          },
          "description": {
            "type": "string",
            "title": "Brief description about the layer if needed"
          },
          "requiresLabelFilename": {
            "type": "boolean",
            "title": "Whether this layer should have a label_filename specified and provided"
          }
        }
      },
      "apiModelPredictConfig": {
        "type": "object"
      },
      "apiModelQuery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name ofthe field. This supports wilcard queries like \"gen*\" to match \"general\" as an example."
          },
          "modelTypeId": {
            "type": "string",
            "description": "Filter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's\nsupported."
          }
        },
        "title": "ModelQuery"
      },
      "apiModelReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id of the reference"
          },
          "modelId": {
            "type": "string",
            "description": "The id of the model this Model reference is tied to."
          },
          "url": {
            "type": "string",
            "title": "address of resource"
          },
          "name": {
            "type": "string",
            "title": "name of link"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          }
        },
        "description": "A link to a html/markdown/text file that stores reference material tied to a model."
      },
      "apiModelType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for this model type."
          },
          "title": {
            "type": "string",
            "description": "A display title for this model."
          },
          "description": {
            "type": "string",
            "description": "Description of this model type."
          },
          "inputFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of input fields that this model expects as inputs.\nUsed to validate that request input data has the expected fields."
          },
          "outputFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of output fields that this model accepts."
          },
          "trainable": {
            "type": "boolean",
            "description": "Is this model trainable in our platform."
          },
          "creatable": {
            "type": "boolean",
            "description": "Is this model creatable. We have some pre-trained model types that users cannot create yet in\nmodel mode."
          },
          "internalOnly": {
            "type": "boolean",
            "description": "Is this model type only for internal users at this time."
          },
          "modelTypeFields": {
            "type": "array",
            "description": "The remaining fields are definitions of the configurable fields that exist.",
            "items": {}
          },
          "requiresSequentialFrames": {
            "type": "boolean",
            "description": "For sequence models we need to know when processing that they require temporal time frames\nin sequential order. This will be true for model types like trackers as an example."
          },
          "expectedInputLayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModelLayerInfo"
            },
            "description": "Expected input layers of an uploaded model."
          },
          "expectedOutputLayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModelLayerInfo"
            },
            "title": "Expected output layers of an uploaded model"
          },
          "evaluationType": {
            "$ref": "#/components/schemas/apiEvaluationType"
          }
        },
        "description": "ModelType is a definition of a set of models that generally have the same input and output fields.\nThis is used to understand more about the possible models in our platform."
      },
      "apiModelTypeEnumOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique value of the enum option."
          },
          "aliases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModelTypeEnumOptionAlias"
            },
            "title": "List of other ID values that are equivalent with this ID.\nThis allows the user to choose this option by multiple IDs.\nExample: if enum is \"Phone Number Prefix\", you could add an option that is selectable by two values:\n1. ID: \"Estonia\"\n2. Alias: 37"
          },
          "description": {
            "type": "string",
            "description": "Optional description for this enum option."
          },
          "modelTypeFields": {
            "type": "array",
            "description": "These are additional fields that are specific to this enum choice. This allows\nus to use enums to control configuration settings as well.",
            "items": {}
          },
          "internalOnly": {
            "type": "boolean",
            "description": "If this enum option should be internal only."
          },
          "recommended": {
            "type": "boolean",
            "description": "Whether this is the recommended enum option. Set to `true` when there\nare multiple options, and one is shown to be better than the others."
          }
        },
        "title": "ModelTypeEnumOption"
      },
      "apiModelTypeEnumOptionAlias": {
        "type": "object",
        "properties": {
          "idInt": {
            "type": "string",
            "format": "int64",
            "description": "Integer alias for id."
          },
          "wildcardString": {
            "type": "string",
            "description": "String that can contain wild cards and the regex needs to match."
          }
        }
      },
      "apiModelTypeField": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The path where the value of the field will be stored in the model version object.\nExample:\n\"output_info.data\" would be the Data message in the OutputInfo message.\n\"output_info.output_config.language\" is in the OutputConfig message within OutputInfo\n\"input_info.params\" is in the params struct within InputInfo.\n\"output_info.params\" is in the params struct within OutputInfo.\n\"train_info.params\" is in the params struct within TrainInfo.\nand so on."
          },
          "fieldType": {
            "$ref": "#/components/schemas/ModelTypeFieldModelTypeFieldType"
          },
          "defaultValue": {
            "description": "A default value. We use the Value field because we want to have structured data (just like\ngoogle.protobuf.Struct but this is just a single value)."
          },
          "description": {
            "type": "string",
            "description": "Description for this field."
          },
          "placeholder": {
            "type": "string",
            "description": "Placeholder text for the UI element."
          },
          "modelTypeEnumOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModelTypeEnumOption"
            },
            "description": "List of options of the ENUM type and potentially additional fields they bring with them."
          },
          "internalOnly": {
            "type": "boolean",
            "description": "If this field should appear for internal users only."
          },
          "required": {
            "type": "boolean",
            "description": "If this field is a required field. If True then during validation you won't be able to create\na model of this type with providing a value for this field. When False, the ModelType's\ndefault_value will be used for this field."
          },
          "modelTypeRangeInfo": {
            "$ref": "#/components/schemas/apiModelTypeRangeInfo"
          }
        },
        "description": "ModelTypeField stores a field value of a configurable type."
      },
      "apiModelTypeRangeInfo": {
        "type": "object",
        "properties": {
          "min": {
            "type": "number",
            "format": "float",
            "description": "The start of the range as a float."
          },
          "max": {
            "type": "number",
            "format": "float",
            "description": "The end of the range as a float."
          },
          "step": {
            "type": "number",
            "format": "float",
            "description": "An optional step size for the range. If provided then only values at that step size will be\nrounded to. For example if step is 0.02 then 0.0245 will round to 0.02."
          }
        },
        "title": "ModelTypeRangeInfo"
      },
      "apiModelVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the version was created."
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "activeConceptCount": {
            "type": "integer",
            "format": "int64"
          },
          "metrics": {
            "$ref": "#/components/schemas/apiEvalMetrics"
          },
          "totalInputCount": {
            "type": "integer",
            "format": "int64",
            "title": "number of inputs in the model version"
          },
          "pretrainedModelConfig": {
            "$ref": "#/components/schemas/apiPretrainedModelConfig"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When training of this version was completed."
          },
          "description": {
            "type": "string",
            "title": "Description about this version"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "appId": {
            "type": "string",
            "description": "The app the model version belongs to."
          },
          "userId": {
            "type": "string",
            "description": "The user the model version belongs to."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "title": "When this model version was last modified"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "license": {
            "type": "string"
          },
          "outputInfo": {
            "$ref": "#/components/schemas/apiOutputInfo"
          },
          "inputInfo": {
            "$ref": "#/components/schemas/apiInputInfo"
          },
          "trainInfo": {
            "$ref": "#/components/schemas/apiTrainInfo"
          },
          "importInfo": {
            "$ref": "#/components/schemas/apiImportInfo"
          },
          "trainLog": {
            "type": "string",
            "title": "Contains the training logs if available"
          },
          "inferenceComputeInfo": {
            "$ref": "#/components/schemas/apiComputeInfo"
          },
          "buildInfo": {
            "$ref": "#/components/schemas/apiBuildInfo"
          }
        },
        "title": "ModelVersion"
      },
      "apiModelVersionExport": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "url": {
            "type": "string",
            "description": "url is the URL from where the model version export can be downloaded."
          },
          "size": {
            "type": "string",
            "format": "int64",
            "title": "size of model file"
          }
        },
        "description": "ModelVersionExport contains metadata for a single Model version export."
      },
      "apiModelVersionInputExample": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "user unique id"
          },
          "modelId": {
            "type": "string",
            "title": "external id of model"
          },
          "modelVersionId": {
            "type": "string",
            "title": "external id of model version"
          },
          "name": {
            "type": "string",
            "title": "name of link for display"
          },
          "description": {
            "type": "string",
            "title": "description of link contents"
          }
        },
        "title": "ModelVersionInputExample"
      },
      "apiModelVersionPublishRequest": {
        "type": "object",
        "properties": {
          "versionId": {
            "type": "string"
          }
        },
        "title": "ModelVersionPublishRequest"
      },
      "apiModelVersionUnpublishRequest": {
        "type": "object",
        "properties": {
          "versionId": {
            "type": "string"
          }
        },
        "title": "ModelVersionUnpublishRequest"
      },
      "apiModule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for this app module."
          },
          "description": {
            "type": "string",
            "description": "A short description for this app module to be used in grids of modules."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the app module was created."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the app module was last modified."
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "metadata": {
            "type": "object",
            "description": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto\nThis is an optional arg."
          },
          "userId": {
            "type": "string",
            "description": "The creator of the app module."
          },
          "appId": {
            "type": "string",
            "description": "The app_id this module was created in."
          },
          "moduleVersion": {
            "$ref": "#/components/schemas/apiModuleVersion"
          },
          "isStarred": {
            "type": "boolean",
            "title": "Is starred by the requesting user (only showed on get/list requests)\nPlease use PostModuleStars/DeleteModuleStars endpoints to star/unstar a module"
          },
          "starCount": {
            "type": "integer",
            "format": "int32",
            "title": "How many users have starred the module (only showed on get/list requests)\nComputed value, not editable"
          },
          "bookmarkOrigin": {
            "$ref": "#/components/schemas/apiBookmarkOrigin"
          },
          "image": {
            "$ref": "#/components/schemas/apiImage"
          }
        },
        "description": "An app module that a user created in our app module marketplace."
      },
      "apiModuleVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A name for this version like 1_0, 1_1_0, etc."
          },
          "moduleId": {
            "type": "string",
            "description": "The module this version belongs to."
          },
          "appId": {
            "type": "string",
            "description": "The app_id this module version belongs to."
          },
          "userId": {
            "type": "string",
            "description": "The user_id this module version belongs to."
          },
          "description": {
            "type": "string",
            "description": "A short description for this version."
          },
          "notes": {
            "type": "string",
            "description": "A markdown formatted string to detailed description of the app module.\nThis is within each version so that it can be change version to version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the app module version was created."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the app module version was last modified."
          },
          "gitCommitUrl": {
            "type": "string",
            "title": "The code repo of the streamlit app.\nIf you are still developing your Module you should create a ModuleVersion\nwith an empty git_commit_url and then create an InstalledModuleVersion\nwith a pre-deployed deploy_url (such as localhost or streamlit cloud).\nOnce you are ready to create a production, create a new ModuleVersion with\nthe ready git url to a specific commit that you would like to be reviewed by the\nClarifai team for approval within our community. You cannot publish a ModuleVersion\nis reviewed and approved. Please only provide the git_commit_url when you're\nready for a review. This url needs to include a specific commit, for example:\nhttps://github.com/user/repo/commit/767ff9c08ba3429c8e7b8825da148555"
          },
          "moduleNav": {
            "$ref": "#/components/schemas/ModuleVersionModuleNav"
          },
          "approved": {
            "type": "boolean",
            "description": "A boolean to mark if Clarifai has approved this app version.\nThis cannot be set in the request to True."
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "metadata": {
            "type": "object",
            "description": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto\nThis is an optional arg."
          }
        },
        "description": "A specific version of an app module that is available for assigning to apps."
      },
      "apiMultiAnnotationFilterResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "annotationFilters": {
            "type": "array",
            "items": {}
          }
        },
        "title": "MultiAnnotationFilterResponse"
      },
      "apiMultiAnnotationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "annotations": {
            "type": "array",
            "items": {}
          }
        },
        "title": "MultiAnnotationResponse"
      },
      "apiMultiAnnotationSearchMetricsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "annotationSearchMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiAnnotationSearchMetrics"
            }
          }
        },
        "title": "MultiAnnotationSearchMetricsResponse"
      },
      "apiMultiAppDuplicationsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "appDuplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiAppDuplication"
            }
          }
        },
        "title": "MultiAppDuplicationsResponse"
      },
      "apiMultiAppResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "apps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiApp"
            }
          }
        },
        "title": "MultiAppResponse"
      },
      "apiMultiBulkOperationsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "bulkOperation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiBulkOperation"
            }
          }
        },
        "title": "MultiBulkOperationsResponse"
      },
      "apiMultiCollaborationsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "collaborations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCollaboration"
            }
          }
        },
        "title": "MultiCollaborationsResponse"
      },
      "apiMultiCollaboratorsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "collaborators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCollaborator"
            }
          },
          "appOwner": {
            "$ref": "#/components/schemas/apiUser"
          }
        },
        "title": "MultiCollaboratorsResponse"
      },
      "apiMultiCollectorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "collectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCollector"
            }
          }
        },
        "description": "Response with multiple Collectors."
      },
      "apiMultiComputeClusterResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "computeClusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiComputeCluster"
            }
          }
        }
      },
      "apiMultiConceptCountResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "conceptCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConceptCount"
            },
            "description": "The returned concept counts."
          }
        },
        "title": "MultiConceptCountResponse"
      },
      "apiMultiConceptLanguageResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "conceptLanguages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConceptLanguage"
            }
          }
        },
        "title": "MultiConceptLanguageResponse"
      },
      "apiMultiConceptRelationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "conceptRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConceptRelation"
            },
            "description": "The returned concept relations."
          }
        },
        "title": "MultiConceptRelationResponse"
      },
      "apiMultiConceptResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConcept"
            },
            "description": "The returned concepts."
          }
        },
        "title": "MultiConceptResponse"
      },
      "apiMultiDatasetInputResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "datasetInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiDatasetInput"
            }
          },
          "bulkOperation": {
            "$ref": "#/components/schemas/apiBulkOperation"
          }
        },
        "title": "MultiDatasetInputResponse"
      },
      "apiMultiDatasetResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "datasets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiDataset"
            }
          }
        },
        "title": "MultiDatasetResponse"
      },
      "apiMultiDatasetVersionExportResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "exports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiDatasetVersionExport"
            }
          }
        }
      },
      "apiMultiDatasetVersionMetricsGroupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "datasetVersionMetricsGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiDatasetVersionMetricsGroup"
            }
          }
        }
      },
      "apiMultiDatasetVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "datasetVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiDatasetVersion"
            }
          }
        }
      },
      "apiMultiEvalMetricsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "evalMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiEvalMetrics"
            }
          }
        }
      },
      "apiMultiInputAnnotationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiHit"
            }
          }
        },
        "title": "MultiInputAnnotationResponse"
      },
      "apiMultiInputResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "inputs": {
            "type": "array",
            "items": {}
          },
          "inputsAddJob": {
            "$ref": "#/components/schemas/apiInputsAddJob"
          }
        },
        "title": "MultiInputResponse"
      },
      "apiMultiInputsAddJobResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "inputsAddJobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiInputsAddJob"
            }
          }
        },
        "title": "MultiInputsAddJobResponse"
      },
      "apiMultiInputsExtractionJobResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "inputsExtractionJobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiInputsExtractionJob"
            }
          }
        }
      },
      "apiMultiInstalledModuleVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "installedModuleVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiInstalledModuleVersion"
            }
          }
        },
        "title": "MultiInstalledModuleVersionResponse"
      },
      "apiMultiKeyResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiKey"
            }
          }
        },
        "title": "MultiKeyResponse"
      },
      "apiMultiKnowledgeGraphResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "knowledgeGraphs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiKnowledgeGraph"
            },
            "description": "The returned knowledge graphs."
          }
        },
        "title": "MultiKnowledgeGraphResponse"
      },
      "apiMultiLabelOrderResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "labelOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiLabelOrder"
            }
          }
        },
        "description": "Response with multiple label order."
      },
      "apiMultiModelCheckConsentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "checkConsents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "apiMultiModelLanguageResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "apiMultiModelReferenceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "modelReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModelReference"
            }
          }
        },
        "title": "MultiModelReferenceResponse"
      },
      "apiMultiModelResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "models": {
            "type": "array",
            "items": {}
          }
        },
        "title": "MultiModelResponse"
      },
      "apiMultiModelToolkitResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "toolkits": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "apiMultiModelTypeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "modelTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModelType"
            },
            "description": "List of ModelType objects."
          },
          "tritonCondaEnvsInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTritonCondaEnvInfo"
            },
            "title": "Triton model envs that can be used for model upload"
          }
        },
        "title": "MultiModelTypeResponse"
      },
      "apiMultiModelUseCaseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "usecases": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "apiMultiModelVersionInputExampleResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "modelVersionInputExamples": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModelVersionInputExample"
            },
            "title": "model input example messages"
          }
        },
        "title": "MultiModelVersionInputExampleResponse"
      },
      "apiMultiModelVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "modelVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModelVersion"
            }
          }
        },
        "title": "MultiModelVersionResponse"
      },
      "apiMultiModuleResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModule"
            }
          }
        },
        "title": "MultiModuleResponse"
      },
      "apiMultiModuleVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "moduleVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiModuleVersion"
            }
          }
        },
        "title": "MultiModuleVersionResponse"
      },
      "apiMultiNodepoolResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "nodepools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiNodepool"
            }
          }
        }
      },
      "apiMultiOutputResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiOutput"
            },
            "description": "For each input processed during model prediction we create one output."
          }
        },
        "title": "MultiOutputResponse"
      },
      "apiMultiRunnerItemOutputResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "runnerItemOutputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiRunnerItemOutput"
            }
          }
        }
      },
      "apiMultiRunnerItemResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "runnerItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiRunnerItem"
            }
          }
        },
        "title": "MultiRunnerItemResponse"
      },
      "apiMultiRunnerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "runners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiRunner"
            }
          }
        },
        "title": "MultiRunnerResponse"
      },
      "apiMultiScopeDepsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "scopeDeps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiScopeDeps"
            },
            "description": "scopes is a list of low-level scopes and their dependencies."
          },
          "endpointDeps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiEndpointDeps"
            },
            "title": "endpoint_scopes is a listof all the publicly available endponts which can be\nused as scopes as well. A call to each of those endpoint depends on a subset\nof the above \"scopes\""
          }
        },
        "title": "MultiScopeDepsResponse"
      },
      "apiMultiScopeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "This is a list of the scopes that your key has."
          },
          "app": {
            "$ref": "#/components/schemas/apiApp"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "This is a list of endpoint permissions that your key has."
          },
          "userFeatureFlags": {
            "type": "string"
          }
        },
        "title": "MultiScopeResponse"
      },
      "apiMultiScopeRootResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "This is a list of the scopes that your key has."
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "This is a list of endpoint permissions that your key has."
          },
          "userFeatureFlags": {
            "type": "string"
          }
        },
        "title": "MultiScopeRootResponse"
      },
      "apiMultiScopeUserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "This is a list of the scopes that your key has."
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "This is a list of endpoint permissions that your key has."
          },
          "userFeatureFlags": {
            "type": "string"
          }
        },
        "title": "MultiScopeUserResponse"
      },
      "apiMultiSearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "id": {
            "type": "string",
            "title": "A unique id which uniquely identifies a search"
          },
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiHit"
            },
            "description": "The list of search result Hits."
          },
          "query": {
            "$ref": "#/components/schemas/apiQuery"
          },
          "searches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiSearch"
            },
            "description": "The original Searches provided in the request."
          },
          "hitCounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiHitCount"
            },
            "description": "The counts of hits for each search, in the same order as searches.\nOnly returned if the request set only_count."
          }
        },
        "title": "MultiSearchResponse"
      },
      "apiMultiStatValueAggregateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "statValueAggregateResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiStatValueAggregateResult"
            },
            "description": "The aggregate results for each query passedin."
          }
        },
        "title": "MultiStatValueAggregateResponse"
      },
      "apiMultiStatValueResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "statValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiStatValue"
            },
            "description": "The returned stats values."
          }
        },
        "title": "MultiStatValueResponse"
      },
      "apiMultiStatusCodeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apistatusStatus"
            }
          }
        },
        "title": "MultiStatusCodeResponse"
      },
      "apiMultiTaskAssignmentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "taskAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTaskAssignment"
            }
          }
        }
      },
      "apiMultiTaskResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTask"
            }
          }
        },
        "description": "Response with multiple Tasks."
      },
      "apiMultiTrainingTimeEstimateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "trainingTimeEstimates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "Estimated training time in seconds"
      },
      "apiMultiTrendingMetricsViewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTrendingMetric"
            }
          }
        },
        "title": "MultiTrendingMetricsViewResponse"
      },
      "apiMultiUploadResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "uploads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiUpload"
            }
          }
        }
      },
      "apiMultiWorkerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "workers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorker"
            }
          }
        },
        "title": "MultiWorkerResponse"
      },
      "apiMultiWorkflowResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorkflow"
            }
          }
        },
        "title": "MultiWorkflowResponse"
      },
      "apiMultiWorkflowVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "workflowVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorkflowVersion"
            }
          }
        },
        "title": "MultiWorkflowVersionResponse"
      },
      "apiNodeCapacityType": {
        "type": "object",
        "properties": {
          "capacityTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NodeCapacityTypeCapacityType"
            }
          }
        },
        "description": "Type of nodes that are ok for instances in this pool.\nIf both spot and on-demand are provided then the runner will be able to run on either\nwith a preference for spot until they are not available."
      },
      "apiNodeInput": {
        "type": "object",
        "properties": {
          "nodeId": {
            "type": "string",
            "description": "The id to a connected WorkflowNode which will be used as an input for current WorkflowNode."
          }
        },
        "description": "NodeInput represents inputs to a node of the graph."
      },
      "apiNodepool": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user defined ID of the nodepool."
          },
          "description": {
            "type": "string",
            "description": "Short description about the nodepool."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the nodepool was created."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the nodepool was last modified."
          },
          "userId": {
            "type": "string",
            "description": "The user/org that this nodepool belongs to."
          },
          "computeCluster": {
            "$ref": "#/components/schemas/apiComputeCluster"
          },
          "nodeCapacityType": {
            "$ref": "#/components/schemas/apiNodeCapacityType"
          },
          "instanceTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiInstanceType"
            }
          },
          "minInstances": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum number of instances in this nodepool. This allows the nodepool to scale down to this\namount. A nodepool needs a minimum of 1 instance."
          },
          "maxInstances": {
            "type": "integer",
            "format": "int64",
            "description": "An upper limit on the number of instances in this nodepool. This allows the nodepool to scale\nup to this amount."
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          }
        },
        "description": "A nodepool is a set of nodes dedicated for a given user's compute needs.\nThis compute will typically be consumed by runners and in the future other objects\nlike UI modules may be assigned to node pools."
      },
      "apiOperation": {
        "type": "object",
        "properties": {
          "addConcepts": {
            "$ref": "#/components/schemas/apiAddConcepts"
          },
          "deleteConcepts": {
            "$ref": "#/components/schemas/apiDeleteConcepts"
          },
          "addMetadata": {
            "$ref": "#/components/schemas/apiAddMetadata"
          },
          "deleteMetadata": {
            "$ref": "#/components/schemas/apiDeleteMetadata"
          },
          "overwriteGeo": {
            "$ref": "#/components/schemas/apiOverwriteGeo"
          },
          "deleteGeo": {
            "$ref": "#/components/schemas/apiDeleteGeo"
          },
          "deleteFromDataset": {
            "$ref": "#/components/schemas/apiDeleteFromDataset"
          },
          "addToDataset": {
            "$ref": "#/components/schemas/apiAddToDataset"
          },
          "splitIntoDatasets": {
            "$ref": "#/components/schemas/apiSplitIntoDatasets"
          }
        }
      },
      "apiOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "One of these outputs per Input"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the object was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          }
        },
        "title": "Output"
      },
      "apiOutputConfig": {
        "type": "object",
        "properties": {
          "conceptsMutuallyExclusive": {
            "type": "boolean",
            "description": "For custom concept model training: whether the concept predictions must sum to 1."
          },
          "existingModelId": {
            "type": "string",
            "description": "DEPRECATED: For custom models, this is the base model to use for image embeddings.\nDefault is general model."
          },
          "language": {
            "type": "string",
            "description": "For concept model predictions: Overrides the default_language for the app in a predict call."
          },
          "hyperParameters": {
            "type": "string",
            "description": "DEPRECATED: Hyper-parameters for custom training.\nUse new hyper_params field instead."
          },
          "maxConcepts": {
            "type": "integer",
            "format": "int64",
            "description": "For concept model predictions:  Maximum number of concepts in result. Defaults to 0 which under\nthe hood will return default of 20. We do a server side default in order to control this\nfeature in the future."
          },
          "minValue": {
            "type": "number",
            "format": "float",
            "description": "For concept model predictions: Minimum value of concept's probability score in result.\nDefaults to 0.0 which means we won't do any thresholding as all probabilities will\nlikely be > 0.0."
          },
          "selectConcepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConcept"
            },
            "title": "For concept model predictions: Select concepts in result by name or by id"
          },
          "trainingTimeout": {
            "type": "integer",
            "format": "int64",
            "title": "For custom concept model training: Training timeout of the model (in seconds)"
          },
          "sampleMs": {
            "type": "integer",
            "format": "int64",
            "title": "For model predictions on video: Sample delay for video predicting (1 frame per N milliseconds)"
          },
          "hyperParams": {
            "type": "object",
            "title": "For custom model training: Hyperparameters for custom training"
          },
          "embedModelVersionId": {
            "type": "string",
            "description": "For custom model training: this is the base model version to use for image embeddings.\nThis has to be one of the embed models in the app workflow.\n\nUse input_info.base_embed_model instead."
          },
          "failOnMissingPositiveExamples": {
            "type": "boolean",
            "title": "For custom model training: Use this flag to fail on missing positive examples\nBy default we fill in the missing with random examples"
          },
          "modelMetadata": {
            "type": "object",
            "description": "For custom model training: This is any additional metadata as a JSON object that we want\nwant to persist in the model's output config. This is a useful quick way to set fields for\nintroducing fields for new model types so we don't have to add a new proto field and DB field\neach time. Please refer to the documentation or model implementation internally for more\ndetails on what fields are supported for which models.\nTODO(zeiler): remove this field after Portal is updated."
          }
        },
        "description": "OutputConfig is a collection of parameters controlling either inference or training settings for\nthe given Model. This message will be deprecated over time in favor or infer_params and\ntrain_params in OutputInfo which are cleaner and more extensible for many ModelTypes."
      },
      "apiOutputInfo": {
        "type": "object",
        "properties": {
          "outputConfig": {
            "$ref": "#/components/schemas/apiOutputConfig"
          },
          "message": {
            "type": "string",
            "description": "For returning where to look for the Output info if not returning it."
          },
          "fieldsMap": {
            "type": "object",
            "description": "Map from the api.Data field names to the underlying model graph's outputs. When using a\nPretrainedModelConfig the values in this map need to match the Triton config.pbtxt output names."
          },
          "params": {
            "type": "object",
            "description": "For predicting with the various ModelType's we accept a Struct (JSON object) worth of args\nthat the ModelTypeField defines. During inference, the settings contained within are sent\nto the model predictor to alter predictions from this Model."
          },
          "paramsSpecs": {
            "type": "array",
            "items": {}
          }
        },
        "description": "OutputInfo defines some of the settings for each model version that PatchModels can effect. These\nparameters control some of the training or inference operations that this model can do.\nAs the number of parameters continued to grow when we launched more ModelTypes we decided to move\nto using the OutputInfo.params field which is a Struct (or JSON object if you're using\nour JSON REST APIs). This allows each ModelType to define the set of fields, their default values\nand description of each field so that we can display those in Portal and make the creation of\nModel's very extensible. The OutputConfig object will eventually go away in favor of\ninfer_params struct."
      },
      "apiOverwriteGeo": {
        "type": "object",
        "properties": {
          "geo": {
            "$ref": "#/components/schemas/apiGeo"
          }
        }
      },
      "apiPagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int64",
            "description": "(optional URL parameter) The page number. Pagination is used to split the results into chunks. Defaults to 1."
          },
          "perPage": {
            "type": "integer",
            "format": "int64",
            "description": "(optional URL parameter) The number of results that will be contained in each page. Defaults to 128."
          }
        },
        "description": "Split the results into pages."
      },
      "apiPassword": {
        "type": "object",
        "properties": {
          "plaintext": {
            "type": "string",
            "title": "unencrypted password string"
          }
        },
        "title": "Password"
      },
      "apiPasswordViolations": {
        "type": "object",
        "properties": {
          "minimumLength": {
            "type": "boolean",
            "title": "when new password length is shorter than minimum length set"
          },
          "maximumLength": {
            "type": "boolean",
            "title": "when new password length is longer than maximum length set"
          },
          "upperCaseNeeded": {
            "type": "boolean",
            "title": "there is no upper case letter in the new password when there should be at least one"
          },
          "lowerCaseNeeded": {
            "type": "boolean",
            "title": "there is no lower case letter in the new password when there should be at least one"
          },
          "numericNeeded": {
            "type": "boolean",
            "title": "there is no numerics in the new password when there should be at least one"
          },
          "nonAlphanumericNeeded": {
            "type": "boolean",
            "title": "there is no special character in the new password when there should be at least one"
          },
          "passwordReuse": {
            "type": "boolean",
            "title": "when one of the N most recent old password is reused, N is specified by password_reuse_epoch in db.password_policies"
          },
          "excludeNames": {
            "type": "boolean",
            "title": "when either user's first, middle or last name is used in the new password"
          },
          "excludeEmail": {
            "type": "boolean",
            "title": "when first part of user's email (exact string or after removing special characters) is used in the new password"
          },
          "noConfusingLetters": {
            "type": "boolean",
            "title": "when there are confusing letters in the new password, such as o (first character of 'omega') vs 0 (zero)"
          },
          "noSimplePasswords": {
            "type": "boolean",
            "title": "when there are simple password patterns used, such as 12345678 or aaaaaaa1"
          },
          "noCommonVocabs": {
            "type": "boolean",
            "title": "when there are common vocabs from the common vocab list used"
          },
          "noOverlapWithOld": {
            "type": "boolean",
            "title": "when the current password is contained in the new password or vice versa"
          },
          "passwordLifespan": {
            "type": "boolean",
            "title": "when password has to be changed becauase it's too old"
          }
        },
        "title": "PasswordViolations"
      },
      "apiPatchAction": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "title": "The operation to perform on the patched metadata given a path\nFor now only operations 'overwrite', 'delete, and 'merge' is supported"
          },
          "mergeConflictResolution": {
            "type": "string",
            "description": "Option 'append' will simply create a list on conflicts. For example in above example\nthe final result would be\n{\n  \"tag\": [\n    {\n      \"id\": \"1\",\n      \"data\": 1\n    },\n    {\n      \"id\": \"2\",\n      \"data\": [2, 3]\n    }\n  ]\n}",
            "title": "If the action is 'merge' and there is a conflict, how to resolve it.\nThe options are\n'overwrite_by_id', 'remove_by_id', 'merge_by_id','overwrite', 'append' and 'do_nothing'\nNote that for conflict resolutions '*_by_id' to work on a list, the list should contain\nobjects with an 'id' field which will be used to uniquely identify each field. For example\nPatching existing json\n{\n  \"tag\": [\n    {\n      \"id\": \"1\",\n      \"data\": 1\n    },\n    {\n      \"id\": \"2\",\n      \"data\": 2\n    }\n  ]\n}\nwith op 'merge' and merge_conflict_resolution 'overwrite_by_id'\n{\n  \"tag\": [\n    {\n      \"id\": \"2\",\n      \"data\": 3\n    }\n  ]\n}\nwould produce\n{\n  \"tag\": [\n    {\n      \"id\": \"1\",\n      \"data\": 1\n    },\n    {\n      \"id\": \"2\",\n      \"data\": 3\n    }\n  ]\n}\nwhile with merge_conflict_resolution 'remove_by_id' it would produce\n{\n  \"tag\": [\n    {\n      \"id\": \"1\",\n      \"data\": 1\n    }\n  ]\n}"
          },
          "path": {
            "type": "string",
            "description": "Path for the change. For example 'tag[1].data' is a valid path in above example.\nDefault path is root level i.e. ''."
          }
        },
        "title": "PatchAction"
      },
      "apiPatchAnnotationFiltersRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "annotationFilters": {
            "type": "array",
            "description": "List of annotation filters that are requested to be updated.",
            "items": {}
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched objects\nFor now, only 'overwrite' action is supported"
          }
        },
        "description": "Request to patch several annotation filters."
      },
      "apiPatchAnnotationsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "annotations": {
            "type": "array",
            "items": {}
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
          },
          "deleteIfEmptyData": {
            "type": "boolean",
            "description": "If the request is a \"remove\" action and the annotation is left with empty data,\nthen setting delete_if_empty_data to true will delete the annotation,\nif possible (for example, will not delete an input-level annotation)."
          }
        },
        "title": "PatchAnnotationsRequest"
      },
      "apiPatchAnnotationsSearchesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "searches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiSearch"
            },
            "title": "The searches to be patched"
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched Search objects\nFor now only action 'overwrite' is supported"
          }
        }
      },
      "apiPatchAnnotationsStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "PatchAnnotationsStatusResponse"
      },
      "apiPatchCollectorsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "collectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCollector"
            }
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched objects\nOnly 'overwrite' is supported"
          }
        },
        "title": "PatchCollectorsRequest"
      },
      "apiPatchConceptsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConcept"
            },
            "description": "The concepts to patch."
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched objects\nFor now ony action 'overwrite' is supported"
          }
        },
        "title": "PatchConceptsRequest"
      },
      "apiPatchDatasetsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "datasets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiDataset"
            },
            "description": "List of datasets that are requested to be updated."
          },
          "action": {
            "type": "string",
            "description": "The action to perform on the patched objects\nSupported values: 'overwrite', 'merge', and 'remove'.\n\nNote that 'remove' can only be used to remove the dataset image by setting\n'image.url' in the request to the current value returned for that dataset."
          }
        },
        "description": "Request to patch several datasets."
      },
      "apiPatchInputsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "inputs": {
            "type": "array",
            "title": "List of inputs to patch.\nInputs are identified by id field.\nFor each input, the following fields are patchable:\n* data",
            "items": {}
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
          }
        },
        "title": "PatchInputsRequest"
      },
      "apiPatchInputsSearchesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "searches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiSearch"
            },
            "title": "The searches to be patched"
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched Search objects\nFor now only action 'overwrite' is supported"
          }
        }
      },
      "apiPatchLabelOrdersRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "labelOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiLabelOrder"
            }
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
          }
        },
        "description": "Request to patch a list of label orders."
      },
      "apiPatchModelsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "models": {
            "type": "array",
            "items": {}
          },
          "action": {
            "type": "string",
            "description": "Note that 'remove' can be used to remove the model image by setting\n'image.url' in the request to the current value returned for that model.\nThis cannot be used in a request that is patching other fields as well.",
            "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
          }
        },
        "title": "PatchModelsRequest"
      },
      "apiPatchSearchesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "searches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiSearch"
            },
            "title": "The searches to be patched"
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched Search objects\nFor now only action 'overwrite' is supported"
          }
        },
        "title": "PatchSearchesRequest"
      },
      "apiPatchTasksRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTask"
            }
          },
          "action": {
            "type": "string",
            "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
          }
        },
        "description": "Request to patch a list of tasks."
      },
      "apiPatchWorkflowsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorkflow"
            }
          },
          "action": {
            "type": "string",
            "description": "Note that 'remove' can be used to remove the workflow image by setting\n'image.url' in the request to the current value returned for that workflow.\nThis cannot be used in a request that is patching other fields as well.",
            "title": "The action to perform on the patched objects\nFor now actions 'merge', 'overwrite', and 'remove' are supported"
          }
        },
        "title": "PatchWorkflowsRequest"
      },
      "apiPoint": {
        "type": "object",
        "properties": {
          "row": {
            "type": "number",
            "format": "float",
            "description": "The row location of the point. This has a [0.0-1.0] range with 0.0 being top row and 1.0\nbeing the bottom row."
          },
          "col": {
            "type": "number",
            "format": "float",
            "description": "The column location of the point. This has a [0.0-1.0] range with 0.0 being left col and 1.0\nbeing the right col."
          },
          "z": {
            "type": "number",
            "format": "float",
            "description": "Depth if applicable for the point."
          },
          "visibility": {
            "$ref": "#/components/schemas/apiPointVisibility"
          }
        },
        "title": "Point"
      },
      "apiPointVisibility": {
        "type": "string",
        "enum": [
          "NOT_SET",
          "VISIBLE",
          "NOT_VISIBLE",
          "NOT_PRESENT"
        ],
        "default": "NOT_SET",
        "description": "- NOT_SET: Visibility of the point is not set\n - VISIBLE: Point is visible\n - NOT_VISIBLE: Point is occluded\n - NOT_PRESENT: Point is not in the image",
        "title": "Whether this point is visible or occluded"
      },
      "apiPolygon": {
        "type": "object",
        "properties": {
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiPoint"
            },
            "description": "A list of points connected together to form the polygon."
          }
        },
        "title": "Polygon"
      },
      "apiPostAnnotationFiltersRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "annotationFilters": {
            "type": "array",
            "description": "List of annotation filters that are requested to be added.",
            "items": {}
          }
        },
        "description": "Request to add one or more annotation filters."
      },
      "apiPostAnnotationSearchMetricsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "id": {
            "type": "string",
            "title": "A unique customer facing id to identify this eval request"
          },
          "groundTruth": {
            "$ref": "#/components/schemas/apiSearch"
          },
          "searchToEval": {
            "$ref": "#/components/schemas/apiSearch"
          },
          "evaluationType": {
            "$ref": "#/components/schemas/apiEvaluationType"
          }
        },
        "title": "PostAnnotationSearchMetricsRequest"
      },
      "apiPostAnnotationsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "annotations": {
            "type": "array",
            "items": {}
          }
        },
        "title": "PostAnnotationsRequest"
      },
      "apiPostAnnotationsSearchesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "searches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiSearch"
            },
            "title": "The searched to be executed or saved"
          },
          "pagination": {
            "$ref": "#/components/schemas/apiPagination"
          }
        },
        "title": "Execute a new annotation search and optionally save it\nannotation search over annotations using rank and filter proto"
      },
      "apiPostBulkOperationsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "bulkOperations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiBulkOperation"
            },
            "description": "List of bulk operation(s) to be performed e.g bulk update metadata or tags or labels etc."
          }
        },
        "description": "Request to perform bulk operations on a list of inputs based on input source."
      },
      "apiPostCollectorsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "collectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiCollector"
            }
          }
        },
        "description": "Request to create Collectors."
      },
      "apiPostConceptsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiConcept"
            },
            "description": "The concepts to add."
          }
        },
        "title": "PostConceptsRequest"
      },
      "apiPostConceptsSearchesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "conceptQuery": {
            "$ref": "#/components/schemas/apiConceptQuery"
          },
          "extraInfo": {
            "$ref": "#/components/schemas/apiConceptExtraInfoRequest"
          },
          "pagination": {
            "$ref": "#/components/schemas/apiPagination"
          }
        },
        "title": "PostConceptsSearchesRequest"
      },
      "apiPostDatasetsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "datasets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiDataset"
            },
            "description": "List of datasets that are requested to be added."
          }
        },
        "description": "Request to add one or more datasets."
      },
      "apiPostEvaluationsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "evalMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiEvalMetrics"
            },
            "description": "eval_info, id, model, and ground_truth_dataset will be used when creating the evaluation\nIf no dataset is provided, all app data that is annotated with concepts from the model will be used."
          }
        },
        "title": "Evaluate this model vesion"
      },
      "apiPostInputsDataSourcesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "dataSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiInputsDataSource"
            }
          },
          "callBackUrl": {
            "type": "string",
            "description": "If call back url is set, we will send a Post request to this endpoint with job status."
          },
          "appPat": {
            "type": "string",
            "title": "Personal Access Token to the application to which inputs are added"
          }
        },
        "description": "Initiates retrieval of inputs from cloud storage from a user provided data source.\nWill create and return an inputs-add-job for tracking progress.\nArchives will be extracted and their contents will be processed as inputs.\n\nThe cloud URL will be treated as a filter prefix. For example s3:/bucket/images_folder/abc will process\nfiles in the images_folder beginning with abc or in a subfolder beginning with abc.\nFor example:\nbucket/images_folder/abcImage.png\nbucket/images_folder/abc-1/Data.zip\n\nIf given URL is for a private bucket or file, then credentials should be provided to access the bucket.\nCredentials should include rights to list the objects in the bucket, except when pointed directly at a file archive,\nin which case it only requires rights to access that particular file."
      },
      "apiPostInputsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "inputs": {
            "type": "array",
            "title": "List of inputs to post.\nFor each input, the following fields are used:\n* id\n* data\n* dataset_ids",
            "items": {}
          },
          "inputsAddJobId": {
            "type": "string",
            "description": "Collect statistics about created inputs in job with given ID.\n* If job ID is empty, then job is not created.\n* If job ID is non-empty and doesn't already exist, then a new job will be created with given ID.\n* If job ID does already exist, then new inputs statistics are merged with previous inputs statistics."
          },
          "inputIdConflictResolution": {
            "$ref": "#/components/schemas/apiInputIDConflictResolution"
          }
        },
        "title": "PostInputsRequest"
      },
      "apiPostInputsSearchesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "searches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiSearch"
            },
            "title": "The searched to be executed or saved"
          },
          "pagination": {
            "$ref": "#/components/schemas/apiPagination"
          },
          "onlyCount": {
            "type": "boolean",
            "description": "If only_count is set, then the response will not contain hits,\nbut hit_counts instead."
          }
        },
        "title": "Execute a new input search and optionally save it"
      },
      "apiPostInputsUploadsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "inputsUploads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiInputsUpload"
            }
          }
        },
        "description": "Start uploading a file archive containing inputs.\nWill create and return an inputs-add-job for tracking progress.\n\nAssociated inputs-add-job contains an upload id which should be completed through `PutUploadContentParts` endpoint.\nCompleting the upload will automatically begin unpacking the archive and uploading the contents as inputs."
      },
      "apiPostKnowledgeGraphsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "knowledgeGraphs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiKnowledgeGraph"
            }
          }
        },
        "title": "POST new knowledge graphs"
      },
      "apiPostLabelOrdersRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "labelOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiLabelOrder"
            }
          }
        },
        "description": "Request to create label orders."
      },
      "apiPostModelOutputsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "modelId": {
            "type": "string"
          },
          "versionId": {
            "type": "string"
          },
          "inputs": {
            "type": "array",
            "items": {}
          },
          "runnerSelector": {
            "$ref": "#/components/schemas/apiRunnerSelector"
          }
        },
        "description": "//////////////////////////////////////////////////\nModel prediction related stuff needs inputs and produces outputs.\n//////////////////////////////////////////////////\nModel prediction."
      },
      "apiPostModelVersionsUploadConfig": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "modelId": {
            "type": "string",
            "title": "Model to create version for"
          },
          "modelVersion": {
            "$ref": "#/components/schemas/apiModelVersion"
          },
          "totalSize": {
            "type": "string",
            "format": "uint64",
            "title": "Number of bytes in the model files to be uploaded"
          },
          "isV3": {
            "type": "boolean",
            "title": "Whether the uploaded package will be a .tar.gz which contains a Dockerfile or the standard .zip"
          }
        }
      },
      "apiPostModelVersionsUploadRequest": {
        "type": "object",
        "properties": {
          "uploadConfig": {
            "$ref": "#/components/schemas/apiPostModelVersionsUploadConfig"
          },
          "contentPart": {
            "$ref": "#/components/schemas/apiUploadContentPart"
          }
        }
      },
      "apiPostModelVersionsUploadResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "bytesRemaining": {
            "type": "string",
            "format": "uint64"
          },
          "modelVersionId": {
            "type": "string",
            "title": "ID of the model version being uploaded"
          }
        }
      },
      "apiPostModelsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "models": {
            "type": "array",
            "description": "This allows you to create one or more model by posting it to the API.",
            "items": {}
          }
        },
        "title": "PostModelsRequest"
      },
      "apiPostModelsSearchesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "modelQuery": {
            "$ref": "#/components/schemas/apiModelQuery"
          },
          "pagination": {
            "$ref": "#/components/schemas/apiPagination"
          }
        },
        "description": "Search over the available models."
      },
      "apiPostRunnerItemOutputsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "nodepoolId": {
            "type": "string",
            "title": "The particular nodepool that runner belongs to"
          },
          "runnerId": {
            "type": "string",
            "description": "The particular runner that processed the work."
          },
          "runnerItemId": {
            "type": "string",
            "description": "The particular item of work processed."
          },
          "runnerItemOutputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiRunnerItemOutput"
            },
            "description": "This allows you to create one or more runner by posting it to the API."
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "runnerReplicaId": {
            "type": "string",
            "description": "A unique ID to represent the runner. This may be tied to an underlying compute instance\ninformation or just an UUID."
          }
        },
        "description": "PostRunnerItemOutputsRequest\nThis is the message that runners send to the API to communicate.\nAt the end of the request it will have the RunnerItemOutput filled in\nwith results of the workload the runner is processing. Other messages\nfrom the runner use this same proto to communicate over to the API\nand do handshakes."
      },
      "apiPostSearchesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "query": {
            "$ref": "#/components/schemas/apiQuery"
          },
          "searches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiSearch"
            },
            "title": "The searched to be executed or saved\nEventually the request level fields will be deprecated in favor of this object"
          },
          "pagination": {
            "$ref": "#/components/schemas/apiPagination"
          }
        },
        "title": "PostSearchesRequest"
      },
      "apiPostStatValuesAggregateRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "statValueAggregateQueries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiStatValueAggregateQuery"
            },
            "description": "Query to retrieve aggregate values."
          }
        },
        "title": "PostStatValuesAggregateRequest"
      },
      "apiPostStatValuesRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "statValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiStatValue"
            },
            "description": "The stats to post, can post more than one at a time."
          }
        },
        "title": "PostStatValuesRequest"
      },
      "apiPostTasksRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTask"
            }
          }
        },
        "description": "Request to create Tasks."
      },
      "apiPostUploadsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "uploads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiUpload"
            }
          }
        },
        "title": "Start a multipart upload"
      },
      "apiPostValidatePasswordRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "password": {
            "$ref": "#/components/schemas/apiPassword"
          }
        },
        "title": "PostValidatePasswordRequest"
      },
      "apiPostWorkflowResultsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "workflow": {
            "$ref": "#/components/schemas/apiWorkflow"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorkflowResult"
            },
            "description": "The resulting predictions of all models in the workflow."
          },
          "workflowState": {
            "$ref": "#/components/schemas/apiWorkflowState"
          }
        },
        "title": "PostWorkflowResultsResponse"
      },
      "apiPostWorkflowResultsSimilarityResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorkflowResultsSimilarity"
            }
          }
        },
        "title": "PostWorkflowResultsSimilarityResponse"
      },
      "apiPostWorkflowsRequest": {
        "type": "object",
        "properties": {
          "userAppId": {
            "$ref": "#/components/schemas/apiUserAppIDSet"
          },
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorkflow"
            }
          }
        },
        "title": "PostWorkflowsRequest"
      },
      "apiPrecisionRecallCurve": {
        "type": "object",
        "properties": {
          "recall": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "precision": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "thresholds": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "title": "PrecisionRecallCurve"
      },
      "apiPretrainedModelConfig": {
        "type": "object",
        "properties": {
          "inputFieldsMap": {
            "type": "object",
            "description": "This is the internal id of the pretrained model.\nMap from the api.Data field names to the Triton config.pbtxt input."
          },
          "outputFieldsMap": {
            "type": "object",
            "description": "Map from the api.Data field names to the Triton config.pbtxt output."
          },
          "modelZipUrl": {
            "type": "string",
            "description": "Whether to overwrite the model for the existing internal id",
            "title": "Url to a zipped up model in triton format with the following files and folders at the root:\n config.pbtxt\n version 1 folder that contains model files (onnx graph, torch script, python BE model, and etc.)"
          }
        },
        "title": "PretrainedModelConfig"
      },
      "apiProcessingInfo": {
        "type": "object",
        "properties": {
          "runnerMethodType": {
            "$ref": "#/components/schemas/apiRunnerMethodType"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          }
        },
        "title": "Processing info tells the runner how to process a RunnerItem"
      },
      "apiProgress": {
        "type": "object",
        "properties": {
          "processed": {
            "type": "integer",
            "format": "int64"
          },
          "lastProcessedId": {
            "type": "string"
          }
        }
      },
      "apiPutTaskAssignmentsRequestAction": {
        "type": "string",
        "enum": [
          "PUT_TASK_ASSIGNMENTS_REQUEST_ACTION_NOT_SET",
          "LABEL_START",
          "LABEL_SUBMIT",
          "REVIEW_START",
          "REVIEW_APPROVE",
          "REVIEW_REQUEST_CHANGES",
          "REVIEW_REJECT"
        ],
        "default": "PUT_TASK_ASSIGNMENTS_REQUEST_ACTION_NOT_SET",
        "title": "- LABEL_START: Create a list of task assignments for labeler => 10 inputs are assigned to the labeler.\nThis is a fully sync action.\nIf task assignments already exist, then return existing task assignments.\n - LABEL_SUBMIT: Submit task assignments => mark task assignment work as completed.\nThis is a partially sync action.\nSync: task assignments are updated as follows:\n* when review_strategy is NONE, then task assignment status is updated to SUCCESS.\n* when review strategy is CONSENSUS, then task assignment status is updated to AWAITING_CONSENSUS_REVIEW.\n* when review strategy is MANUAL, then task assignment status is updated to AWAITING_REVIEW.\nIf task assignments are already submitted, then no update is performed on them.\nAsync: annotations added for the same input as the task assignment are updated as follows:\n* when review_strategy is NONE, then annotation status is updated to SUCCESS.\n* when review strategy is CONSENSUS, then annotation status is updated to SUCCESS (if it reaches consensus) or AWAITING_REVIEW (if it does not reach consensus).\n* when review strategy is MANUAL, then annotation status is updated to AWAITING_REVIEW.\n - REVIEW_START: Return a list of task assignments for reviewer to review => 10 inputs are assigned to the reviewer.\nThis is a fully sync action.\nNOT idempotent:\n In the current implementation, we don't actually store the reviewer in the task assignment,\n as the task assignment still stays assigned to the labeler.\n Therefore, multiple calls to this endpoint may result in different set of task assignments to review.\n For now, this action is practically not idempotent.\n In the future, we could however store the reviewer in the task assignment and\n return existing task assignments already assigned to the reviewer => this will make this action idempotent.\n - REVIEW_APPROVE: Approve task assignments.\nThere are two types of configurations:\n* Batch approve: approve a list of task assignment IDs;\n* Bulk approve: approve all task assignments from a list of workers.\nThis is a partially sync action.\nSync: task assignments are updated to SUCCESS\nAsync: annotations added for the same input as the task assignment are updated to SUCCESS\n - REVIEW_REQUEST_CHANGES: Request changes for task assignments.\nThere are two types of configurations:\n* Batch request changes: request changes for a list of task assignment IDs;\n* Bulk request changes: request changes for all task assignments from a list of workers.\nThis is a partially sync action.\nSync: task assignments are updated to PENDING\nAsync: annotations added for the same input as the task assignment are updated to PENDING\n - REVIEW_REJECT: Reject task assignments.\nThere are two types of configurations:\n* Batch reject: reject a list of task assignment IDs;\n* Bulk reject: reject all task assignments from a list of workers.\nThis is a partially sync action.\nSync: task assignments are updated to REVIEW_DENIED\nAsync: annotations added for the same input as the task assignment are updated to REVIEW_DENIED"
      },
      "apiQuery": {
        "type": "object",
        "properties": {
          "ands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiAnd"
            },
            "description": "The query syntax is simply a list of And operatiosn that will be ANDed together to fetch\nresults which are returned to the user as Hit messages.\n\nDeprecated: Only used by the deprecated PostSearches endpoint. Use filters\nand ranks instead with PostInputsSearches or PostAnnotationsSearches."
          },
          "language": {
            "type": "string",
            "description": "This allows the query to override any default language the app was setup in when doing Concept\nbased searches. This currently only affects public Models Output searches when those public\nModels have translations for their Concepts."
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiFilter"
            },
            "title": "filters in this query\ne.q. only fetch annotations that have certain metadata"
          },
          "ranks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiRank"
            },
            "title": "rankings in this query\ne.g. visual search by a url"
          }
        },
        "description": "This is the search query used in /searches, model training requests, bulk data exports, etc."
      },
      "apiROC": {
        "type": "object",
        "properties": {
          "fpr": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "tpr": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "thresholds": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "fprPerImage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "fprPerObject": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "title": "ROC"
      },
      "apiRank": {
        "type": "object",
        "properties": {
          "negate": {
            "type": "boolean",
            "title": "If True then this will flip the meaning of this part of the\nquery. This allow for queries such as !dog"
          }
        },
        "title": "Rank"
      },
      "apiRegion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique id for the region."
          },
          "regionInfo": {
            "$ref": "#/components/schemas/apiRegionInfo"
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "This is the confidence score of the overall Region."
          },
          "trackId": {
            "type": "string",
            "description": "For tracking algorithsm and annotations we tie regions together with this track id."
          }
        },
        "description": "A region within the data."
      },
      "apiRegionInfo": {
        "type": "object",
        "properties": {
          "boundingBox": {
            "$ref": "#/components/schemas/apiBoundingBox"
          },
          "mask": {
            "$ref": "#/components/schemas/apiMask"
          },
          "polygon": {
            "$ref": "#/components/schemas/apiPolygon"
          },
          "point": {
            "$ref": "#/components/schemas/apiPoint"
          },
          "span": {
            "$ref": "#/components/schemas/apiSpan"
          },
          "token": {
            "$ref": "#/components/schemas/apiToken"
          },
          "keypointLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiPoint"
            },
            "description": "The locations of detected keypoints, which are to be used in conjunction with the detected concept's skeleton to connect the keypoint locations.\nThese will be in the same order as the respective keypoint_names inside the concept."
          }
        },
        "description": "The information of the location of the Region."
      },
      "apiReviewApproveConfig": {
        "type": "object",
        "properties": {
          "taskAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTaskAssignment"
            }
          },
          "workers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorker"
            }
          }
        }
      },
      "apiReviewRejectConfig": {
        "type": "object",
        "properties": {
          "taskAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTaskAssignment"
            }
          },
          "workers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorker"
            }
          }
        }
      },
      "apiReviewRequestChangesConfig": {
        "type": "object",
        "properties": {
          "taskAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTaskAssignment"
            }
          },
          "workers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorker"
            }
          }
        }
      },
      "apiRunner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for this runner.\nThis is a UUID since runners can be automatically orchestrated."
          },
          "description": {
            "type": "string",
            "description": "short description about the runner."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the runner was created."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the runner was last modified."
          },
          "metadata": {
            "type": "object",
            "description": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto\nThis is an optional arg."
          },
          "userId": {
            "type": "string",
            "description": "The owner of the runner. Runners belong to a user/org account."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Labels to match in order to find work."
          },
          "worker": {
            "$ref": "#/components/schemas/apiWorker"
          },
          "nodepool": {
            "$ref": "#/components/schemas/apiNodepool"
          },
          "computeInfo": {
            "$ref": "#/components/schemas/apiComputeInfo"
          },
          "numReplicas": {
            "type": "integer",
            "format": "int64",
            "description": "Number of replicas that this runner should have up.\nWe keep it separate from ComputeInfo which defines how many resources each replica needs."
          }
        },
        "title": "A worker for compute within a nodepool of instances.\nThis asks the API for work"
      },
      "apiRunnerItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A UUID hash for this work item."
          },
          "description": {
            "type": "string",
            "description": "A description of the work to be done in case needed for UIs."
          },
          "processingInfo": {
            "$ref": "#/components/schemas/apiProcessingInfo"
          },
          "postModelOutputsRequest": {
            "$ref": "#/components/schemas/apiPostModelOutputsRequest"
          }
        },
        "description": "This is a unit of work for a runner to process. This comes from the API\nin the MultiRunnerItemResponse and contains the user's requests\nto process."
      },
      "apiRunnerItemOutput": {
        "type": "object",
        "properties": {
          "multiOutputResponse": {
            "$ref": "#/components/schemas/apiMultiOutputResponse"
          }
        },
        "title": "This contains the response of the user's request once processing is done.\nThe runner should fill in the matching output to the RunnerItem.request\noneof field. This is sent to the API within PostRunnerItemOutputsRequest"
      },
      "apiRunnerMethodType": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "UNARY_UNARY",
          "UNARY_STREAMING",
          "STREAMING_UNARY",
          "STREAMING_STREAMING"
        ],
        "default": "UNKNOWN",
        "title": "- UNARY_UNARY: single request, single response. predict() in code\n - UNARY_STREAMING: single request, streamed response. generate() in code\n - STREAMING_UNARY: stream of requests, single response.\n - STREAMING_STREAMING: stream of requests, stream of responses. stream() in code"
      },
      "apiRunnerSelector": {
        "type": "object",
        "properties": {
          "nodepool": {
            "$ref": "#/components/schemas/apiNodepool"
          },
          "runner": {
            "$ref": "#/components/schemas/apiRunner"
          },
          "deployment": {
            "$ref": "#/components/schemas/apiDeployment"
          }
        },
        "description": "////////////////////////////////////////\nDon't need RunnerSelector if we're opening up endpoints for deployments.\n////////////////////////////////////////\nThe RunnerSelector is an optional field we can provide during runtime\nof model/workflow predictions to specify which particular runner we want to process the work.\nThis can optionally be used to select a particular nodepool and then within that nodepool\na particular runner."
      },
      "apiScopeDeps": {
        "type": "object",
        "properties": {
          "scope": {
            "type": "string",
            "title": "The scope"
          },
          "dependingScopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other scopes that are required."
          }
        },
        "title": "ScopeDeps"
      },
      "apiSearch": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/apiQuery"
          },
          "id": {
            "type": "string",
            "description": "Customer facing, external ID for search to be saved. Provided by the user, e.g. \"saved-search-1.\nIt is unique per application."
          },
          "applicationId": {
            "type": "string",
            "description": "Application that owns this saved search."
          },
          "name": {
            "type": "string",
            "description": "Human readable display name of the saved search."
          },
          "asOf": {
            "type": "string",
            "format": "date-time",
            "description": "\"As of\" timestamp, indicating a time in the past as of which we want to\nretrieve the annotations satisfying the query."
          },
          "gitHash": {
            "type": "string",
            "description": "Git hash of the code that ran the filter."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the saved search was created."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the saved search was updated."
          },
          "algorithm": {
            "type": "string",
            "title": "The search algorithm to be used.\nOptions are are 'nearest_neighbor', 'brute_force', and 'avg_concept_brute_force'\nThe last two perform a brute force search visual search instead of a more scalable distributed\nnearest neighbor search and should be used by advanced users only.\nIf not specified we default to nearest neighbor"
          },
          "save": {
            "type": "boolean",
            "title": "If true, save this search, and exit without executing the search.\nIf false execute the query"
          },
          "minValue": {
            "type": "number",
            "format": "float",
            "description": "Minimum value of confidence threshold score in result.\nDefaults to 0.0 which means we won't do any thresholding as all probabilities will\nlikely be > 0.0."
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "metric": {
            "$ref": "#/components/schemas/SearchMetric"
          }
        },
        "description": "This is the new Search object used in saved searches."
      },
      "apiSingleAnnotationFilterResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          }
        },
        "title": "SingleAnnotationFilterResponse"
      },
      "apiSingleAnnotationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          }
        },
        "title": "SingleAnnotationResponse"
      },
      "apiSingleAppDuplicationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "appDuplication": {
            "$ref": "#/components/schemas/apiAppDuplication"
          }
        },
        "title": "SingleAppDuplicationResponse"
      },
      "apiSingleAppResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "app": {
            "$ref": "#/components/schemas/apiApp"
          }
        },
        "title": "SingleAppResponse"
      },
      "apiSingleBulkOperationsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "bulkOperation": {
            "$ref": "#/components/schemas/apiBulkOperation"
          }
        },
        "title": "SingleBulkOperationsResponse"
      },
      "apiSingleCollectorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "collector": {
            "$ref": "#/components/schemas/apiCollector"
          }
        },
        "description": "Response with a single Collector."
      },
      "apiSingleComputeClusterResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "computeCluster": {
            "$ref": "#/components/schemas/apiComputeCluster"
          }
        }
      },
      "apiSingleConceptLanguageResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "conceptLanguage": {
            "$ref": "#/components/schemas/apiConceptLanguage"
          }
        },
        "title": "SingleConceptLanguageResponse"
      },
      "apiSingleConceptResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "concept": {
            "$ref": "#/components/schemas/apiConcept"
          }
        },
        "title": "SingleConceptResponse"
      },
      "apiSingleDatasetInputResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "datasetInput": {
            "$ref": "#/components/schemas/apiDatasetInput"
          }
        },
        "title": "SingleDatasetInputResponse"
      },
      "apiSingleDatasetResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "dataset": {
            "$ref": "#/components/schemas/apiDataset"
          }
        },
        "title": "SingleDatasetResponse"
      },
      "apiSingleDatasetVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "datasetVersion": {
            "$ref": "#/components/schemas/apiDatasetVersion"
          }
        }
      },
      "apiSingleEvalMetricsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "evalMetrics": {
            "$ref": "#/components/schemas/apiEvalMetrics"
          }
        }
      },
      "apiSingleInputCountResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "counts": {
            "$ref": "#/components/schemas/apiInputCount"
          }
        },
        "title": "SingleInputCountResponse"
      },
      "apiSingleInputResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          }
        },
        "title": "SingleInputResponse"
      },
      "apiSingleInputsAddJobResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "inputsAddJob": {
            "$ref": "#/components/schemas/apiInputsAddJob"
          }
        },
        "title": "SingleInputsAddJobResponse"
      },
      "apiSingleInputsExtractionJobResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "inputsExtractionJob": {
            "$ref": "#/components/schemas/apiInputsExtractionJob"
          }
        }
      },
      "apiSingleInstalledModuleVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "installedModuleVersion": {
            "$ref": "#/components/schemas/apiInstalledModuleVersion"
          }
        },
        "title": "SingleInstalledModuleVersionResponse"
      },
      "apiSingleKeyResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "key": {
            "$ref": "#/components/schemas/apiKey"
          }
        },
        "title": "SingleKeyResponse"
      },
      "apiSingleLabelOrderResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "labelOrder": {
            "$ref": "#/components/schemas/apiLabelOrder"
          }
        },
        "description": "Response with a label order."
      },
      "apiSingleModelResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          }
        },
        "title": "SingleModelResponse"
      },
      "apiSingleModelTypeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "modelType": {
            "$ref": "#/components/schemas/apiModelType"
          }
        },
        "title": "SingleModelTypeResponse"
      },
      "apiSingleModelVersionExportResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "export": {
            "$ref": "#/components/schemas/apiModelVersionExport"
          }
        },
        "title": "SingleModelVersionExportResponse"
      },
      "apiSingleModelVersionInputExampleResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "modelVersionInputExample": {
            "$ref": "#/components/schemas/apiModelVersionInputExample"
          }
        },
        "title": "SingleModelVersionInputExampleResponse"
      },
      "apiSingleModelVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "modelVersion": {
            "$ref": "#/components/schemas/apiModelVersion"
          }
        },
        "title": "SingleModelVersionResponse"
      },
      "apiSingleModuleResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "module": {
            "$ref": "#/components/schemas/apiModule"
          }
        },
        "title": "SingleModuleResponse"
      },
      "apiSingleModuleVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "moduleVersion": {
            "$ref": "#/components/schemas/apiModuleVersion"
          }
        },
        "title": "SingleModuleVersionResponse"
      },
      "apiSingleModuleVersionUsageCountResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "usageCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "SingleModuleVersionUsageCountResponse"
      },
      "apiSingleNodepoolResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "nodepool": {
            "$ref": "#/components/schemas/apiNodepool"
          }
        }
      },
      "apiSinglePasswordValidationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "passwordViolations": {
            "$ref": "#/components/schemas/apiPasswordViolations"
          }
        },
        "title": "SinglePasswordValidationResponse"
      },
      "apiSingleRunnerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "runner": {
            "$ref": "#/components/schemas/apiRunner"
          }
        },
        "title": "SingleRunnerResponse"
      },
      "apiSingleSearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "search": {
            "$ref": "#/components/schemas/apiSearch"
          }
        },
        "title": "SingleSearchResponse returns saved search in response to GetSearchRequest"
      },
      "apiSingleStatusCodeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          }
        },
        "title": "SingleStatusCodeResponse"
      },
      "apiSingleTaskCountResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "appId": {
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "counts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTaskStatusCountPerUser"
            }
          }
        },
        "title": "SingleTaskCountResponse represents counts of task annotations or inputs (i.e. task assignments) for labelers in given task"
      },
      "apiSingleTaskResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "task": {
            "$ref": "#/components/schemas/apiTask"
          }
        },
        "description": "Response with a single Task."
      },
      "apiSingleUploadResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "upload": {
            "$ref": "#/components/schemas/apiUpload"
          }
        }
      },
      "apiSingleUserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "user": {
            "$ref": "#/components/schemas/apiUser"
          }
        },
        "title": "SingleUserResponse"
      },
      "apiSingleWorkflowResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "workflow": {
            "$ref": "#/components/schemas/apiWorkflow"
          }
        },
        "title": "SingleWorkflowResponse"
      },
      "apiSingleWorkflowVersionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "workflowVersion": {
            "$ref": "#/components/schemas/apiWorkflowVersion"
          }
        },
        "title": "SingleWorkflowVersionResponse"
      },
      "apiSpan": {
        "type": "object",
        "properties": {
          "charStart": {
            "type": "integer",
            "format": "int64"
          },
          "charEnd": {
            "type": "integer",
            "format": "int64"
          },
          "rawText": {
            "type": "string"
          }
        }
      },
      "apiSplitIntoDatasets": {
        "type": "object",
        "properties": {
          "datasetSplits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiDatasetSplit"
            }
          },
          "method": {
            "$ref": "#/components/schemas/SplitIntoDatasetsDatasetSplitMethod"
          }
        }
      },
      "apiStatTimeAggType": {
        "type": "string",
        "enum": [
          "NO_TIME_AGG",
          "YEAR",
          "MONTH",
          "WEEK",
          "DAY",
          "HOUR",
          "MINUTE"
        ],
        "default": "NO_TIME_AGG"
      },
      "apiStatValue": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "The time of the event. Defaults to now()."
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "A value for the metric you're recording."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of tags to attach to this stat. Each should contain one colon so that the first part will\nbe used as a tag group while the second being the tag itself. For example: [\"task_id:a\",\n\"worker_id:1\"]. These tag groups like \"task_id\" or \"worker_id\" are important for aggregating\nvalues in the StatValueAggregateQuery."
          }
        },
        "title": "StatValue"
      },
      "apiStatValueAggType": {
        "type": "string",
        "enum": [
          "SUM",
          "AVG"
        ],
        "default": "SUM"
      },
      "apiStatValueAggregate": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "The time of the aggregation. For example, if you aggregate over \"HOUR\" buckets then you can\nexpect each hour that has atleast one value (matching the rest of your query fields) will have\na StatValueAggregate with the time filled into that hour."
          },
          "aggregateValue": {
            "type": "number",
            "format": "float",
            "title": "The value aggregated according to the stat_value_agg_type"
          },
          "count": {
            "type": "string",
            "format": "uint64",
            "description": "The count of the stat values that were used in this aggregation."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The tags for this aggregated_value and count. This will be filled in if tag groups were used in\nthe query to group aggregations."
          }
        },
        "title": "StatValueAggregate"
      },
      "apiStatValueAggregateQuery": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "These tags are used to filter down the values before they are aggregated. For example,\nif you want to aggregate values for \"task_id:a\" you could specify that as a tag here."
          },
          "tagGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "These are tag groups to aggregate over. So for example if you added stat values with tags\n\"task_id:a\" and others with \"task_id:b\", then added [\"task_id\"] to the task group, it the\naggregation would return StatValueAggregate values for each task_id. If you provide more than\none tag_group the response will return all rolled up combinations of them. For example\n[\"task_id\", \"something\"] where \"something:1\" and \"something:2\" were used as tags for some\nvalues then you'd get StatValueAggregate values back for:\ntask_id | something\na       | 1\na       | 2\nb       | 1\nb       | 1"
          },
          "statValueAggType": {
            "$ref": "#/components/schemas/apiStatValueAggType"
          },
          "statTimeAggType": {
            "$ref": "#/components/schemas/apiStatTimeAggType"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "If provided the time range over which values will be >= this time. If not provided then\nall values will be used back to start of time."
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "If provided the time range over which values will be <= this time. If not provided then all\nvalues will be used up until now()."
          }
        },
        "title": "StatValueAggregateQuery"
      },
      "apiStatValueAggregateResult": {
        "type": "object",
        "properties": {
          "statValueAggregates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiStatValueAggregate"
            },
            "description": "The list of repeated aggregate values and their counts."
          },
          "statValueAggregateQuery": {
            "$ref": "#/components/schemas/apiStatValueAggregateQuery"
          }
        },
        "title": "StatValueAggregateResult"
      },
      "apiTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the task."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the task was created.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Most recent time when the task was updated.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "type": {
            "$ref": "#/components/schemas/TaskTaskType"
          },
          "description": {
            "type": "string",
            "description": "Description of the task."
          },
          "worker": {
            "$ref": "#/components/schemas/apiTaskWorker"
          },
          "conceptIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of concept ids used in the work of this task.\nDEPRECATED: Use task.concepts instead."
          },
          "inputSource": {
            "$ref": "#/components/schemas/apiTaskInputSource"
          },
          "sampleMs": {
            "type": "integer",
            "format": "int64",
            "title": "For model predictions on video: Sample delay for video predicting (1 frame per N milliseconds)"
          },
          "aiAssistant": {
            "$ref": "#/components/schemas/apiTaskAIAssistant"
          },
          "review": {
            "$ref": "#/components/schemas/apiTaskReview"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "name": {
            "type": "string",
            "description": "Add a title for this task to quickly recognise it in a list of tasks."
          },
          "aiAssistParams": {
            "$ref": "#/components/schemas/apiAiAssistParameters"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "appId": {
            "type": "string",
            "description": "The app the task belongs to."
          },
          "userId": {
            "type": "string",
            "description": "The user the task belongs to."
          },
          "labelOrderId": {
            "type": "string",
            "description": "The label order the task belongs to."
          },
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiTaskConcept"
            },
            "description": "Ignore Task.concept_ids field if Task.TaskConcept are supplied."
          },
          "deletePreviousAnnotations": {
            "type": "boolean",
            "title": "Specify whether existing Annotations within the same app that are generated by other auto annotation tasks\nwith the specified Concept from the selected Model or Workflow should deleted before executing the Task"
          },
          "metrics": {
            "$ref": "#/components/schemas/apiTaskMetrics"
          }
        },
        "description": "Task is the work that needs to be done for labeling the inputs in an app."
      },
      "apiTaskAIAssistant": {
        "type": "object",
        "properties": {
          "workflowId": {
            "type": "string",
            "description": "The worker is helped by an AI assistant.\nThis field is the workflow id which is used to assist the worker with predictions.\nIf empty, then AI assistant is disabled."
          }
        },
        "title": "TaskAIAssistant"
      },
      "apiTaskAssignment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation time.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Most recent modification time.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "worker": {
            "$ref": "#/components/schemas/apiWorker"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          }
        }
      },
      "apiTaskConcept": {
        "type": "object",
        "properties": {
          "concept": {
            "$ref": "#/components/schemas/apiConcept"
          },
          "autoAnnotationConfig": {
            "$ref": "#/components/schemas/apiTaskConceptAutoAnnotationConfig"
          }
        }
      },
      "apiTaskConceptAutoAnnotationConfig": {
        "type": "object",
        "properties": {
          "annotationDataTypes": {
            "type": "integer",
            "format": "int64",
            "description": "Filter annotations by their annotation data type.\nThis is a bit-mask field that holds multiple AnnotationDataType values that are combined in an OR fashion.\nExample: if annotation_data_types = 34, then we filter annotations that appear as a mask or a bounding box,\nbecause MASK = 32 and BOUNDING_BOX = 2."
          },
          "thresholdRange": {
            "$ref": "#/components/schemas/apiThresholdRange"
          },
          "statusCode": {
            "$ref": "#/components/schemas/statusStatusCode"
          }
        }
      },
      "apiTaskInputSource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TaskInputSourceTaskInputSourceType"
          },
          "id": {
            "type": "string",
            "description": "If type is SAVED_SEARCH, then this is the saved search id."
          }
        },
        "title": "TaskInputSource"
      },
      "apiTaskInputSourceMetrics": {
        "type": "object",
        "properties": {
          "inputsCountEstimated": {
            "type": "string",
            "format": "uint64",
            "title": "Estimated number of inputs that are in the source of data"
          }
        }
      },
      "apiTaskMetrics": {
        "type": "object",
        "properties": {
          "work": {
            "$ref": "#/components/schemas/apiTaskWorkMetrics"
          },
          "review": {
            "$ref": "#/components/schemas/apiTaskReviewMetrics"
          },
          "inputSource": {
            "$ref": "#/components/schemas/apiTaskInputSourceMetrics"
          }
        }
      },
      "apiTaskReview": {
        "type": "object",
        "properties": {
          "strategy": {
            "$ref": "#/components/schemas/TaskReviewTaskReviewStrategy"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Who will review this task.\nDEPRECATED: Use users.id instead."
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiUser"
            },
            "description": "Users who will review this task.\nWhen the 'review.users' field is additionally requested, then all user\ninfo is filled for the reviewers. Otherwise, only the user 'id' is filled."
          },
          "manualStrategyInfo": {
            "$ref": "#/components/schemas/apiTaskReviewManualStrategyInfo"
          },
          "consensusStrategyInfo": {
            "$ref": "#/components/schemas/apiTaskReviewConsensusStrategyInfo"
          }
        },
        "title": "TaskReview"
      },
      "apiTaskReviewConsensusStrategyInfo": {
        "type": "object",
        "properties": {
          "approvalThreshold": {
            "type": "integer",
            "format": "int64",
            "description": "The number of labelers that need to agree in order to automatically approve an annotation."
          }
        },
        "title": "TaskReviewConsensusStrategyInfo"
      },
      "apiTaskReviewManualStrategyInfo": {
        "type": "object",
        "properties": {
          "samplePercentage": {
            "type": "number",
            "format": "float",
            "description": "This field represents the percentage of inputs that will be reviewed by reviewers. It is a value between 0 and 1."
          }
        },
        "title": "TaskReviewManualStrategyInfo"
      },
      "apiTaskReviewMetrics": {
        "type": "object",
        "properties": {
          "inputsCountEstimated": {
            "type": "string",
            "format": "uint64",
            "description": "Estimated number of reviewed inputs."
          },
          "inputsPercentEstimated": {
            "type": "integer",
            "format": "int64",
            "description": "Estimated percent of inputs that were reviewed. Calculated as count of reviewed inputs / total task inputs\nThis is a value between 0 and 100, where 0 = 0% and 100 = 100%."
          }
        }
      },
      "apiTaskStatusCountPerUser": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Deprecated: Use worker instead."
          },
          "pending": {
            "type": "integer",
            "format": "int64"
          },
          "awaitingReview": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "integer",
            "format": "int64"
          },
          "reviewDenied": {
            "type": "integer",
            "format": "int64"
          },
          "awaitingConsensusReview": {
            "type": "integer",
            "format": "int64"
          },
          "worker": {
            "$ref": "#/components/schemas/apiWorker"
          }
        },
        "title": "TaskStatusCountPerUser can represent one of the following:\n* count of task annotations created by a worker for each valid status,\n* count of task inputs assigned to a worker  (i.e. task assignments) for each valid status"
      },
      "apiTaskWorkMetrics": {
        "type": "object",
        "properties": {
          "inputsCountEstimated": {
            "type": "string",
            "format": "uint64",
            "description": "Estimated number of inputs that workers have worked on."
          },
          "inputsPercentEstimated": {
            "type": "integer",
            "format": "int64",
            "description": "Estimated percent of inputs that workers have worked on.\nThis is a value between 0 and 100, where 0 = 0% and 100 = 100%."
          }
        }
      },
      "apiTaskWorker": {
        "type": "object",
        "properties": {
          "strategy": {
            "$ref": "#/components/schemas/TaskWorkerTaskWorkerStrategy"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Who will work on this task.\nDEPRECATED: Use workers.user.id instead."
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiUser"
            },
            "description": "Users who will work on this task.\nWhen the 'worker.users' field is additionally requested, then all user\ninfo is filled for the workers. Otherwise, only the user 'id' is filled.\nDEPRECATED: Use workers.user instead."
          },
          "partitionedStrategyInfo": {
            "$ref": "#/components/schemas/apiTaskWorkerPartitionedStrategyInfo"
          },
          "workers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorker"
            },
            "description": "Workers that will work on this task.\n\nFor Auto Annotation Tasks:\n  the worker can be either a model or a workflow;\n  currently only supports 1 worker.\nFor manual labeling Tasks:\n  the workers can only be users;\n  no limitation on number of workers."
          }
        },
        "description": "TaskWorker includes information about the workers that will work on this task."
      },
      "apiTaskWorkerPartitionedStrategyInfo": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TaskWorkerPartitionedStrategyInfoTaskWorkerPartitionedStrategy"
          },
          "workersPerInput": {
            "type": "integer",
            "format": "int32",
            "description": "How many workers will label each input."
          },
          "weights": {
            "type": "object",
            "description": "In case of weighted partitioning, map user ids to weights.\nEach labeler will be assigned work proportional to its own weight as compared to the sum of total weight.\n\nEXAMPLE:\nIf we have 3 workers, and weights = {1: 30, 2: 30, 3: 40},\nthen first worker will have assigned 30% of the work,\nsecond worker will have assigned 30% of the work,\nand third worker will have assigned 40% of the work.\nYou may use weights which add up to 100, but it's not necessary.\nFor example, weights {1: 30, 2: 30, 3: 40} are equivalent with {1: 3, 2: 3, 3: 4}\nbecause they represent the same percentages: {1: 30%, 2: 30%, 3: 40%}.\n\nNOTE:\nNote that no worker should be assigned a weight percentage greater than 1/workers_per_input.\nIt is mathematically impossible to partition the work in such a case.\nWhy? Say, we have 3 workers. And workers_per_input = 2, i.e. each input must be labeled by 2 workers.\nLet's assign weights {1: 51%, 2: 25%, 3: 24%}.\nNote that first worker has a weight percentage higher than 1/workers_per_input = 1/2 = 50%.\nIf we have 100 inputs, then a total of 100 * workers_per_input = 200 cumulative inputs will be labeled by these 3 workers.\nWorker 1 should label 102 cumulative inputs, while worker 2 and worker 3 will label 98 cumulative inputs together.\nNo matter how we assign the 98 cumulative inputs, the 2 workers will be able to label up to 98 actual inputs.\nThis means the remaining 2 inputs will be labeled only by worker 1. This contradicts the worker_per_input = 2 requirement."
          }
        },
        "title": "TaskWorkerPartitionedStrategyInfo"
      },
      "apiText": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string",
            "description": "This is a raw text string."
          },
          "url": {
            "type": "string",
            "title": "Url to a text file"
          },
          "allowDuplicateUrl": {
            "type": "boolean"
          },
          "hosted": {
            "$ref": "#/components/schemas/apiHostedURL"
          },
          "textInfo": {
            "$ref": "#/components/schemas/apiTextInfo"
          }
        },
        "title": "Text"
      },
      "apiTextInfo": {
        "type": "object",
        "properties": {
          "charCount": {
            "type": "integer",
            "format": "int32",
            "title": "count of characters in text"
          },
          "encoding": {
            "type": "string",
            "title": "text encoding"
          }
        }
      },
      "apiThresholdRange": {
        "type": "object",
        "properties": {
          "isLowerInclusive": {
            "type": "boolean",
            "title": "The range used to filter over concept values.\ne.g. GREATER_THAN_OR_EQUAL_TO 0.7 -> is_lower_inclusive = true, lower = 0.7, is_upper_inclusive = true, upper = 1.0\ne.g. (0.3, 0.75] -> is_lower_inclusive = false, lower = 0.3, is_upper_inclusive = true, upper = 0.75"
          },
          "isUpperInclusive": {
            "type": "boolean"
          },
          "lower": {
            "type": "number",
            "format": "float"
          },
          "upper": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "apiTimeInfo": {
        "type": "object",
        "properties": {
          "numFrames": {
            "type": "integer",
            "format": "int64",
            "title": "Number of frames"
          },
          "beginTime": {
            "type": "number",
            "format": "float",
            "description": "Timestamp where track begins."
          },
          "endTime": {
            "type": "number",
            "format": "float",
            "description": "Timestamp where track ends."
          }
        },
        "title": "TimeInfo"
      },
      "apiTimeRange": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Begin of the time range, optional, inclusive."
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "End of the time range, optional, inclusive."
          }
        },
        "title": "TimeRange"
      },
      "apiTimeSegment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique id for the time segment."
          },
          "timeInfo": {
            "$ref": "#/components/schemas/apiTimeInfo"
          }
        },
        "title": "TimeSegment"
      },
      "apiToken": {
        "type": "object",
        "properties": {
          "charStart": {
            "type": "integer",
            "format": "int64"
          },
          "charEnd": {
            "type": "integer",
            "format": "int64"
          },
          "rawText": {
            "type": "string"
          }
        }
      },
      "apiTrack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "track id"
          },
          "timeInfo": {
            "$ref": "#/components/schemas/apiTimeInfo"
          },
          "quality": {
            "type": "number",
            "format": "float"
          }
        },
        "title": "Track proto encodes information of a track over a number of frames"
      },
      "apiTrackerMetrics": {
        "type": "object",
        "properties": {
          "motMota": {
            "type": "number",
            "format": "float",
            "title": "Multiple object tracking accuracy"
          },
          "motNumSwitches": {
            "type": "integer",
            "format": "int32",
            "title": "Number of switches between tracks"
          },
          "morseFrag": {
            "type": "number",
            "format": "float",
            "title": "MORSE fragmentation rate (a.k.a unique switch rate, only calculated in public sector)"
          },
          "avgPrecision": {
            "type": "number",
            "format": "float",
            "title": "Average precision calculated from all processed frames"
          },
          "aiid": {
            "type": "string",
            "title": "The concept that we are evaluating the tracker"
          },
          "uniqueSwitchRate": {
            "type": "number",
            "format": "float",
            "title": "Same as morse_frag but calculated using MOT mapping/metrics"
          }
        },
        "title": "TrackerMetrics"
      },
      "apiTrainInfo": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "description": "To control the training process when PostModelVersions is used we allow a list of parameters\ndefined for each ModelType as a Struct (JSON object) here. During training, the settings\ncontained within are sent to the training processor to alter the training process."
          },
          "dataset": {
            "$ref": "#/components/schemas/apiDataset"
          }
        }
      },
      "apiTrendingMetric": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "objectId": {
            "type": "string"
          },
          "viewCount": {
            "type": "string",
            "format": "uint64"
          }
        },
        "title": "TrendingMetric"
      },
      "apiTritonCondaEnvInfo": {
        "type": "object",
        "properties": {
          "condaPackUrl": {
            "type": "string"
          },
          "condaYamlUrl": {
            "type": "string"
          }
        }
      },
      "apiUpload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "ID of upload"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the upload was started.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Most recent time when the upload was updated.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the upload will expire and be deleted\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "contentName": {
            "type": "string",
            "title": "name of uploaded content (e.g. filename)"
          },
          "contentLength": {
            "type": "string",
            "format": "uint64",
            "title": "Total size of the upload content"
          },
          "contentUrl": {
            "type": "string",
            "title": "Url of uploaded content"
          }
        }
      },
      "apiUploadContentPart": {
        "type": "object",
        "properties": {
          "rangeStart": {
            "type": "string",
            "format": "uint64"
          },
          "partNumber": {
            "type": "string",
            "format": "int64"
          },
          "data": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "apiUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "primaryEmail": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string"
          },
          "jobRole": {
            "type": "string"
          },
          "intention": {
            "type": "string",
            "title": "This specifies user intent when registering on clarifai"
          },
          "referralSource": {
            "type": "string",
            "title": "This specifies how one got to know about clarifai"
          },
          "billType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the user was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "dateGdprConsent": {
            "type": "string",
            "format": "date-time"
          },
          "dateTosConsent": {
            "type": "string",
            "format": "date-time"
          },
          "dateMarketingConsent": {
            "type": "string",
            "format": "date-time"
          },
          "datePiiConsent": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "emailAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiEmailAddress"
            }
          },
          "twoFactorAuthEnabled": {
            "type": "boolean"
          },
          "teamsCount": {
            "type": "integer",
            "format": "int64"
          },
          "isStarred": {
            "type": "boolean",
            "title": "Is starred by the requesting user (only showed on get/list requests)\nPlease use PostUserStars/DeleteUserStars endpoints to star/unstar an user"
          },
          "starCount": {
            "type": "integer",
            "format": "int32",
            "title": "How many users have starred the user (only showed on get/list requests)\nComputed value, not editable"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "userDetail": {
            "$ref": "#/components/schemas/apiUserDetail"
          }
        },
        "title": "User"
      },
      "apiUserAppIDSet": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "title": "Note user_id 'me' is reserved - it is the alias for the id of authorized user"
          },
          "appId": {
            "type": "string"
          }
        },
        "description": "Common message to identify the app in a url endpoint."
      },
      "apiUserDetail": {
        "type": "object",
        "properties": {
          "primaryEmail": {
            "type": "string"
          },
          "billType": {
            "type": "string"
          },
          "dateGdprConsent": {
            "type": "string",
            "format": "date-time"
          },
          "dateTosConsent": {
            "type": "string",
            "format": "date-time"
          },
          "dateMarketingConsent": {
            "type": "string",
            "format": "date-time"
          },
          "datePiiConsent": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "emailAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiEmailAddress"
            }
          },
          "twoFactorAuthEnabled": {
            "type": "boolean"
          },
          "teamsCount": {
            "type": "integer",
            "format": "int64"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "description": "This message holds the confidential information from the User object that we don't want to expose\nto other users. It will be accessible only from /users/{user_id}/account and with the User scopes."
      },
      "apiVideo": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "This is a URL to a publicly accessible video file. The platform will download this file server\nside and then process."
          },
          "base64": {
            "type": "string",
            "format": "byte",
            "description": "The base64 field is using video file bytes directly in the request.\nNOTE: if you're sending a json request, then this MUST be base64 encoded before sending (hence\nthe name here).\nWhen using our grpc clients, you DO NOT need to base64 encode\nit yourself since the clients know how to do this for you automatically and will avoid the\nbase64 encoding if they send a binary request."
          },
          "allowDuplicateUrl": {
            "type": "boolean"
          },
          "thumbnailUrl": {
            "type": "string",
            "title": "URL of thumbnail image, which is currently frame at position of 1s. This field is currently\nused only in response.\nDeprecated in favour of thumbnail_hosted, which also contains alternate sizes of thumbnail"
          },
          "hosted": {
            "$ref": "#/components/schemas/apiHostedURL"
          },
          "hostedThumbnail": {
            "$ref": "#/components/schemas/apiHostedURL"
          },
          "videoInfo": {
            "$ref": "#/components/schemas/apiVideoInfo"
          }
        },
        "title": "Video"
      },
      "apiVideoInfo": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32",
            "title": "width"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "title": "height"
          },
          "fps": {
            "type": "number",
            "format": "float",
            "description": "Frames per second of the video."
          },
          "videoFormat": {
            "type": "string",
            "title": "video format"
          },
          "bitRate": {
            "type": "integer",
            "format": "int32",
            "title": "video track bit rate"
          },
          "frameCount": {
            "type": "integer",
            "format": "int32",
            "title": "video frame count"
          },
          "durationSeconds": {
            "type": "number",
            "format": "float",
            "title": "video duration in seconds"
          }
        }
      },
      "apiW3C": {
        "type": "object",
        "properties": {
          "hex": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "apiWorker": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/apiUser"
          },
          "workflow": {
            "$ref": "#/components/schemas/apiWorkflow"
          }
        },
        "description": "Worker is the author of an annotation."
      },
      "apiWorkflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The workflows's unique id."
          },
          "appId": {
            "type": "string",
            "title": "The app the workflow belongs to"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the workflow was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorkflowNode"
            },
            "description": "The list of nodes retrieved from latest workflow version.\nEach node can specify an input node that it connects to in order to define the graph."
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "userId": {
            "type": "string",
            "title": "The user the workflow belongs to"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the workflow was last modified"
          },
          "version": {
            "$ref": "#/components/schemas/apiWorkflowVersion"
          },
          "isStarred": {
            "type": "boolean",
            "title": "Is starred by the requesting user (only showed on get/list requests)\nPlease use PostWorkflowStars/DeleteWorkflowStars endpoints to star/unstar a workflow"
          },
          "starCount": {
            "type": "integer",
            "format": "int32",
            "title": "How many users have starred the workflow (only showed on get/list requests)\nComputed value, not editable"
          },
          "description": {
            "type": "string",
            "title": "Short description about this workflow"
          },
          "notes": {
            "type": "string",
            "description": "Notes for the workflow\nThis field should be used for in-depth notes and supports up to 64Kbs."
          },
          "useCases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tags from use_cases category"
          },
          "checkConsents": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tags for check consents"
          },
          "bookmarkOrigin": {
            "$ref": "#/components/schemas/apiBookmarkOrigin"
          },
          "image": {
            "$ref": "#/components/schemas/apiImage"
          }
        },
        "title": "Workflow"
      },
      "apiWorkflowModelUseCase": {
        "type": "string",
        "enum": [
          "WORKFLOW_MODEL_USE_CASE_NOT_SET",
          "CLASSIFICATION",
          "DETECTION"
        ],
        "default": "WORKFLOW_MODEL_USE_CASE_NOT_SET",
        "description": " - CLASSIFICATION: Classifier models without a detector parent (recursive check) in a workflow\nare used for classification.\n - DETECTION: Detector models in a workflow are used for detection.\nClassifier models that run after a detector model are also used for detection."
      },
      "apiWorkflowNode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "An identifier for this node in the graph. This is used when connecting NodeInputs\ntogether."
          },
          "nodeInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiNodeInput"
            },
            "description": "Each WorkflowNode can connect to multiple input nodes so that we can handle multi-model data\nand more complex workflow operations."
          },
          "suppressOutput": {
            "type": "boolean",
            "title": "suppress the output for workflow prediction"
          },
          "outputInfoOverride": {
            "$ref": "#/components/schemas/apiOutputInfo"
          }
        },
        "title": "WorkflowNode"
      },
      "apiWorkflowResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the object was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiOutput"
            },
            "description": "For each model in the workflow we return an Output."
          },
          "suppressOutput": {
            "type": "boolean",
            "description": "Indicate if the output of this model is suppressed."
          }
        },
        "description": "WorkflowResult\nOne result per input in the workflow."
      },
      "apiWorkflowResultsSimilarity": {
        "type": "object",
        "properties": {
          "poolResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiHit"
            }
          }
        },
        "title": "WorkflowResultsSimilarity"
      },
      "apiWorkflowState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the workflow state.\nTo start saving a state in a PostWorkflowResults request set this ID to \"init\"\nand it will return a newly generated unique state id that you can then pass in subsequent\nPostWorkflowResults calls. These state expire after 5 minutes between calls."
          }
        },
        "title": "WorkflowState"
      },
      "apiWorkflowVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of this version."
          },
          "workflowId": {
            "type": "string",
            "description": "Workflow id for this version."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the version was created.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Most recent time when the version was updated.\nThe format is https://www.ietf.org/rfc/rfc3339.txt.\nExample: \"2006-01-02T15:04:05.999999Z\"."
          },
          "visibility": {
            "$ref": "#/components/schemas/clarifaiapiVisibility"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiWorkflowNode"
            },
            "description": "The list of nodes that make up the workflow version. Each node can specify an input node\nthat it connects to in order to define the graph."
          },
          "metadata": {
            "type": "object",
            "title": "To handle arbitrary json metadata you can use a struct field:\nhttps://github.com/google/protobuf/blob/master/src/google/protobuf/struct.proto"
          },
          "appId": {
            "type": "string",
            "description": "The app the workflow version belongs to."
          },
          "userId": {
            "type": "string",
            "description": "The user the workflow version belongs to."
          },
          "description": {
            "type": "string",
            "title": "Short description about this workflow version"
          },
          "license": {
            "type": "string",
            "title": "License associated to this workflow version"
          }
        },
        "title": "WorkflowVersion"
      },
      "apiWorkflowVersionPublishRequest": {
        "type": "object",
        "properties": {
          "versionId": {
            "type": "string"
          }
        }
      },
      "apiWorkflowVersionUnPublishRequest": {
        "type": "object",
        "properties": {
          "versionId": {
            "type": "string"
          }
        }
      },
      "apistatusStatus": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/statusStatusCode"
          },
          "description": {
            "type": "string",
            "description": "A short description of the error."
          },
          "details": {
            "type": "string",
            "description": "More details of the given error.\nThese details may be exposed to non-technical users.\nFor technical details, try to use developer_notes field."
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "For some environment we may return a stack trace to help debug\nany issues."
          },
          "percentCompleted": {
            "type": "integer",
            "format": "int64",
            "title": "specifically for long running jobs"
          },
          "timeRemaining": {
            "type": "integer",
            "format": "int64",
            "title": "if status is pending, how much time is remaining (in seconds)"
          },
          "reqId": {
            "type": "string",
            "title": "A request ID may be present, to help monitoring and tracking requests"
          },
          "internalDetails": {
            "type": "string",
            "description": "Internal Annotation (do not set in production, for internal Clarifai use only)."
          },
          "redirectInfo": {
            "$ref": "#/components/schemas/statusRedirectInfo"
          },
          "developerNotes": {
            "type": "string",
            "description": "Notes for developer.\nThese notes are rather technical details for developers how to interpret the status,\ne.g. why an error occurred and how to avoid getting the error."
          }
        }
      },
      "clarifaiapiAnnotation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "The ID for the annotation"
          },
          "inputId": {
            "type": "string",
            "title": "ID of the input this annotation is tied to"
          },
          "annotationInfo": {
            "type": "object",
            "title": "task_id is deprecated in annotation_info. Use task_id"
          },
          "userId": {
            "type": "string",
            "description": "DEPRECATED: Use worker.user.id instead."
          },
          "modelVersionId": {
            "type": "string",
            "title": "DEPRECATED: Use worker.model.model_version.id instead"
          },
          "embedModelVersionId": {
            "type": "string",
            "description": "DEPRECATED."
          },
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "When the annotation was created. We follow the XXXX timestamp\nformat. We use https://www.ietf.org/rfc/rfc3339.txt format:\n\"2006-01-02T15:04:05.999999Z\" so you can expect results like\nthe following from the API:\n\"2017-04-11T21:50:50.223962Z\""
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the annotation was modified."
          },
          "trusted": {
            "type": "boolean",
            "title": "Whether or not this annotation is trusted\nWill be deprecated"
          },
          "inputLevel": {
            "type": "boolean",
            "description": "Is this the input level annotation."
          },
          "consensusInfo": {
            "type": "object",
            "title": "Consensus review related information, e.g.\n* annotation group\n* id of annotation parent, in case the annotation was split from another annotation"
          },
          "taskId": {
            "type": "string",
            "title": "The id of the task annotation belongs to"
          },
          "worker": {
            "$ref": "#/components/schemas/apiWorker"
          }
        },
        "title": "Annotation of an asset with metadata"
      },
      "clarifaiapiVisibility": {
        "type": "object",
        "properties": {
          "gettable": {
            "$ref": "#/components/schemas/VisibilityGettable"
          }
        },
        "description": "Visibility represents how visible the given resource is to other users.\nWhen authenticating a request we can tell if a user is a collaborator or a teammate for the\nthe app that contains the resource and set their allowed visibility. We use that to restrict\nwhat they are allowed to see:\nIf AllowedVisibility is PRIVATE then we allow PRIVATE (10), ORG (30), PUBLIC (50)\nIf AllowedVisibility is ORG then we allow ORG (30), PUBLIC (50)\nIf AllowedVisibility is PUBLIC then we allow PUBLIC (50) only."
      },
      "googlerpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            }
          }
        }
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "additionalProperties": {}
      },
      "protobufNullValue": {
        "type": "string",
        "enum": [
          "NULL_VALUE"
        ],
        "default": "NULL_VALUE",
        "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
      },
      "statusBaseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/apistatusStatus"
          }
        },
        "description": "Base message to return when there is a internal server error that\nis not caught elsewhere."
      },
      "statusRedirectInfo": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "New location for the resource. Used to set response Location header."
          },
          "resourceType": {
            "type": "string",
            "title": "Resource type"
          },
          "oldResourceId": {
            "type": "string",
            "title": "Old resource id"
          },
          "newResourceId": {
            "type": "string",
            "title": "New resource id"
          }
        }
      },
      "statusStatusCode": {
        "type": "string",
        "enum": [
          "ZERO",
          "SUCCESS",
          "MIXED_STATUS",
          "FAILURE",
          "TRY_AGAIN",
          "NOT_IMPLEMENTED",
          "MOVED",
          "TEAPOT",
          "CONN_ACCOUNT_ISSUES",
          "CONN_TOKEN_INVALID",
          "CONN_CREDENTIALS_INVALID",
          "CONN_EXCEED_HOURLY_LIMIT",
          "CONN_EXCEED_MONTHLY_LIMIT",
          "CONN_THROTTLED",
          "CONN_EXCEEDS_LIMITS",
          "CONN_INSUFFICIENT_SCOPES",
          "CONN_KEY_INVALID",
          "CONN_KEY_NOT_FOUND",
          "CONN_BAD_REQUEST_FORMAT",
          "CONN_DOES_NOT_EXIST",
          "CONN_INVALID_REQUEST",
          "CONN_METHOD_NOT_ALLOWED",
          "CONN_NO_GDPR_CONSENT",
          "CONN_AUTH_METHOD_DISABLED",
          "MODEL_TRAINED",
          "MODEL_TRAINING",
          "MODEL_UNTRAINED",
          "MODEL_QUEUED_FOR_TRAINING",
          "MODEL_UPLOADING",
          "MODEL_UPLOADING_FAILED",
          "MODEL_TRAINING_FAILED",
          "MODEL_BUILDING",
          "MODEL_BUILDING_FAILED",
          "MODEL_BUILD_UNEXPECTED_ERROR",
          "MODEL_TRAINING_NO_DATA",
          "MODEL_TRAINING_NO_POSITIVES",
          "MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS",
          "MODEL_TRAINING_TIMED_OUT",
          "MODEL_TRAINING_WAITING_ERROR",
          "MODEL_TRAINING_UNKNOWN_ERROR",
          "MODEL_TRAINING_MSG_REDELIVER",
          "MODEL_TRAINING_INSUFFICIENT_DATA",
          "MODEL_TRAINING_INVALID_PARAMS",
          "MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED",
          "MODEL_MODIFY_SUCCESS",
          "MODEL_MODIFY_PENDING",
          "MODEL_MODIFY_FAILED",
          "MODEL_DOES_NOT_EXIST",
          "MODEL_PERMISSION_DENIED",
          "MODEL_INVALID_ARGUMENT",
          "MODEL_INVALID_REQUEST",
          "MODEL_EVALUATED",
          "MODEL_EVALUATING",
          "MODEL_NOT_EVALUATED",
          "MODEL_QUEUED_FOR_EVALUATION",
          "MODEL_EVALUATION_TIMED_OUT",
          "MODEL_EVALUATION_WAITING_ERROR",
          "MODEL_EVALUATION_UNKNOWN_ERROR",
          "MODEL_PREDICTION_FAILED",
          "MODEL_EVALUATION_MSG_REDELIVER",
          "MODEL_EVALUATION_NEED_LABELS",
          "MODEL_EVALUATION_NEED_INPUTS",
          "MODEL_EVALUATION_FAILED",
          "MODEL_DEPLOYMENT_FAILED",
          "MODEL_DEPLOYING",
          "MODEL_QUEUED_FOR_DEPLOYMENT",
          "MODEL_NOT_DEPLOYED",
          "MODEL_REFERENCE_INVALID_ARGUMENT",
          "MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT",
          "MODEL_EXPORTED",
          "MODEL_EXPORTING",
          "MODEL_EXPORTING_FAILED",
          "MODEL_EXPORT_PENDING",
          "WORKFLOW_NO_MATCHING_INPUT",
          "WORKFLOW_REQUIRE_TRAINED_MODEL",
          "WORKFLOW_DUPLICATE",
          "WORKFLOW_UNSUPPORTED_FORMAT",
          "WORKFLOW_DOES_NOT_EXIST",
          "WORKFLOW_PERMISSION_DENIED",
          "WORKFLOW_INVALID_ARGUMENT",
          "WORKFLOW_INVALID_RECIPE",
          "WORKFLOW_INVALID_TEMPLATE",
          "WORKFLOW_INVALID_GRAPH",
          "WORKFLOW_INTERNAL_FAILURE",
          "WORKFLOW_INVALID_REQUEST",
          "WORKFLOW_MODIFY_SUCCESS",
          "WORKFLOW_MODIFY_PENDING",
          "WORKFLOW_MODIFY_FAILED",
          "WORKFLOW_REINDEX_FAILED",
          "CONCEPT_MODIFY_SUCCESS",
          "CONCEPT_MODIFY_PENDING",
          "CONCEPT_MODIFY_FAILED",
          "ANNOTATION_SUCCESS",
          "ANNOTATION_PENDING",
          "ANNOTATION_FAILED",
          "ANNOTATION_UNKNOWN_STATUS",
          "ANNOTATION_INVALID_ARGUMENT",
          "ANNOTATION_PERMISSION_DENIED",
          "ANNOTATION_AWAITING_REVIEW",
          "ANNOTATION_AWAITING_CONSENSUS_REVIEW",
          "ANNOTATION_REVIEW_DENIED",
          "ANNOTATION_MODIFY_SUCCESS",
          "ANNOTATION_MODIFY_PENDING",
          "ANNOTATION_MODIFY_FAILED",
          "METADATA_INVALID_PATCH_ARGUMENTS",
          "METADATA_PARSING_ISSUE",
          "METADATA_MANIPULATION_ISSUE",
          "TRAINER_JOB_STATE_NONE",
          "TRAINER_JOB_STATE_QUEUED",
          "TRAINER_JOB_STATE_RUNNING",
          "TRAINER_JOB_STATE_COMPLETE",
          "TRAINER_JOB_STATE_ERROR",
          "DATA_DUMP_SUCCESS",
          "DATA_DUMP_PENDING",
          "DATA_DUMP_FAILED",
          "DATA_DUMP_IN_PROGRESS",
          "DATA_DUMP_NO_DATA",
          "DATA_DUMP_UNEXPECTED_ERROR",
          "DATA_DUMP_EXPORT_SUCCESS",
          "DATA_DUMP_EXPORT_PENDING",
          "DATA_DUMP_EXPORT_FAILED",
          "DATA_DUMP_EXPORT_IN_PROGRESS",
          "DATA_DUMP_EXPORT_UNEXPECTED_ERROR",
          "APP_DUPLICATION_SUCCESS",
          "APP_DUPLICATION_FAILED",
          "APP_DUPLICATION_PENDING",
          "APP_DUPLICATION_IN_PROGRESS",
          "APP_DUPLICATION_INVALID_REQUEST",
          "MODULE_DOES_NOT_EXIST",
          "MODULE_PERMISSION_DENIED",
          "MODULE_INVALID_ARGUMENT",
          "MODULE_INVALID_REQUEST",
          "BULK_OPERATION_SUCCESS",
          "BULK_OPERATION_FAILED",
          "BULK_OPERATION_PENDING",
          "BULK_OPERATION_IN_PROGRESS",
          "BULK_OPERATION_INVALID_REQUEST",
          "BULK_OPERATION_CANCELLED",
          "BULK_OPERATION_UNEXPECTED_ERROR",
          "RUNNER_DOES_NOT_EXIST",
          "RUNNER_PERMISSION_DENIED",
          "RUNNER_INVALID_ARGUMENT",
          "RUNNER_INVALID_REQUEST",
          "RUNNER_NEEDS_RETRY",
          "RUNNER_STREAM_START",
          "RUNNER_STREAM_END",
          "RUNNER_ITEM_CANCELLED",
          "RUNNER_PROCESSING_FAILED",
          "NODEPOOL_DOES_NOT_EXIST",
          "NODEPOOL_INVALID_ARGUMENT",
          "NODEPOOL_INVALID_REQUEST",
          "COMPUTE_CLUSTER_DOES_NOT_EXIST",
          "COMPUTE_CLUSTER_INVALID_ARGUMENT",
          "COMPUTE_CLUSTER_INVALID_REQUEST",
          "INPUT_DOWNLOAD_SUCCESS",
          "INPUT_DOWNLOAD_PENDING",
          "INPUT_DOWNLOAD_FAILED",
          "INPUT_DOWNLOAD_IN_PROGRESS",
          "INPUT_STATUS_UPDATE_FAILED",
          "INPUT_DELETE_FAILED",
          "INPUT_DUPLICATE",
          "INPUT_UNSUPPORTED_FORMAT",
          "INPUT_DOES_NOT_EXIST",
          "INPUT_PERMISSION_DENIED",
          "INPUT_INVALID_ARGUMENT",
          "INPUT_OVER_LIMIT",
          "INPUT_INVALID_URL",
          "INPUT_MODIFY_SUCCESS",
          "INPUT_MODIFY_PENDING",
          "INPUT_MODIFY_FAILED",
          "INPUT_STORAGE_HOST_FAILED",
          "ALL_INPUT_INVALID_BYTES",
          "INPUT_CLUSTER_SUCCESS",
          "INPUT_CLUSTER_PENDING",
          "INPUT_CLUSTER_FAILED",
          "INPUT_CLUSTER_IN_PROGRESS",
          "INPUT_REINDEX_SUCCESS",
          "INPUT_REINDEX_PENDING",
          "INPUT_REINDEX_FAILED",
          "INPUT_REINDEX_IN_PROGRESS",
          "INPUT_VIDEO_DOWNLOAD_SUCCESS",
          "INPUT_VIDEO_DOWNLOAD_PENDING",
          "INPUT_VIDEO_DOWNLOAD_FAILED",
          "INPUT_VIDEO_DUPLICATE",
          "INPUT_VIDEO_UNSUPPORTED_FORMAT",
          "INPUT_VIDEO_DOES_NOT_EXIST",
          "INPUT_VIDEO_PERMISSION_DENIED",
          "INPUT_VIDEO_INVALID_ARGUMENT",
          "INPUT_VIDEO_OVER_LIMIT",
          "INPUT_VIDEO_INVALID_URL",
          "INPUT_VIDEO_MODIFY_SUCCESS",
          "INPUT_VIDEO_MODIFY_PENDING",
          "INPUT_VIDEO_MODIFY_FAILED",
          "INPUT_VIDEO_STORAGE_HOST_FAILED",
          "ALL_INPUT_VIDEOS_INVALID_BYTES",
          "INPUT_VIDEO_PROCESSING_SUCCESS",
          "INPUT_VIDEO_PROCESSING_PENDING",
          "INPUT_VIDEO_PROCESSING_FAILED",
          "INPUT_VIDEO_STORAGE_INCONSISTENCY",
          "INPUT_VIDEO_STORAGE_FAILURE",
          "INPUT_VIDEO_URL_GENERATION_FAILURE",
          "INPUT_CONNECTION_FAILED",
          "REQUEST_DISABLED_FOR_MAINTENANCE",
          "INPUT_WRITES_DISABLED_FOR_MAINTENANCE",
          "INPUT_INVALID_REQUEST",
          "PREDICT_INVALID_REQUEST",
          "SEARCH_INVALID_REQUEST",
          "CONCEPTS_INVALID_REQUEST",
          "STATS_INVALID_REQUEST",
          "DATABASE_DUPLICATE_KEY",
          "DATABASE_STATEMENT_TIMEOUT",
          "DATABASE_INVALID_ROWS_AFFECTED",
          "DATABASE_DEADLOCK_DETECTED",
          "DATABASE_FAIL_TASK",
          "DATABASE_FAIL_TO_GET_CONNECTIONS",
          "DATABASE_TOO_MANY_CLIENTS",
          "DATABASE_CONSTRAINT_VIOLATED",
          "DATABASE_CANCELED",
          "ASYNC_WORKER_MULTI_ERRORS",
          "RPC_REQUEST_QUEUE_FULL",
          "RPC_SERVER_UNAVAILABLE",
          "RPC_REQUEST_TIMEOUT",
          "RPC_MAX_MESSAGE_SIZE_EXCEEDED",
          "RPC_CANCELED",
          "RPC_UNKNOWN_METHOD",
          "REQUEST_CANCELED_BY_USER",
          "CLUSTER_INTERNAL_FAILURE",
          "EXTERNAL_CONNECTION_ERROR",
          "QUERY_INVALID_SYNTAX",
          "QUEUE_CONN_ERROR",
          "QUEUE_CLOSE_REQUEST_TIMEOUT",
          "QUEUE_CONN_CLOSED",
          "QUEUE_PUBLISH_ACK_TIMEOUT",
          "QUEUE_PUBLISH_ERROR",
          "QUEUE_SUBSCRIPTION_TIMEOUT",
          "QUEUE_SUBSCRIPTION_ERROR",
          "QUEUE_MARSHALLING_FAILED",
          "QUEUE_UNMARSHALLING_FAILED",
          "QUEUE_MAX_MSG_REDELIVERY_EXCEEDED",
          "QUEUE_ACK_FAILURE",
          "SQS_OVERLIMIT",
          "SQS_INVALID_RECEIPT_HANDLE",
          "SQS_UNKNOWN",
          "SEARCH_INTERNAL_FAILURE",
          "SEARCH_PROJECTION_FAILURE",
          "SEARCH_PREDICTION_FAILURE",
          "SEARCH_BY_NOT_FULLY_INDEXED_INPUT",
          "SAVED_SEARCH_MODIFY_FAILED",
          "SEARCH_COUNTS_UNAVAILABLE",
          "EVALUATION_QUEUED",
          "EVALUATION_IN_PROGRESS",
          "EVALUATION_SUCCESS",
          "EVALUATION_FAILED_TO_RETRIEVE_DATA",
          "EVALUATION_INVALID_ARGUMENT",
          "EVALUATION_FAILED",
          "EVALUATION_PENDING",
          "EVALUATION_TIMED_OUT",
          "EVALUATION_UNEXPECTED_ERROR",
          "EVALUATION_MIXED",
          "STRIPE_EVENT_ERROR",
          "CACHE_MISS",
          "REDIS_SCRIPT_EXITED_WITH_FAILURE",
          "REDIS_STREAM_ERR",
          "REDIS_NO_CONSUMERS",
          "REDIS_STREAM_BACKOFF",
          "SIGNUP_EVENT_ERROR",
          "SIGNUP_FLAGGED",
          "FILETYPE_UNSUPPORTED",
          "APP_COUNT_INVALID_MESSAGE",
          "APP_COUNT_UPDATE_INCREMENT_FAILED",
          "APP_COUNT_REBUILD_FAILED",
          "APP_COUNT_INTERNAL_FAILURE",
          "MP_DOWNLOAD_ERROR",
          "MP_RESOLVE_DNS_ERROR",
          "MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR",
          "MP_IMAGE_DECODE_ERROR",
          "MP_INVALID_ARGUMENT",
          "MP_IMAGE_PROCESSING_ERROR",
          "DATATIER_CONN_ERROR",
          "USER_CONSENT_FACE",
          "WORKER_MISSING",
          "WORKER_ACTIVE",
          "WORKER_INACTIVE",
          "COLLECTOR_MISSING",
          "COLLECTOR_ACTIVE",
          "COLLECTOR_INACTIVE",
          "COLLECTOR_POST_INPUT_FAILED",
          "SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST",
          "TASK_IN_PROGRESS",
          "TASK_DONE",
          "TASK_WONT_DO",
          "TASK_FAILED",
          "TASK_IDLE",
          "TASK_CONFLICT",
          "TASK_NOT_IMPLEMENTED",
          "TASK_MISSING",
          "TASK_PERMISSION_DENIED",
          "TASK_ASSIGNMENT_SUCCESS",
          "TASK_ASSIGNMENT_PENDING",
          "TASK_ASSIGNMENT_AWAITING_REVIEW",
          "TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW",
          "TASK_ASSIGNMENT_REVIEW_DENIED",
          "LABEL_ORDER_PENDING",
          "LABEL_ORDER_IN_PROGRESS",
          "LABEL_ORDER_SUCCESS",
          "LABEL_ORDER_CANCELED",
          "LICENSE_ACTIVE",
          "LICENSE_DOES_NOT_EXIST",
          "LICENSE_NEED_UPDATE",
          "LICENSE_EXPIRED",
          "LICENSE_REVOKED",
          "LICENSE_DELETED",
          "LICENSE_VOLUME_EXCEEDED",
          "PASSWORD_VALIDATION_SUCCESS",
          "PASSWORD_VALIDATION_FAILED",
          "PASSWORDPOLICY_INVALID_ARGUMENT",
          "FEATUREFLAG_CONFIG_NOT_FOUND",
          "FEATUREFLAG_INVALID_ARGUMENT",
          "FEATUREFLAG_BLOCKED",
          "MAINTENANCE_SUCCESS",
          "MAINTENANCE_FAILED",
          "DATASET_VERSION_PENDING",
          "DATASET_VERSION_IN_PROGRESS",
          "DATASET_VERSION_READY",
          "DATASET_VERSION_FAILURE",
          "DATASET_VERSION_UNEXPECTED_ERROR",
          "DATASET_VERSION_CONFLICT",
          "DATASET_INPUT_SUCCESS",
          "DATASET_INPUT_DUPLICATE",
          "DATASET_VERSION_EXPORT_SUCCESS",
          "DATASET_VERSION_EXPORT_PENDING",
          "DATASET_VERSION_EXPORT_FAILED",
          "DATASET_VERSION_EXPORT_IN_PROGRESS",
          "DATASET_VERSION_EXPORT_UNEXPECTED_ERROR",
          "JOB_QUEUED",
          "JOB_RUNNING",
          "JOB_COMPLETED",
          "JOB_FAILED",
          "JOB_CANCELLED",
          "JOB_UNEXPECTED_ERROR",
          "JOB_CONFLICT",
          "AUTH_MISSING_IDP_ASSOC",
          "LIST_OBJECTS_FAILED",
          "ARCHIVE_EXTRACT_FAILED",
          "UPLOAD_IN_PROGRESS",
          "UPLOAD_DONE",
          "UPLOAD_FAILED",
          "UPLOAD_UNEXPECTED_ERROR",
          "UPLOAD_EXPIRED",
          "UPLOAD_CANCELED",
          "UPLOAD_CONFLICT",
          "BILLING_INVALID_INFO",
          "INTERNAL_SERVER_ISSUE",
          "INTERNAL_FETCHING_ISSUE",
          "INTERNAL_DATABASE_ISSUE",
          "INTERNAL_CONTEXT_CANCELED",
          "INTERNAL_UNEXPECTED_TIMEOUT",
          "INTERNAL_UNEXPECTED_V1",
          "INTERNAL_UNEXPECTED_PANIC",
          "INTERNAL_UNEXPECTED_SPIRE",
          "INTERNAL_REDIS_UNAVAILABLE",
          "INTERNAL_RESOURCE_EXHAUSTED",
          "INTERNAL_REDIS_UNCATEGORIZED",
          "INTERNAL_AWS_UNCATEGORIZED",
          "INTERNAL_AZURE_UNCATEGORIZED",
          "CONN_UNCATEGORIZED",
          "MODEL_UNCATEGORIZED",
          "INPUT_UNCATEGORIZED",
          "ANNOTATION_UNCATEGORIZED",
          "BILLING_UNCATEGORIZED",
          "INTERNAL_UNCATEGORIZED",
          "BAD_REQUEST",
          "SERVER_ERROR"
        ],
        "default": "ZERO",
        "description": "expired cc, still in trial, feature not supported in your tier\n - CONN_TOKEN_INVALID: invalid auth token used. Deprecated: we should return CONN_KEY_INVALID instead now in all cases.\n - CONN_CREDENTIALS_INVALID: invalid auth credentials\n - CONN_EXCEED_HOURLY_LIMIT: throttle hourly limit exceeded\n - CONN_EXCEED_MONTHLY_LIMIT: throttle monthly limit exceeded\n - CONN_THROTTLED: throttler and billing stuff\n - CONN_EXCEEDS_LIMITS: throttler and billing stuff\n - CONN_INSUFFICIENT_SCOPES: api key has insufficient permissions\n - CONN_KEY_INVALID: api key is invalid\n - CONN_KEY_NOT_FOUND: api key not found\n - CONN_BAD_REQUEST_FORMAT: multipart form parsing, broken json, etc\n - CONN_DOES_NOT_EXIST: when path is bad\n - CONN_INVALID_REQUEST: something wrong with a header\n - CONN_METHOD_NOT_ALLOWED: when a request method is not allowed\n - CONN_NO_GDPR_CONSENT: lack GDPR consent\n - CONN_AUTH_METHOD_DISABLED: authentication method is disabled\n - MODEL_TRAINED: Model/Custom Training related 20xxx\n\nCustom model has been already trained.\n - MODEL_TRAINING: Custom model is currently training.\n - MODEL_UNTRAINED: Custom model has not yet been trained.\n - MODEL_QUEUED_FOR_TRAINING: Custom model is currently in queue for training, waiting on assets to process first.\n - MODEL_TRAINING_FAILED: generic err msg for any type of model training err.\n - MODEL_BUILDING: For new V3 DockerInternalType models which are built images\n - MODEL_BUILDING_FAILED: Failed to build image for model.\n - MODEL_BUILD_UNEXPECTED_ERROR: Failed to build image for model.\n - MODEL_TRAINING_NO_DATA: Custom model training had no data.  FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_NO_POSITIVES: Custom model training had no positive examples. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS: Custom model training was ONE_VS_N but with a single class. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_TIMED_OUT: Training took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_WAITING_ERROR: Training got error waiting on asset pipeline to finish. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_UNKNOWN_ERROR: Training threw an unknown exception.\n - MODEL_TRAINING_MSG_REDELIVER: Training message was redelivered. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_INSUFFICIENT_DATA: Training got error due to insufficient labelled data. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_INVALID_PARAMS: FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED: Training is stopped because too much data was dropped. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg\n - MODEL_EVALUATION_TIMED_OUT: Evaluation took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_WAITING_ERROR: Evaluation got error waiting on asset pipeline to finish.FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_UNKNOWN_ERROR: EVALUATION THREW AN UNKNOWN EXCEPTION.\n - MODEL_EVALUATION_MSG_REDELIVER: Eval message was redelivered. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_NEED_LABELS: Don't have enough concepts labelled to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_NEED_INPUTS: Don't have enough inputs per concept to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg\n - MODEL_EVALUATION_FAILED: Generic err code for eval failure.\n - MODEL_DEPLOYMENT_FAILED: Used when inference coordinator failed to deploy spire and throws an error\n - MODEL_DEPLOYING: Used when calling the inference coordinator to deploy a spire\n - MODEL_QUEUED_FOR_DEPLOYMENT: Used when training is completed\n - MODEL_NOT_DEPLOYED: Used when model spire deployment is manually taken down or due to inactivity\n - MODEL_REFERENCE_INVALID_ARGUMENT: Used when a model reference field is not set properly\n - MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT: Used when a model example input field is not set properly\n - MODEL_EXPORTED: Model Export status codes\n - WORKFLOW_NO_MATCHING_INPUT: specified model input not in workflow\n - WORKFLOW_REQUIRE_TRAINED_MODEL: specified model must be trained\n - WORKFLOW_INVALID_ARGUMENT: error in the request somewhere\n - WORKFLOW_INVALID_REQUEST: error in the request somewhere\n - CONCEPT_MODIFY_SUCCESS: Concept related 23xxx\n - ANNOTATION_SUCCESS: Annotation related 24xxx\n - METADATA_INVALID_PATCH_ARGUMENTS: Metadata related 249xx\n - TRAINER_JOB_STATE_NONE: Training service related 25xxx\n - DATA_DUMP_SUCCESS: Data Dump related 251xx\n - DATA_DUMP_NO_DATA: DEPRECATED: Not used anymore. Now for an empty data dump, DATA_DUMP_SUCCESS is returned. To detect an empty data dump, check if the inptus count is 0.\n - APP_DUPLICATION_SUCCESS: Duplicate related 252xx\n - MODULE_DOES_NOT_EXIST: Module related codes 253xx\n - BULK_OPERATION_SUCCESS: Bulk Operation related codes 254xx\n - RUNNER_DOES_NOT_EXIST: Runner related codes 256xx\n - NODEPOOL_DOES_NOT_EXIST: Nodepool related codes 257xx\n - COMPUTE_CLUSTER_DOES_NOT_EXIST: ComputeCluster related codes 258xx\n - INPUT_DOWNLOAD_SUCCESS: Input:Image related 30xxx\n - INPUT_DOWNLOAD_PENDING: when things are async, this is the default status.\n - INPUT_DOWNLOAD_FAILED: any type of error downloading and processing\n - INPUT_VIDEO_DOWNLOAD_SUCCESS: Input:Video related 31xxx -- Deprecated\n - INPUT_WRITES_DISABLED_FOR_MAINTENANCE: deprecate this one. Use REQUEST_DISABLED_FOR_MAINTENANCE\n - PREDICT_INVALID_REQUEST: API formatting issues 4000x\n - DATABASE_DUPLICATE_KEY: Other related 400xx\n - EXTERNAL_CONNECTION_ERROR: could not connect to external services\n - QUEUE_CONN_ERROR: Queue related errors 41xxx\n - SQS_OVERLIMIT: SQS related errors 411xx\n - SEARCH_INTERNAL_FAILURE: Search related errors 43xxxx\n - EVALUATION_QUEUED: Workflow evaluation err code\n - STRIPE_EVENT_ERROR: Stripe 44xxx\n - CACHE_MISS: Redis/Cache 45xxx\n - SIGNUP_EVENT_ERROR: Sift Science 46xxx\n - APP_COUNT_INVALID_MESSAGE: Application counts related errors 470xx\n - MP_DOWNLOAD_ERROR: Media processor related errors 471xx -- DEPRECATED\n - DATATIER_CONN_ERROR: DataTier related error 472xx\n - USER_CONSENT_FACE: User legal consent stauts related 50xxx\n - WORKER_MISSING: Workers 51xxx\n - COLLECTOR_MISSING: Collectors 52xxx\n - SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST: SSO 53xxx\n - TASK_IN_PROGRESS: Tasks 54xxx\nThe task was created.\n - TASK_DONE: The task is completed.\n - TASK_WONT_DO: The task is marked as abandoned.\n - TASK_FAILED: An error occurred during add-task-annotations or add-auto-annotations pipeline.\n - TASK_IDLE: When an Auto Annotation task job has finished processing its last batch and is waiting for more dataset assets.\n - TASK_CONFLICT: The task operation is in conflict with the current state of the server.\n - TASK_NOT_IMPLEMENTED: Certain task-related scenarios are not implemented.\n - TASK_MISSING: Task was not found.\n - TASK_PERMISSION_DENIED: Not allowed to perform a task-related action.\n - LABEL_ORDER_PENDING: Label Order Related Status Code 55xxx\n - LICENSE_ACTIVE: License Related Status Code 600xx\n - LICENSE_DELETED: hidden state not reflected to users\n - PASSWORD_VALIDATION_SUCCESS: Password Related Status Code\n - FEATUREFLAG_CONFIG_NOT_FOUND: Feature flags status code\n - MAINTENANCE_SUCCESS: Maintenance status code\n - DATASET_VERSION_PENDING: Datasets 64xxx\nThe dataset version is pending to be processed.\n - DATASET_VERSION_IN_PROGRESS: The dataset version is currently being processed.\n - DATASET_VERSION_READY: The dataset version is ready to be used.\n - DATASET_VERSION_FAILURE: An error occurred during the dataset version processing.\n - DATASET_VERSION_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version processing.\n - DATASET_VERSION_CONFLICT: An alteration to dataset version would create a conflict\n - DATASET_INPUT_SUCCESS: The dataset input was successfully added.\n - DATASET_INPUT_DUPLICATE: The dataset input is a duplicate.\nDeprecated: Unused.\n - DATASET_VERSION_EXPORT_SUCCESS: The dataset version export is completed.\n - DATASET_VERSION_EXPORT_PENDING: The dataset version is pending to be exported.\n - DATASET_VERSION_EXPORT_FAILED: An error occurred during the dataset version export.\n - DATASET_VERSION_EXPORT_IN_PROGRESS: The dataset version is currently being exported.\n - DATASET_VERSION_EXPORT_UNEXPECTED_ERROR: An unexpected error occurred during the dataset version export.\n - JOB_QUEUED: Generic Job status codes\n - AUTH_MISSING_IDP_ASSOC: auth issues\n\nTODO: Knowledge graph related 80xxx\n - UPLOAD_IN_PROGRESS: Multipart uploading status codes\n - BILLING_INVALID_INFO: Billing related issues: 69xxx\n - INTERNAL_SERVER_ISSUE: Internal issues: 98xxx\n - CONN_UNCATEGORIZED: Uncategorized: 99xxx: move off as soon as known\n - BAD_REQUEST: Deprecated: migrate off to one of the internal issues\n - SERVER_ERROR: Deprecated: migrate off to one of the internal issues",
        "title": "- ZERO: to be revised and greatly expanded\n - SUCCESS: Generic\n - MOVED: Resource moved. Respond with Http status 307 and add new Location header to response\n - TEAPOT: SUCCESS_WARNING_API_DEPRECATED = 10001;\nSUCCESS_WARNING_CLIENT_DEPRECATED = 10002;\n - CONN_ACCOUNT_ISSUES: Clarifai Connection Codes: 11xxx"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.clarifai.com"
    }
  ]
}