"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[6328],{5283:(e,t,n)=>{n.d(t,{A:()=>a});const a='from clarifai.client.app import App\n\napp = App(app_id="YOUR_APP_ID_HERE", user_id="YOUR_USER_ID_HERE",pat="YOUR_PAT_HERE")\n# Provide the dataset name as parameter in the create_dataset function\ndataset = app.create_dataset(dataset_id="annotations_dataset")'},27549:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>Y,contentTitle:()=>S,default:()=>N,frontMatter:()=>k,metadata:()=>a,toc:()=>w});const a=JSON.parse('{"id":"sdk/data-utils/ingestion-pipelines","title":"Data Ingestion Pipelines","description":"Pre-process and ingest diverse data formats, including images and text-based documents","source":"@site/docs/sdk/data-utils/ingestion-pipelines.md","sourceDirName":"sdk/data-utils","slug":"/sdk/data-utils/ingestion-pipelines","permalink":"/sdk/data-utils/ingestion-pipelines","draft":false,"unlisted":false,"editUrl":"https://github.com/Clarifai/docs/blob/main/docs/sdk/data-utils/ingestion-pipelines.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"description":"Pre-process and ingest diverse data formats, including images and text-based documents","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Image Annotation Loader","permalink":"/sdk/data-utils/image-annotation-loader"},"next":{"title":"Advanced Concept Management","permalink":"/sdk/advanced-concept-management"}}');var i=n(74848),s=n(28453),o=n(65537),r=n(79329),l=n(58069),c=n(5283);const d='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024)  \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Run the pipeline on a PDF file\n# Set `loader=False` to return the transformed chunks as elements instead of loading them into a dataset\nelements = pipeline.run(files=LOCAL_PDF_PATH, loader=False)\n\n# Print the resulting chunks (document elements)\nprint(elements)\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',u='from clarifai_datautils.multimodal import Pipeline\nfrom clarifai_datautils.multimodal.pipeline.PDF import PDFPartitionMultimodal  \nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartitionMultimodal(chunking_strategy="by_title", max_characters=1024)  \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',m='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="basic_pdf",  \n    transformations=[        \n        PDFPartition()  \n    ]\n)\n\n# Load predefined pipeline\npipeline = Pipeline.load(name="basic_pdf")\n\n# View the pipeline\npipeline.info()\n',p='from clarifai_datautils.multimodal import Pipeline, TextPartition  \nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        TextPartition(chunking_strategy="by_title", max_characters=1024)  \n    ]\n)\n\nLOCAL_TEXT_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.txt"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed text chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_TEXT_PATH, loader=True))\n',h='from clarifai_datautils.multimodal import Pipeline, DocxPartition  \nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        DocxPartition(chunking_strategy="by_title", max_characters=1024)  \n    ]\n)\n\nLOCAL_DOCX_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.docx"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed text chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_DOCX_PATH, loader=True))\n',x='from clarifai_datautils.multimodal import Pipeline, MarkdownPartition  \nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        MarkdownPartition(chunking_strategy="by_title", max_characters=1024)  \n    ]\n)\n\nLOCAL_MD_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.md"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed text chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_MD_PATH, loader=True))\n',_='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Clean_extra_whitespace\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Clean_extra_whitespace()\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',f='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Replace_unicode_quotes\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Replace_unicode_quotes()\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',D='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Clean_dashes\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Clean_dashes()\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',E='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Clean_bullets\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Clean_bullets()\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',j='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Group_broken_paragraphs\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Group_broken_paragraphs()\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',g='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Remove_punctuation\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Remove_punctuation()\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',A='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Bytes_string_to_string\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Bytes_string_to_string()\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',P='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Clean_non_ascii_chars\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Clean_non_ascii_chars()\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',b='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Clean_ordered_bullets\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Clean_ordered_bullets()\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',C='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Clean_prefix\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Clean_prefix(pattern="Example", ignore_case=True, strip=True)        \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',T='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.cleaners import Clean_postfix\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        Clean_postfix(pattern="Example", ignore_case=True, strip=True)        \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',R='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.extractors import ExtractDateTimeTz\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        ExtractDateTimeTz()    \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" \n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',y='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.extractors import ExtractEmailAddress\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        ExtractEmailAddress()    \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" \n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',v='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.extractors import ExtractIpAddress\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        ExtractIpAddress()    \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" \n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',I='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.extractors import ExtractIpAddressName\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        ExtractIpAddressName()    \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" \n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',U='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.extractors import ExtractTextAfter\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        ExtractTextAfter(key="example", string="Example:")    \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',L='from clarifai_datautils.multimodal import Pipeline, PDFPartition  \nfrom clarifai_datautils.multimodal.pipeline.extractors import ExtractTextBefore\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartition(chunking_strategy="by_title", max_characters=1024),\n        ExtractTextBefore(key="example", string="Example:")    \n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',F='from clarifai_datautils.multimodal import Pipeline, PDFPartitionMultimodal    \nfrom clarifai_datautils.multimodal.pipeline.summarizer import ImageSummarizer\nfrom clarifai.client import Dataset  \nimport os  \n\n# Set the Clarifai Personal Access Token (PAT) for authentication\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE"\n\n# Define the processing pipeline\npipeline = Pipeline(\n    name="pipeline-1",  \n    transformations=[        \n        PDFPartitionMultimodal(chunking_strategy="by_title", max_characters=1024),\n        ImageSummarizer(model_url="https://clarifai.com/openai/chat-completion/models/gpt-4o") # You can use any other multimodal-to-text model available on the Clarifai platform\n    ]\n)\n\nLOCAL_PDF_PATH = "YOUR_LOCAL_PDF_PATH_HERE" # Example: "./assets/multimodal/DA-1p.pdf"\n\n# Initialize dataset object for ingesting data\ndataset = Dataset(user_id="YOUR_USER_ID_HERE", app_id="YOUR_APP_ID_HERE", dataset_id="YOUR_DATASET_ID_HERE")\n\n# Alternative: Initialize the dataset using a dataset URL (commented out)\n# dataset = Dataset("DATASET_URL_HERE")\n\n# Use Python SDK to upload the processed PDF chunks to Clarifai\ndataset.upload_dataset(pipeline.run(files=LOCAL_PDF_PATH, loader=True))\n',H="Transforming Files: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:06<00:00,  6.82s/it]\n[<unstructured.documents.elements.CompositeElement object at 0x0000013D30FE63F0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D314540B0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31454B90>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31335760>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31355370>, <unstructured.documents.elements.CompositeElement object at 0x0000013D315034D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D314C53D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31501C40>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31500F80>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31501370>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502DB0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502D50>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31501F40>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31501190>, <unstructured.documents.elements.CompositeElement object at 0x0000013D315008F0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502CC0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31500470>, <unstructured.documents.elements.CompositeElement object at 0x0000013D315017C0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502060>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31503410>, <unstructured.documents.elements.CompositeElement object at 0x0000013D315028D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31500770>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502D80>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502810>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502090>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31503320>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31501670>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31503AA0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31500DA0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502300>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31503200>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502EA0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D315018B0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31503A70>, <unstructured.documents.elements.CompositeElement object at 0x0000013D315023C0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31501520>, <unstructured.documents.elements.CompositeElement object at 0x0000013D315013A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502C60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D315000E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31502540>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322805F0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280D10>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282780>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322837A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282870>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281B50>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322838C0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281BE0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280200>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283680>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282C60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322823C0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283350>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283D10>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280950>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282750>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283560>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322809E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280FB0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281010>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322801A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322823F0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281400>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322808F0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283800>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280530>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282060>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283110>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322821E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281640>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281490>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281100>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280CE0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280290>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281820>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283500>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281A60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282B40>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280B60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282CC0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281A90>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281190>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280C20>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281C40>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322838F0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280EF0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281D00>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281850>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280DD0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322812E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280CB0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322803E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283D40>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280BF0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280500>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322827E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283EF0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281280>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283E90>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283890>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282240>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281250>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322836E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322803B0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280650>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322811C0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283DD0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280C80>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283C50>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282000>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281730>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322824B0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322834D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282D50>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282CF0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282420>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283AA0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322818B0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280C50>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283470>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283380>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322822D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322815B0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283590>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280E90>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280A70>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280F50>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281CD0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283440>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322804D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283B60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281D30>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282D80>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322825A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32283020>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322802C0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322820F0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281B20>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280A40>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322820C0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322810A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32282690>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281670>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322808C0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281460>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32280800>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281550>, <unstructured.documents.elements.CompositeElement object at 0x0000013D32281D60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D322831D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31387020>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31387E30>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31387470>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31384380>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313846B0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31384E90>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31387680>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31385070>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31386D20>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31387B60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31385A90>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31386600>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313842C0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313871A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31386C90>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302EA0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313025A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300F80>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31303650>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313031A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31303890>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302450>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302B70>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31303B00>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302FF0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300E00>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31303830>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301430>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313027E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300590>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313013D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301160>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301E20>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302930>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300410>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302C90>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301D30>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313016A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301B50>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300260>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31303C80>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31303170>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313009E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302F60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302120>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301A60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301700>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300C50>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313018E0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301880>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313034A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313028D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313004D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300FB0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313027B0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302AB0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313016D0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301EB0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31303B60>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302840>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300C20>, <unstructured.documents.elements.CompositeElement object at 0x0000013D313004A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31303200>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300290>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31302D80>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31300AA0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31301F70>, <unstructured.documents.elements.CompositeElement object at 0x0000013D314B1100>, <unstructured.documents.elements.CompositeElement object at 0x0000013D314B2000>, <unstructured.documents.elements.CompositeElement object at 0x0000013D314B10A0>, <unstructured.documents.elements.CompositeElement object at 0x0000013D314B3C80>, <unstructured.documents.elements.CompositeElement object at 0x0000013D314B1040>, <unstructured.documents.elements.CompositeElement object at 0x0000013D314B2E40>, <unstructured.documents.elements.CompositeElement object at 0x0000013D31336060>]\nTransforming Files: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:06<00:00,  6.73s/it] \nUploading Dataset: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 7/7 [00:16<00:00,  2.42s/it] \n",O="Pipeline: basic_pdf\n        <clarifai_datautils.multimodal.pipeline.PDF.PDFPartition object at 0x0000017BFFC92000>\n",k={description:"Pre-process and ingest diverse data formats, including images and text-based documents",sidebar_position:2},S="Data Ingestion Pipelines",Y={},w=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install Python SDK and Data Utils",id:"install-python-sdk-and-data-utils",level:3},{value:"Install Extra Dependencies",id:"install-extra-dependencies",level:3},{value:"Get a PAT",id:"get-a-pat",level:3},{value:"Create a Dataset",id:"create-a-dataset",level:3},{value:"Building Pipelines",id:"building-pipelines",level:2},{value:"Partitioning &amp; Chunking",id:"partitioning--chunking",level:2},{value:"PDF Partitioning",id:"pdf-partitioning",level:3},{value:"PDF Partitioning Multimodal",id:"pdf-partitioning-multimodal",level:3},{value:"Text Partitioning",id:"text-partitioning",level:3},{value:"Docx Partitioning",id:"docx-partitioning",level:3},{value:"Markdown Partitioning",id:"markdown-partitioning",level:3},{value:"Image Summarization",id:"image-summarization",level:2},{value:"Text Cleaning",id:"text-cleaning",level:2},{value:"Clean Extra Whitespaces",id:"clean-extra-whitespaces",level:3},{value:"Replace Unicode Quotes",id:"replace-unicode-quotes",level:3},{value:"Clean Dashes",id:"clean-dashes",level:3},{value:"Clean Bullets",id:"clean-bullets",level:3},{value:"Group Broken Paragraphs",id:"group-broken-paragraphs",level:3},{value:"Remove Punctuations",id:"remove-punctuations",level:3},{value:"Convert Byte Strings",id:"convert-byte-strings",level:3},{value:"Clean Non-ASCII Characters",id:"clean-non-ascii-characters",level:3},{value:"Clean Ordered Bullets",id:"clean-ordered-bullets",level:3},{value:"Clean Prefix",id:"clean-prefix",level:3},{value:"Clean Postfix",id:"clean-postfix",level:3},{value:"Text Extraction",id:"text-extraction",level:2},{value:"Extract Email Addresses",id:"extract-email-addresses",level:3},{value:"Datetime With Time Zones",id:"datetime-with-time-zones",level:3},{value:"Extract IP Addresses",id:"extract-ip-addresses",level:3},{value:"Extract IP Addresses Names",id:"extract-ip-addresses-names",level:3},{value:"Extract Text After",id:"extract-text-after",level:3},{value:"Extract Text Before",id:"extract-text-before",level:3}];function z(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:a}=t;return a||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"data-ingestion-pipelines",children:"Data Ingestion Pipelines"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Pre-process and ingest diverse data formats, including images and text-based documents"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.a,{href:"https://github.com/Clarifai/examples/tree/main/Data_Utils/Ingestion%20pipelines",children:"Data Ingestion Pipelines"})," framework, part of the Data Utils library, offers a comprehensive suite of robust functions \u2014 commonly referred to as pipelines \u2014 designed to pre-process, transform, and prepare images and text documents for seamless ingestion into the Clarifai platform."]}),"\n",(0,i.jsxs)(t.p,{children:["These ready-to-use pipelines enable efficient processing of unstructured data, including partitioning, chunking, cleaning, and extracting valuable information, ensuring the data is optimized for downstream use cases such as ",(0,i.jsx)(t.a,{href:"https://docs.clarifai.com/portal-guide/agent-system-operators/rag-prompter",children:"Retrieval Augmented Generation"})," (RAG)."]}),"\n",(0,i.jsxs)(t.p,{children:["Leveraging the capabilities of the open-source ",(0,i.jsx)(t.a,{href:"https://docs.unstructured.io/welcome",children:"Unstructured"})," library, this framework is designed to streamline data processing workflows, making it an essential tool for working with Large Language Models (LLMs) and other AI-driven applications."]}),"\n",(0,i.jsx)(t.p,{children:"It supports these file formats:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"PDF"}),"\n",(0,i.jsx)(t.li,{children:"Text (.txt)"}),"\n",(0,i.jsx)(t.li,{children:"Docx"}),"\n",(0,i.jsx)(t.li,{children:"Markdown"}),"\n"]}),"\n","\n","\n","\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(t.h3,{id:"install-python-sdk-and-data-utils",children:"Install Python SDK and Data Utils"}),"\n",(0,i.jsxs)(t.p,{children:["Install the latest version of the ",(0,i.jsx)(t.code,{children:"clarifai"})," Python SDK package. Also, install the Data Utils library."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"bash",label:"Bash",children:(0,i.jsx)(l.A,{className:"language-text",children:(0,i.jsx)(t.p,{children:"pip install --upgrade clarifai\npip install clarifai-datautils"})})})}),"\n",(0,i.jsx)(t.h3,{id:"install-extra-dependencies",children:"Install Extra Dependencies"}),"\n",(0,i.jsxs)(t.p,{children:["The Data Ingestion Pipelines framework requires additional libraries to function properly. First, create a ",(0,i.jsx)(t.code,{children:"requirements-dev.txt"})," file and add the following dependencies:"]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"text",label:"Text",children:(0,i.jsx)(l.A,{className:"language-text",children:(0,i.jsxs)(t.p,{children:["unstructured[pdf] @ git+",(0,i.jsx)(t.a,{href:"https://github.com/clarifai/unstructured.git@support_clarifai_model",children:"https://github.com/clarifai/unstructured.git@support_clarifai_model"}),"\nllama-index-core==0.10.33\nllama-index-llms-clarifai==0.1.2\npi_heif==0.18.0\nmarkdown==3.7\npython-docx==1.1.2\nschema==0.7.5"]})})})}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsxs)(t.em,{children:["Note that this command ",(0,i.jsx)(t.code,{children:"pip install unstructured[pdf] @ git+https://github.com/clarifai/unstructured.git@support_clarifai_model"})," installs the ",(0,i.jsx)(t.code,{children:"support_clarifai_model"})," branch from the ",(0,i.jsxs)(t.a,{href:"https://github.com/Clarifai/unstructured/tree/support_clarifai_model",children:["Clarifai fork of ",(0,i.jsx)(t.code,{children:"unstructured"}),"library"]}),"."]})}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Then, run the following command to install the required dependencies:"}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"bash",label:"Bash",children:(0,i.jsx)(l.A,{className:"language-text",children:(0,i.jsx)(t.p,{children:"pip install -r requirements-dev.txt"})})})}),"\n",(0,i.jsx)(t.p,{children:"You can also install the following system dependencies if they are not already available on your system. Based on the document types you're handling, you may not need all of them."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://pypi.org/project/opencv-python-headless/",children:(0,i.jsx)(t.code,{children:"opencv-python-headless"})})," \u2014  A lightweight version of OpenCV (Open Source Computer Vision Library) designed for environments where GUI functionalities (such as image or video display) are not needed. You can install it by running: ",(0,i.jsx)(t.code,{children:"pip install opencv-python-headless"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://pypi.org/project/poppler-utils/",children:(0,i.jsx)(t.code,{children:"poppler-utils"})})," \u2014 Essential for processing and extracting data from PDF files. You can install it by running: ",(0,i.jsx)(t.code,{children:"sudo apt update && sudo apt install poppler-utils"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/tesseract-ocr/tessdoc",children:(0,i.jsx)(t.code,{children:"tesseract-ocr"})})," \u2014 Required for performing OCR on images or scanned documents to extract text. You can install it by running: ",(0,i.jsx)(t.code,{children:"sudo apt update && sudo apt install tesseract-ocr"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://mesa3d.org/",children:(0,i.jsx)(t.code,{children:"libgl1-mesa-glx"})})," \u2014 Ensures compatibility with graphical operations, which may be required by certain libraries (e.g., OpenCV) even in headless environments. You can install it by running: ",(0,i.jsx)(t.code,{children:"sudo apt update && sudo apt install libgl1-mesa-glx"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://www.nltk.org/api/nltk.tokenize.html",children:(0,i.jsx)(t.code,{children:"punkt_tab"})})," \u2014 Enables tokenization of text data with tab-separated values; it's part of the NLTK library. You can install it by running: ",(0,i.jsx)(t.code,{children:"nltk.download('punkt_tab')"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://www.nltk.org/api/nltk.tag.html",children:(0,i.jsx)(t.code,{children:"averaged_perceptron_tagger_eng"})})," \u2014 Provides a pre-trained model for accurate part-of-speech tagging in English; it's part of the NLTK library. You can install it by running: ",(0,i.jsx)(t.code,{children:"nltk.download('averaged_perceptron_tagger_eng')"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"get-a-pat",children:"Get a PAT"}),"\n",(0,i.jsxs)(t.p,{children:["You need a PAT (Personal Access Token) key to authenticate your connection to the Clarifai platform. You can generate it in your Personal Settings page by navigating to the ",(0,i.jsx)(t.a,{href:"https://clarifai.com/settings/security",children:"Security section"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Then, set it as an environment variable in your script."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:(0,i.jsx)(t.p,{children:'import os\nos.environ["CLARIFAI_PAT"] = "YOUR_PAT_HERE" # replace with your own PAT key'})})})}),"\n",(0,i.jsx)(t.h3,{id:"create-a-dataset",children:"Create a Dataset"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://docs.clarifai.com/sdk/managing-datasets#creating-datasets",children:"Create a dataset"})," on the Clarifai platform to use for uploading your pre-processed data."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:c.A})})}),"\n",(0,i.jsx)(t.h2,{id:"building-pipelines",children:"Building Pipelines"}),"\n",(0,i.jsx)(t.p,{children:"When working with unstructured documents like PDFs, building pipelines is a crucial step to automate the processing and transformation of data."}),"\n",(0,i.jsx)(t.p,{children:"Here is an example of a basic pipeline for PDF partitioning."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:m})})}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Output Example"}),(0,i.jsx)(l.A,{className:"language-text",children:O})]}),"\n",(0,i.jsx)(t.p,{children:"Note that:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Pipeline"})," and ",(0,i.jsx)(t.code,{children:"PDFPartition"})," classes are imported from ",(0,i.jsx)(t.code,{children:"clarifai_datautils.multimodal"}),". These are used to define and execute processing pipelines for PDF documents."]}),"\n",(0,i.jsxs)(t.li,{children:["A ",(0,i.jsx)(t.code,{children:"Pipeline"})," object is created with the name ",(0,i.jsx)(t.code,{children:'"basic_pdf"'}),". You can provide any arbitrary name for the pipeline. The name can be used to identify or call the pipeline."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"PDFPartition()"})," uses ",(0,i.jsx)(t.a,{href:"https://github.com/Clarifai/clarifai-python-datautils/blob/main/clarifai_datautils/constants/pipeline.py",children:"default parameters"})," (such as ",(0,i.jsx)(t.code,{children:"max_characters=500"}),") for ingesting PDFs."]}),"\n",(0,i.jsx)(t.li,{children:"After loading a predefined pipeline, you can view its details."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"partitioning--chunking",children:"Partitioning & Chunking"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://docs.unstructured.io/open-source/core-functionality/partitioning",children:"Partitioning"})," is the first step in document processing. It breaks down a raw, unstructured document into smaller, meaningful units called document elements, while preserving the document\u2019s semantic structure."]}),"\n",(0,i.jsx)(t.p,{children:"These elements \u2014 such as paragraphs, titles, tables, and images \u2014 help maintain the original context. The process involves reading the document, segmenting it into sections, categorizing those sections, and extracting the relevant text."}),"\n",(0,i.jsx)(t.p,{children:'Chunking follows partitioning and involves grouping or rearranging document elements generated by partitioning into "chunks" based on specific size constraints or criteria. This step ensures that the resulting segments are optimized for use cases like search, summarization, or content retrieval.'}),"\n",(0,i.jsxs)(t.admonition,{type:"info",children:[(0,i.jsxs)(t.p,{children:["Once a chunk of text or image data is uploaded to the Clarifai platform, ",(0,i.jsx)(t.a,{href:"https://docs.clarifai.com/portal-guide/input-viewer/",children:"metadata fields"})," \u2014 such as ",(0,i.jsx)(t.code,{children:"filename"}),", ",(0,i.jsx)(t.code,{children:"page_number"}),", ",(0,i.jsx)(t.code,{children:"orig_elements"}),", and ",(0,i.jsx)(t.code,{children:"type"})," \u2014 are automatically added to provide detailed information about the uploaded input."]}),(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Example"}),(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(53882).A+"",width:"1909",height:"903"})})]})]}),"\n",(0,i.jsx)(t.h3,{id:"pdf-partitioning",children:"PDF Partitioning"}),"\n",(0,i.jsx)(t.p,{children:"PDF partitioning helps transform PDFs into a structured format that can be used for further processing."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:d})})}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Output Example"}),(0,i.jsx)(l.A,{className:"language-text",children:H})]}),"\n",(0,i.jsx)(t.p,{children:"Note that:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The transformation step uses the ",(0,i.jsx)(t.code,{children:"PDFPartition"})," object to partition the PDF into smaller chunks.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"chunking_strategy"})," is set to ",(0,i.jsx)(t.code,{children:'"by_title"'}),", meaning the document is split based on its title sections."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"max_characters"})," limits each chunk to 1024 characters for better processing and retrieval efficiency. The default behavior is 500 characters."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"loader=False"}),", which is the default, argument ensures the transformed chunks are returned as Python objects (",(0,i.jsx)(t.code,{children:"elements"}),"), allowing for local inspection or further processing. Conversely, setting ",(0,i.jsx)(t.code,{children:"loader=True"})," directly ingests the transformed chunks into a Clarifai dataset instead of just returning them locally."]}),"\n",(0,i.jsxs)(t.li,{children:["The partitioned and chunked PDF elements are uploaded to a Clarifai dataset. The uploaded data is automatically ",(0,i.jsx)(t.a,{href:"https://docs.clarifai.com/portal-guide/input-viewer/",children:"annotated"})," with the pipeline name on the Clarifai platform. This makes it easy to identify and distinguish between data processed through different pipelines."]}),"\n"]}),"\n",(0,i.jsxs)(t.admonition,{title:"tips",type:"note",children:[(0,i.jsxs)(t.p,{children:["You can also configure the following arguments for the ",(0,i.jsx)(t.code,{children:"PDFPartition"})," object:"]}),(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Set ",(0,i.jsx)(t.code,{children:'chunking_strategy="basic"'})," for the document to be chunked purely based on character length and sequential order rather than structural elements like section titles or page boundaries. It's useful when you simply want to group text into evenly sized chunks without preserving the document\u2019s logical structure."]}),"\n",(0,i.jsxs)(t.li,{children:["Set ",(0,i.jsx)(t.code,{children:"ocr=True"})," to enable OCR for extracting text from scanned or image-based PDFs. Set it to ",(0,i.jsx)(t.code,{children:"False"}),", which is the default, to disable OCR."]}),"\n",(0,i.jsxs)(t.li,{children:["By default, ",(0,i.jsx)(t.code,{children:"overlap=None"})," or ",(0,i.jsx)(t.code,{children:"overlap=0"}),"  ensures no overlap between chunks; that is, chunks are created without any shared text between them. To enable overlap, provide an integer value (e.g., ",(0,i.jsx)(t.code,{children:"overlap=100"}),") to specify the number of overlapping characters between consecutive chunks."]}),"\n",(0,i.jsxs)(t.li,{children:["Set ",(0,i.jsx)(t.code,{children:"overlap_all=True"})," to enable overlapping across all chunks. Set it to ",(0,i.jsx)(t.code,{children:"False"}),", which is the default, to disable this behavior."]}),"\n",(0,i.jsxs)(t.li,{children:["Set ",(0,i.jsx)(t.code,{children:'strategy="ocr_only"'})," to force the document to be processed using the Tesseract OCR strategy. If Tesseract is unavailable and the document contains extractable text, it falls back to the ",(0,i.jsx)(t.code,{children:'"fast"'})," strategy. Set ",(0,i.jsx)(t.code,{children:'strategy="fast"'})," to extract text using ",(0,i.jsx)(t.code,{children:"pdfminer"}),", which is faster and suitable for text-based PDFs. Otherwise, ",(0,i.jsx)(t.code,{children:'strategy="auto"'})," is the default that selects the partitioning strategy based on document characteristics and the function kwargs."]}),"\n",(0,i.jsxs)(t.li,{children:["Use ",(0,i.jsx)(t.code,{children:"clarifai_ocr_model"})," to set the URL of a Clarifai OCR model for processing the document. The default is ",(0,i.jsx)(t.code,{children:"None"}),"."]}),"\n"]})]}),"\n",(0,i.jsx)(t.h3,{id:"pdf-partitioning-multimodal",children:"PDF Partitioning Multimodal"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"PDFPartitionMultimodal"})," ingestion pipeline supports multimodal scenarios, where files containing a mix of text, images, and other elements are to be processed and ingested into the Clarifai platform."]}),"\n",(0,i.jsx)(t.p,{children:"We use the Clarifai-hosted YOLOX object detection model to process the PDFs containing embedded images."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:u})})}),"\n",(0,i.jsx)(t.p,{children:"Note that:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The",(0,i.jsx)(t.code,{children:"PDFPartitionMultimodal"})," supports the following arguments for configuration: ",(0,i.jsx)(t.code,{children:"chunking_strategy"}),", ",(0,i.jsx)(t.code,{children:"max_characters"}),", ",(0,i.jsx)(t.code,{children:"overlap"}),", and ",(0,i.jsx)(t.code,{children:"overlap_all"}),", which have been explained earlier."]}),"\n"]}),"\n",(0,i.jsxs)(t.admonition,{title:"tips",type:"note",children:[(0,i.jsxs)(t.p,{children:["You can also configure the following arguments for the ",(0,i.jsx)(t.code,{children:"PDFPartitionMultimodal"})," object:"]}),(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["By default, ",(0,i.jsx)(t.code,{children:"extract_images_in_pdf=True"})," extracts images from a PDF file. In that case, the partitioning strategy is set as ",(0,i.jsx)(t.code,{children:'strategy="hi_res"'}),", which is intended to identify the layout of the document and gain additional information about the document elements. Otherwise, set ",(0,i.jsx)(t.code,{children:"extract_images_in_pdf=False"})," to disable this behavior."]}),"\n",(0,i.jsxs)(t.li,{children:["Set ",(0,i.jsx)(t.code,{children:'extract_image_block_types=["Image"]'})," to specify that you want to extract a list of image block types."]}),"\n",(0,i.jsxs)(t.li,{children:["Set ",(0,i.jsx)(t.code,{children:"extract_image_block_to_payload=True"})," to allow for the conversion of extracted images from a PDF into base64 format (return images as bytes). Note that to use this feature, you must set the ",(0,i.jsx)(t.code,{children:"strategy"})," parameter to ",(0,i.jsx)(t.code,{children:"hi_res"})," and ",(0,i.jsx)(t.code,{children:"extract_images_in_pdf"})," to ",(0,i.jsx)(t.code,{children:"True"}),". Otherwise, set ",(0,i.jsx)(t.code,{children:"extract_image_block_to_payload=False"})," to disable this behavior."]}),"\n"]})]}),"\n",(0,i.jsx)(t.h3,{id:"text-partitioning",children:"Text Partitioning"}),"\n",(0,i.jsxs)(t.p,{children:["Text partitioning transforms unstructured ",(0,i.jsx)(t.code,{children:".txt"})," documents into text elements, making them easier to process, analyze, and utilize in downstream applications."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:p})})}),"\n",(0,i.jsx)(t.p,{children:"Note that:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"TextPartition"})," object supports the following arguments for configuration:  ",(0,i.jsx)(t.code,{children:"chunking_strategy"}),", ",(0,i.jsx)(t.code,{children:"max_characters"}),", ",(0,i.jsx)(t.code,{children:"overlap"}),", and ",(0,i.jsx)(t.code,{children:"overlap_all"}),", which have been explained earlier."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"docx-partitioning",children:"Docx Partitioning"}),"\n",(0,i.jsxs)(t.p,{children:["Docx partitioning processes ",(0,i.jsx)(t.code,{children:".docx"})," files, extracting and partitioning their contents into structured text elements."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:h})})}),"\n",(0,i.jsx)(t.p,{children:"Note that:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"DocxPartition"})," object supports the following arguments for configuration:  ",(0,i.jsx)(t.code,{children:"chunking_strategy"}),", ",(0,i.jsx)(t.code,{children:"max_characters"}),", ",(0,i.jsx)(t.code,{children:"overlap"}),", and ",(0,i.jsx)(t.code,{children:"overlap_all"}),", which have been explained earlier."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"markdown-partitioning",children:"Markdown Partitioning"}),"\n",(0,i.jsxs)(t.p,{children:["Markdown partitioning processes ",(0,i.jsx)(t.code,{children:".md"})," files, breaking them down into structured text elements for improved usability in downstream applications."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:x})})}),"\n",(0,i.jsx)(t.p,{children:"Note that:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"MarkdownPartition"})," object supports the following arguments for configuration:  ",(0,i.jsx)(t.code,{children:"chunking_strategy"}),", ",(0,i.jsx)(t.code,{children:"max_characters"}),", ",(0,i.jsx)(t.code,{children:"overlap"}),", and ",(0,i.jsx)(t.code,{children:"overlap_all"}),", which have been explained earlier."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"image-summarization",children:"Image Summarization"}),"\n",(0,i.jsx)(t.p,{children:"The Image Summarizer pipeline enables you to utilize a Clarifai's multimodal-to-text model to generate text summaries for the uploaded image data."}),"\n",(0,i.jsx)(t.p,{children:"Each summary is stored as an individual input on the Clarifai platform, and you can view its metadata field to see the source image it\u2019s associated with."}),"\n",(0,i.jsx)(t.p,{children:"The generated summaries are concise, optimized for retrieval, and enriched with relevant keywords, making them highly effective for search and indexing."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:F})})}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Example"}),(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(60064).A+"",width:"1912",height:"901"})})]}),"\n",(0,i.jsx)(t.h2,{id:"text-cleaning",children:"Text Cleaning"}),"\n",(0,i.jsx)(t.p,{children:"The Data Ingestion Pipelines framework allows you to prepare and refine raw text data by removing or correcting unwanted elements to improve readability, consistency, and usability for downstream applications."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["The following examples use the ",(0,i.jsx)(t.code,{children:"PDFPartition"})," object, but they can also be applied to any other supported partitioning objects."]})}),"\n",(0,i.jsx)(t.h3,{id:"clean-extra-whitespaces",children:"Clean Extra Whitespaces"}),"\n",(0,i.jsx)(t.p,{children:"You can remove unnecessary spaces, tabs, or newlines from documents."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:_})})}),"\n",(0,i.jsx)(t.h3,{id:"replace-unicode-quotes",children:"Replace Unicode Quotes"}),"\n",(0,i.jsx)(t.p,{children:"You can replace Unicode quotes with ASCII quotes for standardization."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:f})})}),"\n",(0,i.jsx)(t.h3,{id:"clean-dashes",children:"Clean Dashes"}),"\n",(0,i.jsx)(t.p,{children:"You can remove unnecessary dashes from texts."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:D})})}),"\n",(0,i.jsx)(t.h3,{id:"clean-bullets",children:"Clean Bullets"}),"\n",(0,i.jsx)(t.p,{children:"You can remove unnecessary bullets from texts."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:E})})}),"\n",(0,i.jsx)(t.h3,{id:"group-broken-paragraphs",children:"Group Broken Paragraphs"}),"\n",(0,i.jsx)(t.p,{children:"You can merge fragmented paragraphs that were unintentionally split, restoring proper text flow and improving readability."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:j})})}),"\n",(0,i.jsx)(t.h3,{id:"remove-punctuations",children:"Remove Punctuations"}),"\n",(0,i.jsx)(t.p,{children:"You can remove unnecessary punctuations from texts."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:g})})}),"\n",(0,i.jsx)(t.h3,{id:"convert-byte-strings",children:"Convert Byte Strings"}),"\n",(0,i.jsxs)(t.p,{children:["You can convert a byte string (such as ",(0,i.jsx)(t.code,{children:"b'hello'"}),") into a regular string (",(0,i.jsx)(t.code,{children:"'hello'"}),"), ensuring proper text formatting and usability."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:A})})}),"\n",(0,i.jsx)(t.h3,{id:"clean-non-ascii-characters",children:"Clean Non-ASCII Characters"}),"\n",(0,i.jsx)(t.p,{children:"You can remove non-ASCII characters from text, ensuring compatibility with systems that only support standard ASCII encoding."}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:P})})}),"\n",(0,i.jsx)(t.h3,{id:"clean-ordered-bullets",children:"Clean Ordered Bullets"}),"\n",(0,i.jsxs)(t.p,{children:["You can remove ordered bullet points(such as ",(0,i.jsx)(t.code,{children:"1."}),", ",(0,i.jsx)(t.code,{children:"2)"}),", or ",(0,i.jsx)(t.code,{children:"III."}),") from text."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:b})})}),"\n",(0,i.jsx)(t.h3,{id:"clean-prefix",children:"Clean Prefix"}),"\n",(0,i.jsxs)(t.p,{children:["You can remove a specified prefix from a document. The ",(0,i.jsx)(t.code,{children:"Clean_prefix"})," object supports the following arguments:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"pattern"})," \u2014 Defines the prefix to remove. The pattern must be provided, and it can be a simple string or a regex pattern."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ignore_case"})," (optional, default is ",(0,i.jsx)(t.code,{children:"False"}),") \u2014 Determines whether to ignore case. If ",(0,i.jsx)(t.code,{children:"True"}),", ensures case-insensitive matching."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"strip"})," (optional, default is ",(0,i.jsx)(t.code,{children:"True"}),") \u2014 If ",(0,i.jsx)(t.code,{children:"True"}),", removes any leading whitespace after the prefix is removed."]}),"\n"]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:C})})}),"\n",(0,i.jsx)(t.h3,{id:"clean-postfix",children:"Clean Postfix"}),"\n",(0,i.jsxs)(t.p,{children:["You can remove a specified postfix from a document using the ",(0,i.jsx)(t.code,{children:"Clean_postfix"})," object, which supports the same arguments as ",(0,i.jsx)(t.code,{children:"Clean_prefix"}),"."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:T})})}),"\n",(0,i.jsx)(t.h2,{id:"text-extraction",children:"Text Extraction"}),"\n",(0,i.jsx)(t.p,{children:"The Data Ingestion Pipelines framework allows you to identify and retrieve meaningful texts from documents."}),"\n",(0,i.jsx)(t.h3,{id:"extract-email-addresses",children:"Extract Email Addresses"}),"\n",(0,i.jsxs)(t.p,{children:["You can extract email addresses from texts. Note that if a chunk contains the addresses, they will be extracted and stored in the ",(0,i.jsx)(t.code,{children:"email_address"})," metadata field of the uploaded input on the Clarifai platform, ",(0,i.jsx)(t.a,{href:"#partitioning--chunking",children:"as previously mentioned"}),"."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:y})})}),"\n",(0,i.jsx)(t.h3,{id:"datetime-with-time-zones",children:"Datetime With Time Zones"}),"\n",(0,i.jsxs)(t.p,{children:["You can extract datetime values with time zones from texts, ensuring accurate timestamp retrieval. Note that if a chunk contains the values, they will be extracted and stored in the ",(0,i.jsx)(t.code,{children:"date_time"})," metadata field of the uploaded input on the Clarifai platform."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:R})})}),"\n",(0,i.jsx)(t.h3,{id:"extract-ip-addresses",children:"Extract IP Addresses"}),"\n",(0,i.jsxs)(t.p,{children:["You can extract IP addresses from texts. Note that if a chunk contains the addresses, they will be extracted and stored in the ",(0,i.jsx)(t.code,{children:"ip_address"})," metadata field of the uploaded input on the Clarifai platform."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:v})})}),"\n",(0,i.jsx)(t.h3,{id:"extract-ip-addresses-names",children:"Extract IP Addresses Names"}),"\n",(0,i.jsxs)(t.p,{children:["You can extract IP addresses along with associated names from texts. Note that if a chunk contains the names, they will be extracted and stored in the ",(0,i.jsx)(t.code,{children:"ip_address_name"})," metadata field of the uploaded input on the Clarifai platform."]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:I})})}),"\n",(0,i.jsx)(t.h3,{id:"extract-text-after",children:"Extract Text After"}),"\n",(0,i.jsxs)(t.p,{children:["You can extract text appearing after a specified string in a given text input. The ",(0,i.jsx)(t.code,{children:"ExtractTextAfter"})," object supports the following string arguments:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"key"})," \u2014 Key to store the extracted text in the metadata field of the uploaded input on the Clarifai platform."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"string"})," \u2014 The reference string after which the text will be extracted."]}),"\n"]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:U})})}),"\n",(0,i.jsx)(t.h3,{id:"extract-text-before",children:"Extract Text Before"}),"\n",(0,i.jsxs)(t.p,{children:["You can extract text appearing before a specified string in a given text input. The ",(0,i.jsx)(t.code,{children:"ExtractTextBefore"})," object supports the following string arguments:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"key"})," \u2014 Key to store the extracted text in the metadata field of the uploaded input on the Clarifai platform."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"string"})," \u2014 The reference string before which the text will be extracted."]}),"\n"]}),"\n",(0,i.jsx)(o.A,{children:(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(l.A,{className:"language-python",children:L})})})]})}function N(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(z,{...e})}):z(e)}},53882:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/metadata-datautils-d2b9d95be611e15917bd042ef50c855c.png"},60064:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/summarizer_datautils-618aef713ec6d03699ecd52154256400.png"},65537:(e,t,n)=>{n.d(t,{A:()=>A});var a=n(96540),i=n(18215),s=n(65627),o=n(56347),r=n(50372),l=n(30604),c=n(11861),d=n(78749);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const i=(0,o.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(i.location.search);t.set(s,e),i.replace({...i.location,search:t.toString()})}),[s,i])]}function x(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,s=m(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[c,u]=h({queryString:n,groupId:i}),[x,_]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,s]=(0,d.Dv)(n);return[i,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:i}),f=(()=>{const e=c??x;return p({value:e,tabValues:s})?e:null})();(0,r.A)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),_(e)}),[u,_,s]),tabValues:s}}var _=n(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var D=n(74848);function E(e){let{className:t,block:n,selectedValue:a,selectValue:o,tabValues:r}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),i=r[n].value;i!==a&&(c(t),o(i))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,D.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},t),children:r.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,D.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...s,className:(0,i.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:s}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,D.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function g(e){const t=x(e);return(0,D.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,D.jsx)(E,{...t,...e}),(0,D.jsx)(j,{...t,...e})]})}function A(e){const t=(0,_.A)();return(0,D.jsx)(g,{...e,children:u(e.children)},String(t))}},79329:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var a=n(18215);const i={tabItem:"tabItem_Ymn6"};var s=n(74848);function o(e){let{children:t,hidden:n,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,o),hidden:n,children:t})}}}]);