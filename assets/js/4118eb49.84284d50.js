"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[7669],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var a=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||n;return r?a.createElement(g,i(i({ref:t},c),{},{components:r})):a.createElement(g,i({ref:t},c))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<n;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9264:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>p});var a=r(87462),o=(r(67294),r(3905));const n={description:"Learn about our algorithmic predict operators",sidebar_position:6},i="Algorithmic Predict",s={unversionedId:"portal-guide/model/agent-system-operators/algorithmic-predict",id:"portal-guide/model/agent-system-operators/algorithmic-predict",title:"Algorithmic Predict",description:"Learn about our algorithmic predict operators",source:"@site/docs/portal-guide/model/agent-system-operators/algorithmic-predict.md",sourceDirName:"portal-guide/model/agent-system-operators",slug:"/portal-guide/model/agent-system-operators/algorithmic-predict",permalink:"/portal-guide/model/agent-system-operators/algorithmic-predict",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{description:"Learn about our algorithmic predict operators",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"ML Predict",permalink:"/portal-guide/model/agent-system-operators/ml-predict"},next:{title:"Tracker",permalink:"/portal-guide/model/agent-system-operators/tracker"}},l={},p=[{value:"KNN Classifier",id:"knn-classifier",level:2},{value:"Language Identification Operator",id:"language-identification-operator",level:2},{value:"Cross-App Input Searcher",id:"cross-app-input-searcher",level:2},{value:"Regex-Based Classifier",id:"regex-based-classifier",level:2},{value:"Isolation Operator",id:"isolation-operator",level:2},{value:"Barcode Operator",id:"barcode-operator",level:2},{value:"Custom Code Operator",id:"custom-code-operator",level:2},{value:"AWS Lambda",id:"aws-lambda",level:2},{value:"Input Searcher",id:"input-searcher",level:2},{value:"Image Color Recognizer",id:"image-color-recognizer",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"algorithmic-predict"},"Algorithmic Predict"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Learn about our algorithmic predict operators")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"knn-classifier"},"KNN Classifier"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output"),": Concepts"),(0,o.kt)("p",null,"Use k-nearest neighbors (KNN) search and plurality voting amongst the nearest neighbors to classify new instances. Recommended when you only have a small dataset, like one image per concept. "),(0,o.kt)("h2",{id:"language-identification-operator"},"Language Identification Operator"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output"),": Concepts"),(0,o.kt)("p",null,"Operator for language identification using the langdetect library."),(0,o.kt)("h2",{id:"cross-app-input-searcher"},"Cross-App Input Searcher"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output"),": Hits"),(0,o.kt)("p",null,"Triggers a visual search in another app based on the model config, if concept(s) are found in images and returns the matched search hits as regions."),(0,o.kt)("h2",{id:"regex-based-classifier"},"Regex-Based Classifier"),(0,o.kt)("p",null,"Classifies text using regex. If the regex matches, the text is classified as the provided concepts."),(0,o.kt)("h2",{id:"isolation-operator"},"Isolation Operator"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output"),": Regions"),(0,o.kt)("p",null,"This is an operator that computes the distance between detections and assigns an isolation label."),(0,o.kt)("h2",{id:"barcode-operator"},"Barcode Operator"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output"),": Regions"),(0,o.kt)("p",null,"This is an operator that detects and recognizes barcodes from an image. It assigns regions with barcode text for each detected barcode. Supports EAN/UPC, Code 128, Code 39, Interleaved 2 of 5, and QR Code."),(0,o.kt)("h2",{id:"custom-code-operator"},"Custom Code Operator"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output"),": Any"),(0,o.kt)("p",null,"This model expects a Python 3.9 driver function with the following signature: ",(0,o.kt)("inlineCode",{parentName:"p"},"def main(req):"),'. Here, "req" is a dictionary with a single key "inputs" that holds a list of "Input" objects from ',(0,o.kt)("inlineCode",{parentName:"p"},"clarifai_grpc.grpc.api.service_pb2")," \u2014these inputs are normally sent in API prediction requests. "),(0,o.kt)("p",null,"The available libraries for importing are: NumPy, SciPy, PIL, and Clarifai gRPC. The response should be a Python dictionary whose nested structure mirrors that of ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiOutputResponse")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"clarifai_grpc.grpc.api.service_pb2"),". "),(0,o.kt)("p",null,"IDs in inputs should be forwarded to outputs 1-to-1. You can also provide helpers to reference in your main implementation. All the code must be passed in via ",(0,o.kt)("inlineCode",{parentName:"p"},"output_info.params.operator_code"),". "),(0,o.kt)("p",null,"Each execution can last up to 50 seconds and consume 256 MBs of memory."),(0,o.kt)("h2",{id:"aws-lambda"},"AWS Lambda"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Output"),": Any"),(0,o.kt)("p",null,"This model sends data to an AWS lambda function so you can implement any arbitrary logic to be handled within a model prediction or workflow.\nThe request our API sends is a ",(0,o.kt)("inlineCode",{parentName:"p"},"PostModelOutputsRequest")," in the 'request' field, and the response we expect is a ",(0,o.kt)("inlineCode",{parentName:"p"},"MultiOutputResponse")," response in the ",(0,o.kt)("inlineCode",{parentName:"p"},"response")," field. "),(0,o.kt)("h2",{id:"input-searcher"},"Input Searcher"),(0,o.kt)("h2",{id:"image-color-recognizer"},"Image Color Recognizer"))}u.isMDXComponent=!0}}]);