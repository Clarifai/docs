"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[1432],{85162:(e,n,o)=>{o.d(n,{Z:()=>i});var t=o(67294),a=o(86010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:o,className:i}=e;return t.createElement("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,i),hidden:o},n)}},74866:(e,n,o)=>{o.d(n,{Z:()=>y});var t=o(87462),a=o(67294),r=o(86010),i=o(12466),l=o(16550),s=o(91980),d=o(67392),c=o(50012);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:o,attributes:t,default:a}}=e;return{value:n,label:o,attributes:t,default:a}}))}function m(e){const{values:n,children:o}=e;return(0,a.useMemo)((()=>{const e=n??p(o);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,o])}function u(e){let{value:n,tabValues:o}=e;return o.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:o}=e;const t=(0,l.k6)(),r=function(e){let{queryString:n=!1,groupId:o}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return o??null}({queryString:n,groupId:o});return[(0,s._X)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})}),[r,t])]}function w(e){const{defaultValue:n,queryString:o=!1,groupId:t}=e,r=m(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:o}=e;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:o}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${o.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=o.find((e=>e.default))??o[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[s,d]=f({queryString:o,groupId:t}),[p,w]=function(e){let{groupId:n}=e;const o=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,r]=(0,c.Nk)(o);return[t,(0,a.useCallback)((e=>{o&&r.set(e)}),[o,r])]}({groupId:t}),g=(()=>{const e=s??p;return u({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),w(e)}),[d,w,r]),tabValues:r}}var g=o(72389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:n,block:o,selectedValue:l,selectValue:s,tabValues:d}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),m=e=>{const n=e.currentTarget,o=c.indexOf(n),t=d[o].value;t!==l&&(p(n),s(t))},u=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const o=c.indexOf(e.currentTarget)+1;n=c[o]??c[0];break}case"ArrowLeft":{const o=c.indexOf(e.currentTarget)-1;n=c[o]??c[c.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":o},n)},d.map((e=>{let{value:n,label:o,attributes:i}=e;return a.createElement("li",(0,t.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>c.push(e),onKeyDown:u,onClick:m},i,{className:(0,r.Z)("tabs__item",k.tabItem,i?.className,{"tabs__item--active":l===n})}),o??n)})))}function _(e){let{lazy:n,children:o,selectedValue:t}=e;const r=(Array.isArray(o)?o:[o]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))))}function b(e){const n=w(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",k.tabList)},a.createElement(h,(0,t.Z)({},e,n)),a.createElement(_,(0,t.Z)({},e,n)))}function y(e){const n=(0,g.Z)();return a.createElement(b,(0,t.Z)({key:String(n)},e))}},50798:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>A,contentTitle:()=>x,default:()=>P,frontMatter:()=>v,metadata:()=>T,toc:()=>I});var t=o(87462),a=(o(67294),o(3905)),r=o(74866),i=o(85162),l=o(90814);const s='from clarifai.client.user import User\n\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\n# Specify the correct user_id/app_id pairings\n# Since you\'re making inferences outside your app\'s scope\nUSER_ID = "user_id"\nAPP_ID = "app_id"\n\napp = User(user_id=USER_ID, pat="YOUR_PAT").create_app(\n    app_id=APP_ID, base_workflow="Empty"\n)\n\n\n# create a yaml file specifying the workflow structure\n# eg:\n"""configs/prompter_llm.yml\nworkflow:\n  id: wf-prompter-llm\n  nodes:\n    - id: prompter\n      model:\n          model_id: prompter\n          model_type_id: prompter\n          description: \'Prompter Model\'\n          output_info:\n            params:\n              prompt_template: \'Classify sentiment between postive and negative for the text {data.text.raw}\'\n\n    - id: llm\n      model:\n          user_id: mistralai\n          model_id: mistral-7B-Instruct\n          app_id: completion\n\n      node_inputs:\n        - node_id: prompter\n\n"""\n\n# create the workflow\nprompter_llm_workflow = app.create_workflow(config_filepath="configs/prompter_llm.yml")',d='from clarifai.client.app import App\n\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\napp = App(app_id="APP_ID", user_id="USER_ID", pat="YOUR_PAT")\n\nfor workflow in app.list_workflows(page_no=1,per_page=7):\n    print("Workflow ID: ", workflow.id)',c='from clarifai.client.app import App\n\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\napp = App(app_id="APP_ID", user_id="USER_ID", pat="YOUR_PAT")\n# Delete the workflow within an application\napp.delete_workflow(workflow_id="workflow-id")',p='from clarifai.client.workflow import Workflow\n\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\n\nworkflow_url = "https://clarifai.com/clarifai/main/workflows/Demographics"\ndemographics_workflow = Workflow(\n    url=workflow_url , pat="YOUR_PAT"\n)\ndemographics_workflow.export("demographics_workflow.yml")\n"""\nNow the parameters of each model can be changed and new workflow can be easily created by app.create_workflow().\n\nHere we change the margin parameter of the image cropper node to be 1.5\n\n- id: image-crop\n    model:\n      model_id: margin-100-image-crop-custom\n          model_type_id: image-crop\n          description: Custom crop model\n          output_info:\n            params:\n              margin: 1.5\n\n\n"""\n',m="workflow:\n  id: asr-sentiment\n  nodes:\n    - id: audio-speech-recognition\n      model:\n          model_id: asr-wav2vec2-large-robust-ft-swbd-300h-english\n          user_id: facebook\n          app_id: asr\n\n    - id: text-sentiment-classification\n      model:\n          model_id: sentiment-analysis-twitter-roberta-base\n          user_id: erfan\n          app_id: text-classification\n\n      node_inputs:\n        - node_id: audio-speech-recognition",u="workflow:\n  id: Demographics\n  nodes:\n    - id: detect-concept\n      model:\n        model_id: face-detection\n        model_version_id: 45fb9a671625463fa646c3523a3087d5\n\n    - id: image-crop\n      model:\n        model_id: margin-110-image-crop\n        model_version_id: b9987421b40a46649566826ef9325303\n      node_inputs:\n        - node_id: detect-concept\n\n    - id: demographics-race\n      model:\n        model_id: ethnicity-demographics-recognition\n        model_version_id: b2897edbda314615856039fb0c489796\n      node_inputs:\n        - node_id: image-crop\n\n    - id: demographics-gender\n      model:\n        model_id: gender-demographics-recognition\n        model_version_id: ff83d5baac004aafbe6b372ffa6f8227\n      node_inputs:\n        - node_id: image-crop\n\n    - id: demographics-age\n      model:\n        model_id: age-demographics-recognition\n        model_version_id: fb9f10339ac14e23b8e960e74984401b\n      node_inputs:\n        - node_id: image-crop\n",f="workflow:\n  id: Face-Search\n  nodes:\n    - id: face-detect\n      model:\n        model_id: face-detection\n        model_version_id: fe995da8cb73490f8556416ecf25cea3\n\n    - id: crop\n      model:\n        model_id: margin-100-image-crop\n        model_version_id: 0af5cd8ad40e43ef92154e4f4bc76bef\n      node_inputs:\n        - node_id: face-detect\n\n    - id: face-landmarks\n      model:\n        model_id: face-landmarks\n        model_version_id: 98ace9ca45e64339be94b06011557e2a\n      node_inputs:\n        - node_id: crop\n\n    - id: face-alignment\n      model:\n        model_id: landmarks-align\n        model_version_id: 4bc8b83a327247829ec638c78cde5f8b\n      node_inputs:\n        - node_id: face-landmarks\n\n    - id: face-embed\n      model:\n        model_id: face-identification-transfer-learn\n        model_version_id: fc3b8814fbe54533a3d80a1896dc9884\n      node_inputs:\n        - node_id: face-alignment\n\n    - id: face-cluster\n      model:\n        model_id: face-clustering\n        model_version_id: 621d74074a5443d7ad9dc1503fba9ff0\n      node_inputs:\n        - node_id: face-embed\n",w="workflow:\n  id: Face-Sentiment\n  nodes:\n    - id: face-det\n      model:\n        model_id: face-detection\n        model_version_id: 6dc7e46bc9124c5c8824be4822abe105\n\n    - id: margin-110\n      model:\n        model_id: margin-110-image-crop\n        model_version_id: b9987421b40a46649566826ef9325303\n      node_inputs:\n        - node_id: face-det\n\n    - id: face-sentiment\n      model:\n        model_id: face-sentiment-recognition\n        model_version_id: a5d7776f0c064a41b48c3ce039049f65\n      node_inputs:\n        - node_id: margin-110\n",g="workflow:\n  id: General\n  nodes:\n    - id: general-v1.5-concept\n      model:\n          model_id: aaa03c23b3724a16a56b629203edc62c\n          model_version_id: aa7f35c01e0642fda5cf400f543e7c40\n\n    - id: general-v1.5-embed\n      model:\n          model_id: bbb5f41425b8468d9b7a554ff10f8581\n          model_version_id: bb186755eda04f9cbb6fe32e816be104\n\n    - id: general-v1.5-cluster\n      model:\n          model_id: cccbe437d6e54e2bb911c6aa292fb072\n          model_version_id: cc2074cff6dc4c02b6f4e1b8606dcb54\n      node_inputs:\n        - node_id: general-v1.5-embed\n",k='workflow:\n  id: wf-ocr\n  nodes:\n    - id: ocr-workflow\n      model:\n          model_id: language-aware-multilingual-ocr-multiplex\n\n    - id: text-aggregator\n      model:\n          model_id: text-aggregation\n          model_type_id: text-aggregation-operator\n          output_info:\n            params:\n              avg_word_width_window_factor: 2.0\n              avg_word_height_window_factor: 1.0\n\n      node_inputs:\n        - node_id: ocr-workflow\n\n    - id: language-id-operator\n      model:\n          model_id: language-id\n          model_type_id: language-id-operator\n          output_info:\n            params:\n              library: "fasttext"\n              topk: 1\n              threshold:  0.1\n              lowercase: true\n\n      node_inputs:\n        - node_id: text-aggregator\n',h="workflow:\n  id: wf-prompter-llm\n  nodes:\n    - id: prompter\n      model:\n          model_id: prompter\n          model_type_id: prompter\n          description: 'Prompter Model'\n          output_info:\n            params:\n              prompt_template: 'Classify sentiment between postive and negative for the text {data.text.raw}'\n\n    - id: llm\n      model:\n          user_id: mistralai\n          model_id: mistral-7B-Instruct\n          app_id: completion\n\n      node_inputs:\n        - node_id: prompter",_="workflow:\n  id: wf-prompter-llm\n  nodes:\n    - id: rag-prompter\n      model:\n          model_id: rag-prompter\n          model_type_id: rag-prompter\n          description: 'RAG Prompter Model'\n\n    - id: llm\n      model:\n          user_id: mistralai\n          model_id: mistral-7B-Instruct\n          app_id: completion\n\n      node_inputs:\n        - node_id: rag-prompter",b="Workflow ID:  object_track\n\nWorkflow ID:  video_track\n\nWorkflow ID:  multimodal_to_text\n\nWorkflow ID:  text_to_audio\n\nWorkflow ID:  upscale_workflow\n\nWorkflow ID:  image_generation\n\nWorkflow ID:  text_generation",y='2024-01-18 16:34:46 INFO     clarifai.client.app:                                                        app.py:653\n\n                             Workflow Deleted                                                                      \n\n                             code: SUCCESS                                                                         \n\n                             description: "Ok"                                                                     \n\n                             req_id: "a979f35e9c826bb9046f4d92879c6b7c" ',v={sidebar_position:7},x="Building Workflow Graphs",T={unversionedId:"python-sdk/Building-Workflow-Graphs/README",id:"python-sdk/Building-Workflow-Graphs/README",title:"Building Workflow Graphs",description:"Learn how to build workflows using Clarifai Python SDK",source:"@site/docs/python-sdk/Building-Workflow-Graphs/README.mdx",sourceDirName:"python-sdk/Building-Workflow-Graphs",slug:"/python-sdk/Building-Workflow-Graphs/",permalink:"/python-sdk/Building-Workflow-Graphs/",draft:!1,editUrl:"https://github.com/Clarifai/docs/blob/main/docs/python-sdk/Building-Workflow-Graphs/README.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Advanced Inference Options",permalink:"/python-sdk/Inference-from-AI-Models/Advance-Inference-Options"},next:{title:"Inference from Workflows",permalink:"/python-sdk/Building-Workflow-Graphs/Inference-from-Workflows/"}},A={},I=[{value:"Create workflow",id:"create-workflow",level:2},{value:"Examples for YAML based Workflows :",id:"examples-for-yaml-based-workflows-",level:2},{value:"ASR Sentiment",id:"asr-sentiment",level:3},{value:"Demographics",id:"demographics",level:3},{value:"Face Search",id:"face-search",level:3},{value:"Face Sentiment",id:"face-sentiment",level:3},{value:"General",id:"general",level:3},{value:"Language Aware OCR",id:"language-aware-ocr",level:3},{value:"Prompter LLM",id:"prompter-llm",level:3},{value:"RAG Prompter LLM",id:"rag-prompter-llm",level:3},{value:"List workflows",id:"list-workflows",level:2},{value:"Delete workflows",id:"delete-workflows",level:2},{value:"Export workflow",id:"export-workflow",level:2}],D={toc:I},C="wrapper";function P(e){let{components:n,...o}=e;return(0,a.kt)(C,(0,t.Z)({},D,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"building-workflow-graphs"},"Building Workflow Graphs"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Learn how to build workflows using Clarifai Python SDK")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Unlock the potential of efficient data processing pipelines tailored precisely to your unique requirements with this empowering feature. As you embark on the journey of constructing workflow graphs, you gain unprecedented flexibility to seamlessly connect and orchestrate a diverse array of models, operators, and processing steps. Whether your focus is on integrating sophisticated image classification, precise object detection, or custom operators, our SDK offers an intuitive and user-friendly interface. Experience the freedom to effortlessly create, modify, and optimize workflow graphs, empowering you to design and implement highly specialized data processing pipelines that align seamlessly with your specific needs."),(0,a.kt)("h2",{id:"create-workflow"},"Create workflow"),(0,a.kt)("p",null,"Designing and implementing workflows is a crucial aspect of building a robust and flexible inference pipeline. Workflows  offer a modular architecture that serves as the foundation for both sophisticated machine learning ensemble modeling and seamless integration of business logic. These workflows empower you to streamline your processes, enhance model performance, and effectively handle diverse tasks in your machine learning endeavors. Workflow can be created with the SDK using a YAML specification."),(0,a.kt)("p",null,"To know more about workflows visit this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.clarifai.com/portal-guide/workflows/"},"link"),"."),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)(l.Z,{className:"language-python",mdxType:"CodeBlock"},s))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Output"),(0,a.kt)("img",{src:"/img/python-sdk/create_workflow.png",width:"500",height:"500"})),(0,a.kt)("h2",{id:"examples-for-yaml-based-workflows-"},"Examples for YAML based Workflows :"),(0,a.kt)("h3",{id:"asr-sentiment"},"ASR Sentiment"),(0,a.kt)("p",null,"Automatic Speech Recognition (ASR) sentiment analysis refers to the process of analyzing the emotional tone or sentiment expressed in spoken language using ASR model."),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},m),(0,a.kt)("h3",{id:"demographics"},"Demographics"),(0,a.kt)("p",null,"This is a Multi-model workflow that detects, crops, and recognizes demographic characteristics of faces. Visually classifies age, gender, and multi-culture."),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},u),(0,a.kt)("h3",{id:"face-search"},"Face Search"),(0,a.kt)("p",null,"A workflow that combines detection, recognition, and embedding to generate face landmarks and enable visual search using detected faces's embeddings."),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},f),(0,a.kt)("h3",{id:"face-sentiment"},"Face Sentiment"),(0,a.kt)("p",null,"Multi-model workflow that combines face detection and sentiment classification of 7 concepts: anger, disgust, fear, neutral, happiness, sadness, contempt."),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},w),(0,a.kt)("h3",{id:"general"},"General"),(0,a.kt)("p",null,"A general image detection workflow that detects a variety of common objects, and enable visual search using general embeddings on detected regions."),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},g),(0,a.kt)("h3",{id:"language-aware-ocr"},"Language Aware OCR"),(0,a.kt)("p",null,"A workflows that performs OCR in different languages."),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},k),(0,a.kt)("h3",{id:"prompter-llm"},"Prompter LLM"),(0,a.kt)("p",null,"A workflow that uses a prompt template with LLM."),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},h),(0,a.kt)("h3",{id:"rag-prompter-llm"},"RAG Prompter LLM"),(0,a.kt)("p",null,"This workflow uses LLM with a RAG prompter template."),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},_),(0,a.kt)("p",null,"Visit this ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Clarifai/examples/tree/main/workflows/configs"},"link")," to view some YAML examples."),(0,a.kt)("h2",{id:"list-workflows"},"List workflows"),(0,a.kt)("p",null,"The Clarifai Python SDK provides an API that empowers users to effortlessly retrieve a comprehensive list of all workflows accessible within an app. This functionality enables seamless exploration and management of workflows, facilitating a streamlined experience for developers to interact with and leverage the power of Clarifai's workflow capabilities."),(0,a.kt)("p",null,"To know more about workflows visit this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.clarifai.com/portal-guide/workflows/"},"link"),"."),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)(l.Z,{className:"language-python",mdxType:"CodeBlock"},d))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Output"),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},b)),(0,a.kt)("h2",{id:"delete-workflows"},"Delete workflows"),(0,a.kt)("p",null,"The Clarifai Python SDK empowers users to seamlessly delete workflows through the API by specifying the unique identifier of the workflow. This functionality provides a straightforward method for users to manage and remove workflows as needed within their applications or projects. By utilizing the provided workflow id parameter, developers can efficiently interact with the Clarifai platform to streamline workflow management processes."),(0,a.kt)("p",null,"To know more about workflows visit this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.clarifai.com/portal-guide/workflows/"},"link"),"."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Be certain that you want to delete a particular workflow as the operation cannot be undone.")),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)(l.Z,{className:"language-python",mdxType:"CodeBlock"},c))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Output"),(0,a.kt)(l.Z,{className:"language-text",mdxType:"CodeBlock"},y)),(0,a.kt)("h2",{id:"export-workflow"},"Export workflow"),(0,a.kt)("p",null,"The Clarifai Python SDK provides a powerful feature for initiating or swiftly modifying existing Clarifai community workflows through an intuitive YAML configuration. With the export functionality, users can effortlessly download a YAML file representing the entire workflow. This file serves as a local copy, allowing seamless edits and providing the flexibility to create and manage new workflows with ease."),(0,a.kt)("p",null,"To know more about workflows visit this ",(0,a.kt)("a",{parentName:"p",href:"https://docs.clarifai.com/portal-guide/workflows/"},"link"),"."),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)(l.Z,{className:"language-python",mdxType:"CodeBlock"},p))))}P.isMDXComponent=!0}}]);