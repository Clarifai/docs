"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[2789],{80129:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>f,contentTitle:()=>h,default:()=>_,frontMatter:()=>d,metadata:()=>p,toc:()=>m});var a=t(74848),i=t(28453),r=t(11470),o=t(19365),s=t(21432);const l='######################################################################################\n# In this section, we set the user authentication, user and app ID, and dataset ID.\n# Change these strings to run your own example.\n#####################################################################################\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\nPAT = "YOUR_PAT_HERE"\nUSER_ID = "YOUR_USER_ID_HERE"\nAPP_ID = "YOUR_APP_ID_HERE"\nDATASET_ID = "YOUR_DATASET_ID_HERE"\n\n############################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n############################################################################\n\n# Import the required packages\nimport os\nfrom clarifaipyspark.client import ClarifaiPySpark\n\n# Set Clarifai PAT as environment variable\nos.environ["CLARIFAI_PAT"] = PAT\n# Create a Clarifai-PySpark client object to connect to your app on Clarifai\ncspark_obj = ClarifaiPySpark(user_id=USER_ID, app_id=APP_ID)\n# Specify the dataset\ndataset_obj = cspark_obj.dataset(dataset_id=DATASET_ID)\n\n#  Retrieve annotations in JSON format\nannotations_response = list(dataset_obj.list_annotations(input_ids=None))\n\nprint(annotations_response)\n',c='######################################################################################\n# In this section, we set the user authentication, user and app ID, and dataset ID.\n# Change these strings to run your own example.\n######################################################################################\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\nPAT = "YOUR_PAT_HERE"\nUSER_ID = "YOUR_USER_ID_HERE"\nAPP_ID = "YOUR_APP_ID_HERE"\nDATASET_ID = "YOUR_DATASET_ID_HERE"\n\n############################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n############################################################################\n\n# Import the required packages\nimport os\nfrom clarifaipyspark.client import ClarifaiPySpark\n\n# Set Clarifai PAT as environment variable\nos.environ["CLARIFAI_PAT"] = PAT\n# Create a Clarifai-PySpark client object to connect to your app on Clarifai\ncspark_obj = ClarifaiPySpark(user_id=USER_ID, app_id=APP_ID)\n# Specify the dataset\ndataset_obj = cspark_obj.dataset(dataset_id=DATASET_ID)\n\n#  Retrieve annotations as a dataframe\nannotations_df = dataset_obj.export_annotations_to_dataframe(input_ids=None)\n\nprint(annotations_df)\n',u='#####################################################################################\n# In this section, we set the user authentication, user and app ID, and dataset ID.\n# Change these strings to run your own example.\n#####################################################################################\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\nPAT = "YOUR_PAT_HERE"\nUSER_ID = "YOUR_USER_ID_HERE"\nAPP_ID = "YOUR_APP_ID_HERE"\nDATASET_ID = "YOUR_DATASET_ID_HERE"\n\n############################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n############################################################################\n\n# Import the required packages\nimport os\nfrom clarifaipyspark.client import ClarifaiPySpark\n\n# Set Clarifai PAT as environment variable\nos.environ["CLARIFAI_PAT"] = PAT\n# Create a Clarifai-PySpark client object to connect to your app on Clarifai\ncspark_obj = ClarifaiPySpark(user_id=USER_ID, app_id=APP_ID)\n# Specify the dataset\ndataset_obj = cspark_obj.dataset(dataset_id=DATASET_ID)\n\n#  Retrieve inputs with annotations as a dataframe\ndataset_df = dataset_obj.export_dataset_to_dataframe(\n          input_type="image"  # Or, specify as "text"\n)\n\nprint(dataset_df)\n',d={description:"Seamlessly retrieve annotations from Clarifai into Databricks",sidebar_position:3},h="Fetch Annotations",p={id:"integrations/databricks/fetch-annotations",title:"Fetch Annotations",description:"Seamlessly retrieve annotations from Clarifai into Databricks",source:"@site/docs/integrations/databricks/fetch-annotations.md",sourceDirName:"integrations/databricks",slug:"/integrations/databricks/fetch-annotations",permalink:"/integrations/databricks/fetch-annotations",draft:!1,unlisted:!1,editUrl:"https://github.com/Clarifai/docs/blob/main/docs/integrations/databricks/fetch-annotations.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"Seamlessly retrieve annotations from Clarifai into Databricks",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Fetch Data",permalink:"/integrations/databricks/fetch-data"},next:{title:"Databricks-Connect Module",permalink:"/integrations/databricks/databricks-connect"}},f={},m=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Retrieve Annotations in JSON Format",id:"retrieve-annotations-in-json-format",level:2},{value:"Retrieve Annotations as a Dataframe",id:"retrieve-annotations-as-a-dataframe",level:2},{value:"Retrieve Inputs With Annotations as a Dataframe",id:"retrieve-inputs-with-annotations-as-a-dataframe",level:3}];function b(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"fetch-annotations",children:"Fetch Annotations"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Seamlessly retrieve annotations from Clarifai into Databricks"})}),"\n",(0,a.jsx)("hr",{}),"\n",(0,a.jsxs)(n.p,{children:["The Clarifai platform allows you to ",(0,a.jsx)(n.a,{href:"https://docs.clarifai.com/portal-guide/annotate/create-get-update-delete",children:"annotate your inputs"}),", enriching them with valuable labels and metadata."]}),"\n",(0,a.jsx)(n.p,{children:"You can effortlessly fetch annotations from a Clarifai application to Databricks. This integration is particularly valuable for machine learning workflows in Databricks, as it introduces annotated data from Clarifai into the platform."}),"\n",(0,a.jsx)(n.p,{children:"Annotated data enhances the quality of training data, a crucial factor in improving the accuracy and performance of machine learning models."}),"\n",(0,a.jsx)(n.p,{children:"Let\u2019s illustrate how you can seamlessly transfer annotations from Clarifai into the Databricks environment."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Databricks notebook development environment"}),"\n",(0,a.jsxs)(n.li,{children:["Get your PAT (Personal Access Token) from the Clarifai\u2019s portal under the ",(0,a.jsx)(n.a,{href:"https://clarifai.com/settings/security",children:"Settings/Security"})," section"]}),"\n",(0,a.jsx)(n.li,{children:"Get your Clarifai user ID"}),"\n",(0,a.jsx)(n.li,{children:"Get the ID of the Clarifai app where you want to fetch the annotations from"}),"\n",(0,a.jsx)(n.li,{children:"Get the ID of the dataset having the annotations within your app"}),"\n",(0,a.jsxs)(n.li,{children:["Install the ",(0,a.jsx)(n.a,{href:"https://github.com/Clarifai/clarifai-pyspark",children:"Clarifai PySpark"})," package by running ",(0,a.jsx)(n.code,{children:"pip install clarifai-pyspark "})]}),"\n",(0,a.jsxs)(n.li,{children:["Install Protocol Buffers by running ",(0,a.jsx)(n.code,{children:"pip install protobuf==4.24.2 "}),". It\u2019s a cross-platform, serialization protocol that describes the structure of the data to be sent"]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["You can learn how to authenticate with the Clarifai platform ",(0,a.jsx)(n.a,{href:"https://docs.clarifai.com/clarifai-basics/authentication/personal-access-tokens",children:"here"}),"."]})}),"\n","\n","\n",(0,a.jsx)(n.h2,{id:"retrieve-annotations-in-json-format",children:"Retrieve Annotations in JSON Format"}),"\n",(0,a.jsx)(n.p,{children:"You can retrieve detailed information about the annotations in your Clarifai app\u2019s dataset. You\u2019ll get a JSON response containing comprehensive details about the annotations."}),"\n",(0,a.jsx)(n.p,{children:"Optionally, you can specify a list of input IDs for which you want to fetch their annotations."}),"\n",(0,a.jsx)(r.A,{children:(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(s.A,{className:"language-python",children:l})})}),"\n",(0,a.jsx)(n.h2,{id:"retrieve-annotations-as-a-dataframe",children:"Retrieve Annotations as a Dataframe"}),"\n",(0,a.jsxs)(n.p,{children:["You can retrieve detailed information about your annotations in a structured dataframe format. The dataframe includes key columns like ",(0,a.jsx)(n.code,{children:"annotation_id"}),", ",(0,a.jsx)(n.code,{children:"annotation"}),", ",(0,a.jsx)(n.code,{children:"annotation_user_id"}),", ",(0,a.jsx)(n.code,{children:"input_id"}),", ",(0,a.jsx)(n.code,{children:"annotation_created_at"})," and ",(0,a.jsx)(n.code,{children:"annotation_modified_at"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Note that the JSON response may include supplementary attributes, offering comprehensive insights beyond the specified columns in the dataframe."}),"\n",(0,a.jsx)(n.p,{children:"Optionally, you can specify a list of input IDs for which you want to fetch their annotations."}),"\n",(0,a.jsx)(r.A,{children:(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(s.A,{className:"language-python",children:c})})}),"\n",(0,a.jsx)(n.h3,{id:"retrieve-inputs-with-annotations-as-a-dataframe",children:"Retrieve Inputs With Annotations as a Dataframe"}),"\n",(0,a.jsx)(n.p,{children:"You can obtain inputs along with their corresponding annotations in a structured dataframe. This capability allows for the simultaneous retrieval of input details and their associated annotations."}),"\n",(0,a.jsx)(n.p,{children:"The resulting dataframe consolidates information seamlessly from both the annotations and inputs dataframes, as outlined in the previously mentioned functions."}),"\n",(0,a.jsx)(r.A,{children:(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(s.A,{className:"language-python",children:u})})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["You can get examples for integrating Clarifai with Databricks ",(0,a.jsx)(n.a,{href:"https://github.com/Clarifai/clarifai-pyspark/tree/main/examples",children:"here"}),"."]})})]})}function _(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var a=t(18215);const i={tabItem:"tabItem_Ymn6"};var r=t(74848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,o),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>I});var a=t(96540),i=t(18215),r=t(23104),o=t(56347),s=t(205),l=t(57485),c=t(31682),u=t(70679);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const i=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})}),[r,i])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,r=h(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[c,d]=f({queryString:t,groupId:i}),[m,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,r]=(0,u.Dv)(t);return[i,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:i}),_=(()=>{const e=c??m;return p({value:e,tabValues:r})?e:null})();(0,s.A)((()=>{_&&l(_)}),[_]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),b(e)}),[d,b,r]),tabValues:r}}var b=t(92303);const _={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(74848);function A(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),i=s[t].value;i!==a&&(c(n),o(i))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:d,onClick:u,...r,className:(0,i.A)("tabs__item",_.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:i}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function g(e){const n=m(e);return(0,y.jsxs)("div",{className:(0,i.A)("tabs-container",_.tabList),children:[(0,y.jsx)(A,{...n,...e}),(0,y.jsx)(v,{...n,...e})]})}function I(e){const n=(0,b.A)();return(0,y.jsx)(g,{...e,children:d(e.children)},String(n))}}}]);