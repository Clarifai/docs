"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[3778],{19365:(e,t,a)=>{a.d(t,{A:()=>o});var n=a(96540),r=a(20053);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,o),hidden:a},t)}},11470:(e,t,a)=>{a.d(t,{A:()=>k});var n=a(58168),r=a(96540),i=a(20053),o=a(23104),l=a(56347),s=a(57485),g=a(31682),d=a(89466);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,g.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.W6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,i=p(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[s,g]=y({queryString:a,groupId:n}),[m,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,d.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:n}),u=(()=>{const e=s??m;return c({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{u&&l(u)}),[u]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!c({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),g(e),h(e)}),[g,h,i]),tabValues:i}}var u=a(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function w(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:g}=e;const d=[],{blockElementScrollPositionUntilNextRender:m}=(0,o.a_)(),p=e=>{const t=e.currentTarget,a=d.indexOf(t),n=g[a].value;n!==l&&(m(t),s(n))},c=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":a},t)},g.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:c,onClick:p},o,{className:(0,i.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":l===t})}),a??t)})))}function b(e){let{lazy:t,children:a,selectedValue:n}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function N(e){const t=h(e);return r.createElement("div",{className:(0,i.A)("tabs-container",f.tabList)},r.createElement(w,(0,n.A)({},e,t)),r.createElement(b,(0,n.A)({},e,t)))}function k(e){const t=(0,u.A)();return r.createElement(N,(0,n.A)({key:String(t)},e))}},17997:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>A,contentTitle:()=>_,default:()=>E,frontMatter:()=>x,metadata:()=>v,toc:()=>C});var n=a(58168),r=(a(96540),a(15680)),i=a(11470),o=a(19365),l=a(77964),s=a(40669),g=a(83972),d=a(37464),m=a(32975),p=a(95073),c=a(3926),y=a(63481),h=a(56118),u=a(73823),f=a(176),w=a(86416),b=a(28213),N=a(79890),k=a(57272);const x={sidebar_position:7},_="Building Workflow Graphs",v={unversionedId:"python-sdk/Building-Workflow-Graphs/README",id:"python-sdk/Building-Workflow-Graphs/README",title:"Building Workflow Graphs",description:"Learn how to build workflows using Clarifai Python SDK",source:"@site/docs/python-sdk/Building-Workflow-Graphs/README.mdx",sourceDirName:"python-sdk/Building-Workflow-Graphs",slug:"/python-sdk/Building-Workflow-Graphs/",permalink:"/python-sdk/Building-Workflow-Graphs/",draft:!1,editUrl:"https://github.com/Clarifai/docs/blob/main/docs/python-sdk/Building-Workflow-Graphs/README.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Advanced Inference Options",permalink:"/python-sdk/Inference-from-AI-Models/Advance-Inference-Options"},next:{title:"Inference from Workflows",permalink:"/python-sdk/Building-Workflow-Graphs/Inference-from-Workflows/"}},A={},C=[{value:"Create workflow",id:"create-workflow",level:2},{value:"Examples for YAML based Workflows",id:"examples-for-yaml-based-workflows",level:2},{value:"ASR Sentiment",id:"asr-sentiment",level:3},{value:"Demographics",id:"demographics",level:3},{value:"Face Search",id:"face-search",level:3},{value:"Face Sentiment",id:"face-sentiment",level:3},{value:"General",id:"general",level:3},{value:"Language Aware OCR",id:"language-aware-ocr",level:3},{value:"Prompter LLM",id:"prompter-llm",level:3},{value:"RAG Prompter LLM",id:"rag-prompter-llm",level:3},{value:"List workflows",id:"list-workflows",level:2},{value:"Delete workflows",id:"delete-workflows",level:2},{value:"Export workflow",id:"export-workflow",level:2}],T={toc:C},I="wrapper";function E(e){let{components:t,...a}=e;return(0,r.yg)(I,(0,n.A)({},T,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"building-workflow-graphs"},"Building Workflow Graphs"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Learn how to build workflows using Clarifai Python SDK")),(0,r.yg)("hr",null),(0,r.yg)("p",null,"Unlock the potential of efficient data processing pipelines tailored precisely to your unique requirements with this empowering feature. As you embark on the journey of constructing workflow graphs, you gain unprecedented flexibility to seamlessly connect and orchestrate a diverse array of models, operators, and processing steps. Whether your focus is on integrating sophisticated image classification, precise object detection, or custom operators, our SDK offers an intuitive and user-friendly interface. Experience the freedom to effortlessly create, modify, and optimize workflow graphs, empowering you to design and implement highly specialized data processing pipelines that align seamlessly with your specific needs."),(0,r.yg)("h2",{id:"create-workflow"},"Create workflow"),(0,r.yg)("p",null,"Designing and implementing workflows is a crucial aspect of building a robust and flexible inference pipeline. Workflows  offer a modular architecture that serves as the foundation for both sophisticated machine learning ensemble modeling and seamless integration of business logic. These workflows empower you to streamline your processes, enhance model performance, and effectively handle diverse tasks in your machine learning endeavors. Workflow can be created with the SDK using a YAML specification."),(0,r.yg)("p",null,"To know more about workflows visit this ",(0,r.yg)("a",{parentName:"p",href:"https://docs.clarifai.com/portal-guide/workflows/"},"link"),"."),(0,r.yg)(i.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.yg)(l.A,{className:"language-python",mdxType:"CodeBlock"},s.A))),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Output"),(0,r.yg)("img",{src:"/img/python-sdk/create_workflow.png",width:"500",height:"500"})),(0,r.yg)("h2",{id:"examples-for-yaml-based-workflows"},"Examples for YAML based Workflows"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Node Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Input & Output"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Example Usage"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"audio-to-text"),(0,r.yg)("td",{parentName:"tr",align:null},"Audio -> Text"),(0,r.yg)("td",{parentName:"tr",align:null},"Classify audio signal into string of text."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/audio-to-text.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"barcode-operator"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Text"),(0,r.yg)("td",{parentName:"tr",align:null},"Operator that detects and recognizes barcodes from the image. It assigns regions with barcode text for each detected barcode. Supports EAN/UPC, Code 128, Code 39, Interleaved 2 of 5 and QR Code."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/barcode-operator.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Centroid Tracker"),(0,r.yg)("td",{parentName:"tr",align:null},"Frames -> Track ID"),(0,r.yg)("td",{parentName:"tr",align:null},"Centroid trackers rely on the Euclidean distance between centroids of regions in different video frames to assign the same track ID to detections of the same object."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/centroid-tracker.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Clusterer"),(0,r.yg)("td",{parentName:"tr",align:null},"Embeddings -> Clusters"),(0,r.yg)("td",{parentName:"tr",align:null},"Cluster semantically similar images and video frames together in embedding space. This is the basis for good visual search within your app at scale or for grouping your data together without the need for annotated concepts"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/clusterer.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"embeddings-classifier"),(0,r.yg)("td",{parentName:"tr",align:null},"Embeddings -> Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},"Classify images or texts based on the embedding model that has indexed them in your app. Transfer learning leverages feature representations from a pre-trained model based on massive amounts of data, so you don't have to train a new model from scratch and can learn new things very quickly with minimal training data"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/embeddings-classifier.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"image-color-recognizer"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Colors"),(0,r.yg)("td",{parentName:"tr",align:null},"Recognize standard color formats and the proportion each color that covers an image"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/image-color-recognizer.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"image-to-text"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Text"),(0,r.yg)("td",{parentName:"tr",align:null},"Takes in cropped regions with text in them and returns the text it sees."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/image-to-text.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"kalman-filter-tracker"),(0,r.yg)("td",{parentName:"tr",align:null},"Frames -> Track ID"),(0,r.yg)("td",{parentName:"tr",align:null},"Kalman Filter trackers rely on the Kalman Filter algorithm to estimate the next position of an object based on its position and velocity in previous frames. Then detections are matched to predictions by using the Hungarian algorithm"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/kalman-filter-tracker.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"kalman-reid-tracker"),(0,r.yg)("td",{parentName:"tr",align:null},"Frames -> Track ID"),(0,r.yg)("td",{parentName:"tr",align:null},"Kalman reid tracker is a kalman filter tracker that expects the Embedding proto field to be populated for detections, and reassigns track IDs based off of embedding distance"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/kalman-reid-tracker.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"neural-lite-tracker"),(0,r.yg)("td",{parentName:"tr",align:null},"Frames -> Track ID"),(0,r.yg)("td",{parentName:"tr",align:null},"Neural Lite Tracker uses light-weight trainable graphical models to infer states of tracks and perform associations using hybrid similairty of lou and centroid distance"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/neural-lite-tracker.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"neural-tracker"),(0,r.yg)("td",{parentName:"tr",align:null},"Frames -> Track ID"),(0,r.yg)("td",{parentName:"tr",align:null},"Neural Tracker uses neural probabilistic models to perform filtering and association"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/neural-tracker.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optical-character-recognizer"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Text"),(0,r.yg)("td",{parentName:"tr",align:null},"Detect bounding box regions in images or video frames where text is present and then output the text read with the score"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/optical-character-recognizer.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"tesseract-operator"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Text"),(0,r.yg)("td",{parentName:"tr",align:null},"Operator for Optical Character Recognition using the Tesseract libraries"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/tesseract-operator.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"text-classifier"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},"Classify text into a set of concepts"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/text-classifier.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"text-embedder"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Embeddings"),(0,r.yg)("td",{parentName:"tr",align:null},"Embed text into a vector representing a high level understanding from our Al models.  These embeddings enable similarity search and training on top of them"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/text-embedder.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"text-token-classifier"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},"Classify tokens from a set of entity classes"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/text-token-classifier.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"visual-classifier"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},"Classify images and videos frames into set of concepts"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/visual-classifier.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"visual-detector"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Bounding Box"),(0,r.yg)("td",{parentName:"tr",align:null},"Detect bounding box regions in images or video frames where things and then classify objects, descriptive words or topics within the boxes"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/visual-detector.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"visual-embedder"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Embeddings"),(0,r.yg)("td",{parentName:"tr",align:null},"Embed images and videos frames into a vector representing a high level understanding from our Al models. These embeddings enable visual search and training on top of them"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/visual-embedder.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"visual-segmenter"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},"Segment a per-pixel mask in images where things are and then classify objects, descriptive words or topics within the masks"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Predict/visual-segmenter.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"concept-thresholder"),(0,r.yg)("td",{parentName:"tr",align:null},"Concepts -> Concpets"),(0,r.yg)("td",{parentName:"tr",align:null},'Threshold input concepts according to both a threshold and an operator (>, >=, =, <=, or <). For example, assume the " > " threshold type is set for the model, then if the input concept value is greater than the threshold for that concept, the input concept will be output from this model, otherwise it will not be output by the model'),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Filter/concept-thresholder.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"random-sample"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Any"),(0,r.yg)("td",{parentName:"tr",align:null},"Randomly sample allowing the input to pass to the output. This is done with the conditional keep_fraction > rand() where keep_fraction is the fraction to allow through on average"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Filter/random-sample.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"region-thresholder"),(0,r.yg)("td",{parentName:"tr",align:null},"Concepts -> Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},'Threshold regions based on the concepts that they contain using a threshold per concept and an overall operator (>, >=, =, <=, or <). For example, assume the " > " threshold type is set for the model, then if the input regions',"[...]",".data.concepts.value is greater than the threshold for that concept, the input concept will be output from this model, otherwise it will not be output by the model. If the entire list of concepts at regions","[...]",".data.concepts is filtered out then the overall region will also be removed"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Filter/region-thresholder.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"byte-tracker"),(0,r.yg)("td",{parentName:"tr",align:null},"Frame -> Track ID"),(0,r.yg)("td",{parentName:"tr",align:null},"Uses byte tracking algorithm for tracking objects"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/byte-tracker.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"concept-synonym-mapper"),(0,r.yg)("td",{parentName:"tr",align:null},"Concept -> Concept"),(0,r.yg)("td",{parentName:"tr",align:null},"Map the input concepts to output concepts by following synonym concept relations in the knowledge graph of your app"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/concept-synonym-mapper.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"image-align"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Image"),(0,r.yg)("td",{parentName:"tr",align:null},"Aligns images using keypoints"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/image-align.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"image-crop"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Image"),(0,r.yg)("td",{parentName:"tr",align:null},"Crop the input image according to each input region that is present in the input. When used in a workflow this model can look back along the graph of the workflow to find the input image if the preceding model does not output an image itself so that you can do image -> detector -> cropper type of workflow easily"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/image-crop.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"image-tiling-operator"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Image"),(0,r.yg)("td",{parentName:"tr",align:null},"Operator for tiling images into a fixed number of equal sized images"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/image-tiling-operator.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"image-to-image"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Image"),(0,r.yg)("td",{parentName:"tr",align:null},"Given an image, apply a transformation on the input and return the post-processed image as output"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/image-to-image.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"input-filter"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Any"),(0,r.yg)("td",{parentName:"tr",align:null},"If the input going through this model does not match those we are filtering for, it will not be passed on in the workflow branch"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/input-filter.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"input-searcher"),(0,r.yg)("td",{parentName:"tr",align:null},"Concepts,Images,Text -> Hits"),(0,r.yg)("td",{parentName:"tr",align:null},"Triggers a visual search in another app based on the model configs if concept(s) are found in images and returns the matched search hits as regions."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/keyword-filter-operator.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"keyword-filter-operator"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},"This operator is initialized with a set of words, and then determines which are found in the input text."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/input-searcher.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"language-id-operator"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},"Operator for language identification using the langdetect library"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/language-id-operator.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"multimodal-embedder"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Embeddings"),(0,r.yg)("td",{parentName:"tr",align:null},"Embed text or image into a vector representing a high level understanding from our Al models, e.g. CLIP. These embeddings enable similarity search and training on top of them."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/multimodal-embedder.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"multimodal-to-text"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Text"),(0,r.yg)("td",{parentName:"tr",align:null},"Generate text from either text or images or both as input, allowing it to understand and respond to questions about those images"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/multimodal-to-text.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"prompter"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Text"),(0,r.yg)("td",{parentName:"tr",align:null},"Prompt template where inputted text will be inserted into placeholders marked with (data.text.raw)."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/prompter.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"rag-prompter"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Text"),(0,r.yg)("td",{parentName:"tr",align:null},"A prompt template where we will perform a semantic search in the app with the incoming text. The inputted text will be inserted into placeholders marked with '(data.text.raw)' and search results will be inserted into placeholders with '{data.hits}', which will be new line separated"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/rag-prompter.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"regex-based-classifier"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},"Classifies text using regex. If the regex matches, the text is classified as the provided concepts."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/regex-based-classifier.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"text-to-audio"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Audio"),(0,r.yg)("td",{parentName:"tr",align:null},"Given text input, this model produces an audio file containing the spoken version of the input"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/text-to-audio.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"text-to-image"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Image"),(0,r.yg)("td",{parentName:"tr",align:null},"Takes in a prompt and generates an image"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/text-to-image.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"tiling-region-aggregator-operator"),(0,r.yg)("td",{parentName:"tr",align:null},"Frames -> Concepts,Bounding Box"),(0,r.yg)("td",{parentName:"tr",align:null},"Operator to be used as a follow up to the image-tiling-operator and visual detector. This operator will transform the detections on each of tiles back to the original image and perform non-maximum suppression. Only the top class prediction for each box is considered"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/tiling-region-aggregator-operator.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"visual-keypointer"),(0,r.yg)("td",{parentName:"tr",align:null},"Image -> Keypoints"),(0,r.yg)("td",{parentName:"tr",align:null},"This model detects keypoints in images or video frames."),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Edit/visual-keypointer.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"isolation-operator"),(0,r.yg)("td",{parentName:"tr",align:null},"Concepts,BoundingBox -> Concepts,BoundingBox"),(0,r.yg)("td",{parentName:"tr",align:null},"Operator that computes distance between detections and assigns isolation label"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Aggregate/isolation-operator.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"object-counter"),(0,r.yg)("td",{parentName:"tr",align:null},"Concepts -> Metadata"),(0,r.yg)("td",{parentName:"tr",align:null},"count number of regions that match this model's active concepts frame by frame"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Aggregate/object-counter.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"text-aggregation-operator"),(0,r.yg)("td",{parentName:"tr",align:null},"Text -> Text"),(0,r.yg)("td",{parentName:"tr",align:null},"Operator that combines text detections into text body for the whole image. Detections are sorted from left to right first and then top to bottom, using the top-left corner of the bounding box as reference"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Aggregate/text-aggregation-operator.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"tokens-to-entity-operator"),(0,r.yg)("td",{parentName:"tr",align:null},"Text,Concepts -> Text,Concepts"),(0,r.yg)("td",{parentName:"tr",align:null},"Operator that combines text tokens into entities, e.g. New' + 'York' -> New York"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Aggregate/tokens-to-entity-operator.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"annotation-writer"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Any"),(0,r.yg)("td",{parentName:"tr",align:null},"Write the input data to the database in the form of an annotation with a specified status as if a specific user created the annotation"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Action/annotation-writer.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"aws-lambda"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Any"),(0,r.yg)("td",{parentName:"tr",align:null},"This model sends data to an AWS lambda function so you can implement any arbitrary logic to be handled within a model predict or workflow. The request our API sends is a PostModelOutputsRequest in the 'request' field and the response we expect is a MultiOutputResponse response in the 'response' field"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Action/aws-lambda.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"email"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Any"),(0,r.yg)("td",{parentName:"tr",align:null},"Email alert model will send an email if there are any data fields input to this model"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Action/email.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"results-push"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Any"),(0,r.yg)("td",{parentName:"tr",align:null},"This model pushes clarifai prediction results in an external format"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Action/results-push.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"sms"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Any"),(0,r.yg)("td",{parentName:"tr",align:null},"SMS alert model will send a SMS if there are any data fields input to this model"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Action/sms.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"status-push"),(0,r.yg)("td",{parentName:"tr",align:null},"Any -> Any"),(0,r.yg)("td",{parentName:"tr",align:null},"This model pushes processing status of a batch of inputs ingested through vendor/inputs endpoint in one request"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("a",{href:"https://github.com/Clarifai/examples/blob/main/workflows/configs/Nodes/Action/status-push.yml"},(0,r.yg)("img",{src:"/img/python-sdk/yaml.jpeg",width:"50",height:"50"})," "))))),(0,r.yg)("h3",{id:"asr-sentiment"},"ASR Sentiment"),(0,r.yg)("p",null,"Automatic Speech Recognition (ASR) sentiment analysis refers to the process of analyzing the emotional tone or sentiment expressed in spoken language using ASR model."),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},p.A),(0,r.yg)("h3",{id:"demographics"},"Demographics"),(0,r.yg)("p",null,"This is a Multi-model workflow that detects, crops, and recognizes demographic characteristics of faces. Visually classifies age, gender, and multi-culture."),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},c.A),(0,r.yg)("h3",{id:"face-search"},"Face Search"),(0,r.yg)("p",null,"A workflow that combines detection, recognition, and embedding to generate face landmarks and enable visual search using detected faces's embeddings."),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},y.A),(0,r.yg)("h3",{id:"face-sentiment"},"Face Sentiment"),(0,r.yg)("p",null,"Multi-model workflow that combines face detection and sentiment classification of 7 concepts: anger, disgust, fear, neutral, happiness, sadness, contempt."),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},h.A),(0,r.yg)("h3",{id:"general"},"General"),(0,r.yg)("p",null,"A general image detection workflow that detects a variety of common objects, and enable visual search using general embeddings on detected regions."),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},u.A),(0,r.yg)("h3",{id:"language-aware-ocr"},"Language Aware OCR"),(0,r.yg)("p",null,"A workflows that performs OCR in different languages."),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},f.A),(0,r.yg)("h3",{id:"prompter-llm"},"Prompter LLM"),(0,r.yg)("p",null,"A workflow that uses a prompt template with LLM."),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},w.A),(0,r.yg)("h3",{id:"rag-prompter-llm"},"RAG Prompter LLM"),(0,r.yg)("p",null,"This workflow uses LLM with a RAG prompter template."),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},b.A),(0,r.yg)("p",null,"Visit this ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Clarifai/examples/tree/main/workflows/configs"},"link")," to view some YAML examples."),(0,r.yg)("h2",{id:"list-workflows"},"List workflows"),(0,r.yg)("p",null,"The Clarifai Python SDK provides an API that empowers users to effortlessly retrieve a comprehensive list of all workflows accessible within an app. This functionality enables seamless exploration and management of workflows, facilitating a streamlined experience for developers to interact with and leverage the power of Clarifai's workflow capabilities."),(0,r.yg)("p",null,"To know more about workflows visit this ",(0,r.yg)("a",{parentName:"p",href:"https://docs.clarifai.com/portal-guide/workflows/"},"link"),"."),(0,r.yg)(i.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.yg)(l.A,{className:"language-python",mdxType:"CodeBlock"},g.A))),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Output"),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},N.A)),(0,r.yg)("h2",{id:"delete-workflows"},"Delete workflows"),(0,r.yg)("p",null,"The Clarifai Python SDK empowers users to seamlessly delete workflows through the API by specifying the unique identifier of the workflow. This functionality provides a straightforward method for users to manage and remove workflows as needed within their applications or projects. By utilizing the provided workflow id parameter, developers can efficiently interact with the Clarifai platform to streamline workflow management processes."),(0,r.yg)("p",null,"To know more about workflows visit this ",(0,r.yg)("a",{parentName:"p",href:"https://docs.clarifai.com/portal-guide/workflows/"},"link"),"."),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Be certain that you want to delete a particular workflow as the operation cannot be undone.")),(0,r.yg)(i.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.yg)(l.A,{className:"language-python",mdxType:"CodeBlock"},d.A))),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Output"),(0,r.yg)(l.A,{className:"language-text",mdxType:"CodeBlock"},k.A)),(0,r.yg)("h2",{id:"export-workflow"},"Export workflow"),(0,r.yg)("p",null,"The Clarifai Python SDK provides a powerful feature for initiating or swiftly modifying existing Clarifai community workflows through an intuitive YAML configuration. With the export functionality, users can effortlessly download a YAML file representing the entire workflow. This file serves as a local copy, allowing seamless edits and providing the flexibility to create and manage new workflows with ease."),(0,r.yg)("p",null,"To know more about workflows visit this ",(0,r.yg)("a",{parentName:"p",href:"https://docs.clarifai.com/portal-guide/workflows/"},"link"),"."),(0,r.yg)(i.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.yg)(l.A,{className:"language-python",mdxType:"CodeBlock"},m.A))))}E.isMDXComponent=!0},40669:(e,t,a)=>{a.d(t,{A:()=>n});const n='from clarifai.client.user import User\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\n# Specify the correct user_id/app_id pairings\n# Since you\'re making inferences outside your app\'s scope\nUSER_ID = "user_id"\nAPP_ID = "app_id"\n\napp = User(user_id=USER_ID, pat="YOUR_PAT").create_app(\n    app_id=APP_ID, base_workflow="Empty"\n)\n\n\n# create a yaml file specifying the workflow structure\n# eg:\n"""configs/prompter_llm.yml\nworkflow:\n  id: wf-prompter-llm\n  nodes:\n    - id: prompter\n      model:\n          model_id: prompter\n          model_type_id: prompter\n          description: \'Prompter Model\'\n          output_info:\n            params:\n              prompt_template: \'Classify sentiment between postive and negative for the text {data.text.raw}\'\n\n    - id: llm\n      model:\n          user_id: mistralai\n          model_id: mistral-7B-Instruct\n          app_id: completion\n\n      node_inputs:\n        - node_id: prompter\n\n"""\n\n# create the workflow\nprompter_llm_workflow = app.create_workflow(config_filepath="configs/prompter_llm.yml")'},37464:(e,t,a)=>{a.d(t,{A:()=>n});const n='from clarifai.client.app import App\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\napp = App(app_id="APP_ID", user_id="USER_ID", pat="YOUR_PAT")\n# Delete the workflow within an application\napp.delete_workflow(workflow_id="workflow-id")'},32975:(e,t,a)=>{a.d(t,{A:()=>n});const n='from clarifai.client.workflow import Workflow\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\n\nworkflow_url = "https://clarifai.com/clarifai/main/workflows/Demographics"\ndemographics_workflow = Workflow(\n    url=workflow_url , pat="YOUR_PAT"\n)\ndemographics_workflow.export("demographics_workflow.yml")\n"""\nNow the parameters of each model can be changed and new workflow can be easily created by app.create_workflow().\n\nHere we change the margin parameter of the image cropper node to be 1.5\n\n- id: image-crop\n    model:\n      model_id: margin-100-image-crop-custom\n          model_type_id: image-crop\n          description: Custom crop model\n          output_info:\n            params:\n              margin: 1.5\n\n\n"""\n'},83972:(e,t,a)=>{a.d(t,{A:()=>n});const n='from clarifai.client.app import App\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\napp = App(app_id="APP_ID", user_id="USER_ID", pat="YOUR_PAT")\n\nfor workflow in app.list_workflows(page_no=1,per_page=7):\n    print("Workflow ID: ", workflow.id)'},95073:(e,t,a)=>{a.d(t,{A:()=>n});const n="workflow:\n  id: asr-sentiment\n  nodes:\n    - id: audio-speech-recognition\n      model:\n          model_id: asr-wav2vec2-large-robust-ft-swbd-300h-english\n          user_id: facebook\n          app_id: asr\n\n    - id: text-sentiment-classification\n      model:\n          model_id: sentiment-analysis-twitter-roberta-base\n          user_id: erfan\n          app_id: text-classification\n\n      node_inputs:\n        - node_id: audio-speech-recognition"},57272:(e,t,a)=>{a.d(t,{A:()=>n});const n='2024-01-18 16:34:46 INFO     clarifai.client.app:                                                        app.py:653\n\n                             Workflow Deleted                                                                      \n\n                             code: SUCCESS                                                                         \n\n                             description: "Ok"                                                                     \n\n                             req_id: "a979f35e9c826bb9046f4d92879c6b7c" '},3926:(e,t,a)=>{a.d(t,{A:()=>n});const n="workflow:\n  id: Demographics\n  nodes:\n    - id: detect-concept\n      model:\n        model_id: face-detection\n        model_version_id: 45fb9a671625463fa646c3523a3087d5\n\n    - id: image-crop\n      model:\n        model_id: margin-110-image-crop\n        model_version_id: b9987421b40a46649566826ef9325303\n      node_inputs:\n        - node_id: detect-concept\n\n    - id: demographics-race\n      model:\n        model_id: ethnicity-demographics-recognition\n        model_version_id: b2897edbda314615856039fb0c489796\n      node_inputs:\n        - node_id: image-crop\n\n    - id: demographics-gender\n      model:\n        model_id: gender-demographics-recognition\n        model_version_id: ff83d5baac004aafbe6b372ffa6f8227\n      node_inputs:\n        - node_id: image-crop\n\n    - id: demographics-age\n      model:\n        model_id: age-demographics-recognition\n        model_version_id: fb9f10339ac14e23b8e960e74984401b\n      node_inputs:\n        - node_id: image-crop\n"},63481:(e,t,a)=>{a.d(t,{A:()=>n});const n="workflow:\n  id: Face-Search\n  nodes:\n    - id: face-detect\n      model:\n        model_id: face-detection\n        model_version_id: fe995da8cb73490f8556416ecf25cea3\n\n    - id: crop\n      model:\n        model_id: margin-100-image-crop\n        model_version_id: 0af5cd8ad40e43ef92154e4f4bc76bef\n      node_inputs:\n        - node_id: face-detect\n\n    - id: face-landmarks\n      model:\n        model_id: face-landmarks\n        model_version_id: 98ace9ca45e64339be94b06011557e2a\n      node_inputs:\n        - node_id: crop\n\n    - id: face-alignment\n      model:\n        model_id: landmarks-align\n        model_version_id: 4bc8b83a327247829ec638c78cde5f8b\n      node_inputs:\n        - node_id: face-landmarks\n\n    - id: face-embed\n      model:\n        model_id: face-identification-transfer-learn\n        model_version_id: fc3b8814fbe54533a3d80a1896dc9884\n      node_inputs:\n        - node_id: face-alignment\n\n    - id: face-cluster\n      model:\n        model_id: face-clustering\n        model_version_id: 621d74074a5443d7ad9dc1503fba9ff0\n      node_inputs:\n        - node_id: face-embed\n"},56118:(e,t,a)=>{a.d(t,{A:()=>n});const n="workflow:\n  id: Face-Sentiment\n  nodes:\n    - id: face-det\n      model:\n        model_id: face-detection\n        model_version_id: 6dc7e46bc9124c5c8824be4822abe105\n\n    - id: margin-110\n      model:\n        model_id: margin-110-image-crop\n        model_version_id: b9987421b40a46649566826ef9325303\n      node_inputs:\n        - node_id: face-det\n\n    - id: face-sentiment\n      model:\n        model_id: face-sentiment-recognition\n        model_version_id: a5d7776f0c064a41b48c3ce039049f65\n      node_inputs:\n        - node_id: margin-110\n"},73823:(e,t,a)=>{a.d(t,{A:()=>n});const n="workflow:\n  id: General\n  nodes:\n    - id: general-v1.5-concept\n      model:\n          model_id: aaa03c23b3724a16a56b629203edc62c\n          model_version_id: aa7f35c01e0642fda5cf400f543e7c40\n\n    - id: general-v1.5-embed\n      model:\n          model_id: bbb5f41425b8468d9b7a554ff10f8581\n          model_version_id: bb186755eda04f9cbb6fe32e816be104\n\n    - id: general-v1.5-cluster\n      model:\n          model_id: cccbe437d6e54e2bb911c6aa292fb072\n          model_version_id: cc2074cff6dc4c02b6f4e1b8606dcb54\n      node_inputs:\n        - node_id: general-v1.5-embed\n"},176:(e,t,a)=>{a.d(t,{A:()=>n});const n='workflow:\n  id: wf-ocr\n  nodes:\n    - id: ocr-workflow\n      model:\n          model_id: language-aware-multilingual-ocr-multiplex\n\n    - id: text-aggregator\n      model:\n          model_id: text-aggregation\n          model_type_id: text-aggregation-operator\n          output_info:\n            params:\n              avg_word_width_window_factor: 2.0\n              avg_word_height_window_factor: 1.0\n\n      node_inputs:\n        - node_id: ocr-workflow\n\n    - id: language-id-operator\n      model:\n          model_id: language-id\n          model_type_id: language-id-operator\n          output_info:\n            params:\n              library: "fasttext"\n              topk: 1\n              threshold:  0.1\n              lowercase: true\n\n      node_inputs:\n        - node_id: text-aggregator\n'},79890:(e,t,a)=>{a.d(t,{A:()=>n});const n="Workflow ID:  object_track\n\nWorkflow ID:  video_track\n\nWorkflow ID:  multimodal_to_text\n\nWorkflow ID:  text_to_audio\n\nWorkflow ID:  upscale_workflow\n\nWorkflow ID:  image_generation\n\nWorkflow ID:  text_generation"},86416:(e,t,a)=>{a.d(t,{A:()=>n});const n="workflow:\n  id: wf-prompter-llm\n  nodes:\n    - id: prompter\n      model:\n          model_id: prompter\n          model_type_id: prompter\n          description: 'Prompter Model'\n          output_info:\n            params:\n              prompt_template: 'Classify sentiment between postive and negative for the text {data.text.raw}'\n\n    - id: llm\n      model:\n          user_id: mistralai\n          model_id: mistral-7B-Instruct\n          app_id: completion\n\n      node_inputs:\n        - node_id: prompter"},28213:(e,t,a)=>{a.d(t,{A:()=>n});const n="workflow:\n  id: wf-prompter-llm\n  nodes:\n    - id: rag-prompter\n      model:\n          model_id: rag-prompter\n          model_type_id: rag-prompter\n          description: 'RAG Prompter Model'\n\n    - id: llm\n      model:\n          user_id: mistralai\n          model_id: mistral-7B-Instruct\n          app_id: completion\n\n      node_inputs:\n        - node_id: rag-prompter"}}]);