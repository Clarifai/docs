"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[5205],{14795:(e,t,n)=>{n.d(t,{A:()=>j});n(96540);var o=n(18215),r=n(26972),s=n(28774),i=n(53465),l=n(16654),a=n(21312),c=n(51107);const u={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var d=n(74848);function m({className:e,href:t,children:n}){return(0,d.jsx)(s.A,{href:t,className:(0,o.A)("card padding--lg",u.cardContainer,e),children:n})}function p({className:e,href:t,icon:n,title:r,description:s}){return(0,d.jsxs)(m,{href:t,className:e,children:[(0,d.jsxs)(c.A,{as:"h2",className:(0,o.A)("text--truncate",u.cardTitle),title:r,children:[n," ",r]}),s&&(0,d.jsx)("p",{className:(0,o.A)("text--truncate",u.cardDescription),title:s,children:s})]})}function h({item:e}){const t=(0,r.Nr)(e),n=function(){const{selectMessage:e}=(0,i.W)();return t=>e(t,(0,a.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return t?(0,d.jsx)(p,{className:e.className,href:t,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:e.description??n(e.items.length)}):null}function f({item:e}){const t=(0,l.A)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,r.cC)(e.docId??void 0);return(0,d.jsx)(p,{className:e.className,href:e.href,icon:t,title:e.label,description:e.description??n?.description})}function g({item:e}){switch(e.type){case"link":return(0,d.jsx)(f,{item:e});case"category":return(0,d.jsx)(h,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}const x={docCardListItem:"docCardListItem_W1sv"};function k({className:e}){const t=(0,r.a4)();return(0,d.jsx)(j,{items:t,className:e})}function w({item:e}){return(0,d.jsx)("article",{className:(0,o.A)(x.docCardListItem,"col col--6"),children:(0,d.jsx)(g,{item:e})})}function j(e){const{items:t,className:n}=e;if(!t)return(0,d.jsx)(k,{...e});const s=(0,r.d1)(t);return(0,d.jsx)("section",{className:(0,o.A)("row",n),children:s.map((e,t)=>(0,d.jsx)(w,{item:e},t))})}},19316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"compute/toolkits/README","title":"Toolkits","description":"Download and run AI models locally with Clarifai toolkits","source":"@site/docs/compute/toolkits/README.mdx","sourceDirName":"compute/toolkits","slug":"/compute/toolkits/","permalink":"/compute/toolkits/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"description":"Download and run AI models locally with Clarifai toolkits"},"sidebar":"tutorialSidebar","previous":{"title":"Local Runners","permalink":"/compute/local-runners/"},"next":{"title":"Ollama","permalink":"/compute/toolkits/ollama"}}');var r=n(74848),s=n(28453),i=n(14795),l=n(95068);const a={description:"Download and run AI models locally with Clarifai toolkits"},c="Toolkits",u={},d=[];function m(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"toolkits",children:"Toolkits"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Download and run AI models locally with Clarifai toolkits"})}),"\n",(0,r.jsx)("hr",{}),"\n",(0,r.jsx)(t.p,{children:"Toolkits let you run large language models (LLMs) and other generative AI models locally on your machine. They provide a standardized way to initialize a new Clarifai model directory structure that\u2019s fully compatible with the Clarifai platform."}),"\n",(0,r.jsx)(t.p,{children:"Using toolkits, you can easily download and set up models from popular repositories such as Hugging Face or Ollama, making it simple to prepare them for deployment or integration with Clarifai."}),"\n",(0,r.jsx)(t.p,{children:"To download and initialize a model using a toolkit we support, run:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"clarifai model init --toolkit <toolkit-name>\n"})}),"\n","\n",(0,r.jsx)(i.A,{items:(0,l.$S)().items})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var o=n(96540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}},53465:(e,t,n)=>{n.d(t,{W:()=>c});var o=n(96540),r=n(44586);const s=["zero","one","two","few","many","other"];function i(e){return s.filter(t=>e.includes(t))}const l={locale:"en",pluralForms:i(["one","other"]),select:e=>1===e?"one":"other"};function a(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,o.useMemo)(()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:i(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),l}},[e])}function c(){const e=a();return{selectMessage:(t,n)=>function(e,t,n){const o=e.split("|");if(1===o.length)return o[0];o.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${o.length}: ${e}`);const r=n.select(t),s=n.pluralForms.indexOf(r);return o[Math.min(s,o.length-1)]}(n,t,e)}}},95068:(e,t,n)=>{n.d(t,{$S:()=>o});n(44586);function o(...e){return n(48295).$S(...e)}}}]);