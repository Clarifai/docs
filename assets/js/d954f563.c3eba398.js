"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[9873],{85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(86010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,s),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(87462),r=n(67294),o=n(86010),s=n(12466),i=n(16550),l=n(91980),u=n(67392),c=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function f(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=p(e),[s,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[l,u]=h({queryString:n,groupId:a}),[d,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),b=(()=>{const e=l??d;return f({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var b=n(72389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==i&&(d(t),l(a))},f=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:f,onClick:p},s,{className:(0,o.Z)("tabs__item",k.tabItem,s?.className,{"tabs__item--active":i===t})}),n??t)})))}function _(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function T(e){const t=m(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",k.tabList)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(_,(0,a.Z)({},e,t)))}function v(e){const t=(0,b.Z)();return r.createElement(T,(0,a.Z)({key:String(t)},e))}},83369:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>d,default:()=>k,frontMatter:()=>c,metadata:()=>p,toc:()=>h});var a=n(87462),r=(n(67294),n(3905)),o=n(74866),s=n(85162),i=n(90814);const l='\x3c!--index.html file--\x3e\n\n<script>\n    //////////////////////////////////////////////////////////////////////////////////\n    // In this section, we set the user authentication, app ID, and the details for\n    // performing task annotations. Change these strings to run your own example.\n    /////////////////////////////////////////////////////////////////////////////////\n  \n    const USER_ID = \'YOUR_USER_ID_HERE\';\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = \'YOUR_PAT_HERE\';\n    const APP_ID = \'YOUR_APP_ID_HERE\';\n    // Change these to perform your own task annotations  \n    const INPUT_ID = \'c99f1b557d1d43d1916b46f8ce4a0487\';\n    const CONCEPT_ID_1 = \'tree\';\n    const CONCEPT_ID_2 = \'water\';\n    const TASK_ID = \'c37aed156e474e03bb5246576d9f48fd\';\n  \n    ///////////////////////////////////////////////////////////////////////////////////\n    // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n    ///////////////////////////////////////////////////////////////////////////////////\n  \n    const raw = JSON.stringify({\n      "user_app_id": {\n        "user_id": USER_ID,\n        "app_id": APP_ID\n      },\n      "annotations": [\n        {\n          "input_id": INPUT_ID,\n          "data": {\n            "concepts": [\n              {\n                "id": CONCEPT_ID_1,\n                "value": 1\n              },\n              {\n                "id": CONCEPT_ID_2,\n                "value": 0\n              }\n            ]\n          },\n          "annotation_info": {\n            "task_id": TASK_ID\n          }\n        }\n      ]\n    });\n  \n    const requestOptions = {\n      method: \'POST\',\n      headers: {\n        \'Accept\': \'application/json\',\n        \'Authorization\': \'Key \' + PAT\n      },\n      body: raw\n    };\n  \n    fetch("https://api.clarifai.com/v2/annotations", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log(\'error\', error));\n  \n  <\/script>',u='curl -X POST "https://api.clarifai.com/v2/users/YOUR_USER_ID_HERE/apps/YOUR_APP_ID_HERE/annotations" \\\n  -H "Authorization: Key YOUR_PAT_HERE" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n      "annotations": [\n        {\n          "input_id": "INPUT_ID_HERE",\n          "data": {\n            "concepts": [\n              {\n                "id": "tree",\n                "value": 1\n              },\n              {\n                "id": "water",\n                "value": 0\n              }\n            ]\n          },\n          "annotation_info": {\n            "task_id": "TASK_ID_HERE"\n          }\n        }\n      ]\n    }\'',c={description:"This is a page about performing task annotations with the Clarifai API.",sidebar_position:5},d="Task Annotations",p={unversionedId:"api-guide/annotate/task-annotations",id:"api-guide/annotate/task-annotations",title:"Task Annotations",description:"This is a page about performing task annotations with the Clarifai API.",source:"@site/docs/api-guide/annotate/task-annotations.md",sourceDirName:"api-guide/annotate",slug:"/api-guide/annotate/task-annotations",permalink:"/api-guide/annotate/task-annotations",draft:!1,editUrl:"https://github.com/Clarifai/docs/blob/main/docs/api-guide/annotate/task-annotations.md",tags:[],version:"current",lastUpdatedAt:1698924850,formattedLastUpdatedAt:"Nov 2, 2023",sidebarPosition:5,frontMatter:{description:"This is a page about performing task annotations with the Clarifai API.",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Tasks",permalink:"/api-guide/annotate/tasks"},next:{title:"Creating and Training Models",permalink:"/api-guide/model/"}},f={},h=[],m={toc:h},b="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(b,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"task-annotations"},"Task Annotations"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perform task annotations")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"In order to keep track of each user's work assigned to a task, all the annotations of this user related to this task should be linked to the task ID."),(0,r.kt)("p",null,"Therefore, when a user creates an annotation, the task ID should be provided as below:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)(i.Z,{className:"language-bash",mdxType:"CodeBlock"},u)),(0,r.kt)(s.Z,{value:"js_rest",label:"JavaScript (REST)",mdxType:"TabItem"},(0,r.kt)(i.Z,{className:"language-javascript",mdxType:"CodeBlock"},l))))}k.isMDXComponent=!0}}]);