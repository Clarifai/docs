"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[6805],{543:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>d,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"additional-resources/api-overview/api-outputs","title":"API Outputs","description":"Understand Clarifai\u2019s API responses","source":"@site/docs/additional-resources/api-overview/api-outputs.md","sourceDirName":"additional-resources/api-overview","slug":"/additional-resources/api-overview/api-outputs","permalink":"/additional-resources/api-overview/api-outputs","draft":false,"unlisted":false,"editUrl":"https://github.com/Clarifai/docs/blob/main/docs/additional-resources/api-overview/api-outputs.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"description":"Understand Clarifai\u2019s API responses","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Using Postman with Clarifai APIs","permalink":"/additional-resources/api-overview/postman"},"next":{"title":"Applications","permalink":"/additional-resources/applications/"}}');var s=a(74848),t=a(28453),r=(a(65537),a(79329),a(58069));const o='status {\n  code: SUCCESS\n  description: "Ok"\n  req_id: "a6073f6b81df496faa084355a05f81f0"\n}\noutputs {\n  id: "515a810bb56b4ac1bb118fe7ec4594be"\n  status {\n    code: SUCCESS\n    description: "Ok"\n  }\n  created_at {\n    seconds: 1740731206\n    nanos: 185089857\n  }\n  model {\n    id: "general-image-recognition"\n    name: "Image Recognition"\n    created_at {\n      seconds: 1457543499\n      nanos: 608845000\n    }\n    modified_at {\n      seconds: 1739900944\n      nanos: 809517000\n    }\n    app_id: "main"\n    model_version {\n      id: "aa7f35c01e0642fda5cf400f543e7c40"\n      created_at {\n        seconds: 1520370624\n        nanos: 454834000\n      }\n      status {\n        code: MODEL_TRAINED\n        description: "Model is trained and ready for deployment"\n      }\n      visibility {\n        gettable: PUBLIC\n      }\n      app_id: "main"\n      user_id: "clarifai"\n      metadata {\n      }\n    }\n    user_id: "clarifai"\n    model_type_id: "visual-classifier"\n    visibility {\n      gettable: PUBLIC\n    }\n    workflow_recommended {\n    }\n    image {\n      url: "https://data.clarifai.com/large/users/clarifai/apps/main/input_owners/artjom/inputs/image/3451432d5ee13c416ec5a4e8e518f1c9"\n      hosted {\n        prefix: "https://data.clarifai.com"\n        suffix: "users/clarifai/apps/main/input_owners/artjom/inputs/image/3451432d5ee13c416ec5a4e8e518f1c9"\n        sizes: "small"\n        sizes: "large"\n        crossorigin: "use-credentials"\n      }\n    }\n  }\n  input {\n    id: "ac7bc26bc08444ca894bff202e28801a"\n    data {\n      image {\n        url: "https://samples.clarifai.com/metro-north.jpg"\n        base64: "true"\n      }\n    }\n  }\n  data {\n    concepts {\n      id: "ai_HLmqFqBf"\n      name: "train"\n      value: 0.999605954\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_fvlBqXZR"\n      name: "railway"\n      value: 0.999299169\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_SHNDcmJ3"\n      name: "subway system"\n      value: 0.998259127\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_6kTjGfF6"\n      name: "station"\n      value: 0.998013735\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_RRXLczch"\n      name: "locomotive"\n      value: 0.997266769\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_Xxjc3MhT"\n      name: "transportation system"\n      value: 0.996975541\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_VRmbGVWh"\n      name: "travel"\n      value: 0.988967478\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_jlb9q33b"\n      name: "commuter"\n      value: 0.980903447\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_2gkfMDsM"\n      name: "platform"\n      value: 0.980670214\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_n9vjC1jB"\n      name: "light"\n      value: 0.974255323\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_sQQj52KZ"\n      name: "train station"\n      value: 0.968879461\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_l4WckcJN"\n      name: "blur"\n      value: 0.967263579\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_WBQfVV0p"\n      name: "city"\n      value: 0.961552262\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_TZ3C79C6"\n      name: "road"\n      value: 0.961399674\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_CpFBRWzD"\n      name: "urban"\n      value: 0.960412741\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_tr0MBp64"\n      name: "traffic"\n      value: 0.959924757\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_GjVpxXrs"\n      name: "street"\n      value: 0.947632849\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_mcSHVRfS"\n      name: "public"\n      value: 0.934372783\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_J6d1kV8t"\n      name: "tramway"\n      value: 0.932164907\n      app_id: "main"\n      user_id: "clarifai"\n    }\n    concepts {\n      id: "ai_6lhccv44"\n      name: "business"\n      value: 0.929403365\n      app_id: "main"\n      user_id: "clarifai"\n    }\n  }\n}\n',c='{\n    "status": {\n        "code": 10000,\n        "description": "Ok",\n        "req_id": "20ab5bcf0566429f9b350e50372456ce"\n    },\n    "outputs": [{\n        "id": "a03a4b326e3041e88983a88b58c41f2b",\n        "status": {\n            "code": 10000,\n            "description": "Ok"\n        },\n        "created_at": "2025-02-28T09:41:55.568082659Z",\n        "model": {\n            "id": "general-image-recognition",\n            "name": "Image Recognition",\n            "created_at": "2016-03-09T17:11:39.608845Z",\n            "modified_at": "2025-02-18T17:49:04.809517Z",\n            "app_id": "main",\n            "model_version": {\n                "id": "aa7f35c01e0642fda5cf400f543e7c40",\n                "created_at": "2018-03-06T21:10:24.454834Z",\n                "status": {\n                    "code": 21100,\n                    "description": "Model is trained and ready for deployment"\n                },\n                "visibility": {\n                    "gettable": 50\n                },\n                "app_id": "main",\n                "user_id": "clarifai",\n                "metadata": {}\n            },\n            "user_id": "clarifai",\n            "model_type_id": "visual-classifier",\n            "visibility": {\n                "gettable": 50\n            },\n            "toolkits": [],\n            "use_cases": [],\n            "languages": [],\n            "languages_full": [],\n            "check_consents": [],\n            "workflow_recommended": false,\n            "image": {\n                "url": "https://data.clarifai.com/large/users/clarifai/apps/main/input_owners/artjom/inputs/image/3451432d5ee13c416ec5a4e8e518f1c9",\n                "hosted": {\n                    "prefix": "https://data.clarifai.com",\n                    "suffix": "users/clarifai/apps/main/input_owners/artjom/inputs/image/3451432d5ee13c416ec5a4e8e518f1c9",\n                    "sizes": ["small", "large"],\n                    "crossorigin": "use-credentials"\n                }\n            }\n        },\n        "input": {\n            "id": "6f341a82f6bb4326ab637e590b654a57",\n            "data": {\n                "image": {\n                    "url": "https://samples.clarifai.com/metro-north.jpg",\n                    "base64": "dHJ1ZQ=="\n                }\n            }\n        },\n        "data": {\n            "concepts": [{\n                "id": "ai_HLmqFqBf",\n                "name": "train",\n                "value": 0.99960595,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_fvlBqXZR",\n                "name": "railway",\n                "value": 0.99929917,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_SHNDcmJ3",\n                "name": "subway system",\n                "value": 0.9982582,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_6kTjGfF6",\n                "name": "station",\n                "value": 0.99801373,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_RRXLczch",\n                "name": "locomotive",\n                "value": 0.9972677,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_Xxjc3MhT",\n                "name": "transportation system",\n                "value": 0.996977,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_VRmbGVWh",\n                "name": "travel",\n                "value": 0.98897153,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_jlb9q33b",\n                "name": "commuter",\n                "value": 0.9808896,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_2gkfMDsM",\n                "name": "platform",\n                "value": 0.98066735,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_n9vjC1jB",\n                "name": "light",\n                "value": 0.9742649,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_sQQj52KZ",\n                "name": "train station",\n                "value": 0.968873,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_l4WckcJN",\n                "name": "blur",\n                "value": 0.96725816,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_WBQfVV0p",\n                "name": "city",\n                "value": 0.96156096,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_TZ3C79C6",\n                "name": "road",\n                "value": 0.96141803,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_CpFBRWzD",\n                "name": "urban",\n                "value": 0.96043277,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_tr0MBp64",\n                "name": "traffic",\n                "value": 0.95991284,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_GjVpxXrs",\n                "name": "street",\n                "value": 0.94766,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_mcSHVRfS",\n                "name": "public",\n                "value": 0.9343276,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_J6d1kV8t",\n                "name": "tramway",\n                "value": 0.9321725,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }, {\n                "id": "ai_6lhccv44",\n                "name": "business",\n                "value": 0.9293912,\n                "app_id": "main",\n                "user_id": "clarifai"\n            }]\n        }\n    }]\n}',d={description:"Understand Clarifai\u2019s API responses",sidebar_position:6},l="API Outputs",u={},p=[{value:"Status Section",id:"status-section",level:2},{value:"Outputs Section",id:"outputs-section",level:2},{value:"Resource Details",id:"resource-details",level:3},{value:"Timestamps",id:"timestamps",level:3},{value:"Results Section",id:"results-section",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"api-outputs",children:"API Outputs"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Understand Clarifai\u2019s API responses"})}),"\n",(0,s.jsx)("hr",{}),"\n","\n","\n",(0,s.jsx)(n.p,{children:"Clarifai\u2019s API responses are designed to provide clear and structured feedback to help you easily interpret results and effectively debug your code. Each API response adheres to a well-defined, nested, hierarchical structure, where data is organized into distinct messages and fields."}),"\n",(0,s.jsx)(n.p,{children:"The responses are delivered in different data formats depending on your request, but they can be processed in a similar manner programmatically."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/api-overview/api-clients/grpc-vs-http-channels#when-to-use-the-http-channel",children:"REST API"})," requests deliver responses in JSON, characterized by the ",(0,s.jsx)(n.code,{children:'{ "key": "value" }'})," syntax."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["For gRPC requests, typically made through our ",(0,s.jsx)(n.a,{href:"https://docs.clarifai.com/sdk/python-installation",children:"Python SDK"})," or other ",(0,s.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/api-overview/api-clients/",children:"client libraries"}),", responses are provided in Protocol Buffers (protobuf), a binary serialization format optimized for speed and size. Protobuf uses the ",(0,s.jsx)(n.code,{children:"key: value"})," syntax in its text format."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The specific content within a response varies based on the API endpoint you've used. For example, a response from a ",(0,s.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/predict/images#predict-via-url",children:"model prediction"})," request will differ significantly from one obtained when ",(0,s.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/concepts/create-get-update/#add-concepts",children:"creating a concept"}),"."]}),"\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"Example response from REST API request"}),(0,s.jsx)(r.A,{className:"language-json",children:c})]}),"\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"Example response from gRPC API request"}),(0,s.jsx)(r.A,{className:"language-json",children:o})]}),"\n",(0,s.jsx)(n.p,{children:"Typically, the response consists of several key sections, including:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Id"})," \u2014 The ",(0,s.jsx)(n.code,{children:"id"})," is a unique identifier assigned to an API operation or resource. It serves as a reference that allows tracking, retrieval, and management of the request or resource in future interactions. Example: ",(0,s.jsx)(n.code,{children:'id: "a6fbf0c4f4bf4bb09f2158ad3f8dfc4e"'}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Status"})," \u2014 Indicates the overall success or failure of the request."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Outputs"})," \u2014 Contains details about the data processed by the API (such as images, videos, or text) and the results of the analysis, such as timestamps, resource information, and other relevant details."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Results"})," \u2014 This section, which is mostly found within the outputs section, contains the core results of the API call, such as predictions or analysis data."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"status-section",children:"Status Section"}),"\n",(0,s.jsxs)(n.p,{children:["The top-level ",(0,s.jsx)(n.code,{children:"status"})," section provides information about the outcome of the API request. It includes:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"code"})," \u2014 A numeric or string code indicating the status (such as 10000 or SUCCESS for a successful response). See a list of all the Clarifai\u2019s status codes ",(0,s.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/api-overview/status-codes",children:"here"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"description"}),' \u2014 A human-readable message describing the status (such as "Ok", "Download pending").']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"req_id"})," \u2014 A unique identifier for the request, useful for debugging and tracking."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Below is an example of a successful response from a gRPC API request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'status {\n  code: SUCCESS\n  description: "Ok"\n  req_id: "a6073f6b81df496faa084355a05f81f0"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Below is an example of a successful response from a REST API request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'"status": {\n    "code": 10000,\n    "description": "Ok",\n    "req_id": "20ab5bcf0566429f9b350e50372456ce"\n    },\n'})}),"\n",(0,s.jsx)(n.p,{children:"Below is an example of a failed response from a gRPC API request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'code: MODEL_DOES_NOT_EXIST\ndescription: "Model does not exist"\ndetails: "Model does not exist"\nreq_id: "4d6cf25f4e0c48b19ff3ec1755ac1b29"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Below is an example of a failed response from a REST API request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'"status": {\n    "code": 21200,\n    "description": "Model does not exist",\n    "details": "Model does not exist",\n    "req_id": "09715165a0d24a109f3951b61d73dfe8"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"outputs-section",children:"Outputs Section"}),"\n",(0,s.jsxs)(n.p,{children:["Beyond the ",(0,s.jsx)(n.code,{children:"status"})," output, the content of the response varies depending on the type of operation you performed."]}),"\n",(0,s.jsx)(n.p,{children:"Below are some of the most common details found in API responses."}),"\n",(0,s.jsx)(n.h3,{id:"resource-details",children:"Resource Details"}),"\n",(0,s.jsx)(n.p,{children:"The response can include details about the resource involved in the request, such as an input, model, workflow, or application."}),"\n",(0,s.jsxs)(n.p,{children:["For example, when analyzing an image input, you can find the ",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"name"}),", and other relevant details of the model used for processing."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'"model": {\n    "id": "general-image-recognition",\n    "name": "Image Recognition",\n    "model_version": {\n        "id": "aa7f35c01e0642fda5cf400f543e7c40",\n            "created_at": "2018-03-06T21:10:24.454834Z",\n            "status": {\n                "code": 21100,\n                "description": "Model is trained and ready for deployment"\n            },\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"timestamps",children:"Timestamps"}),"\n",(0,s.jsx)(n.p,{children:"Timestamps provide important information about when a resource was created and last modified. These timestamps are crucial for tracking changes, auditing, and understanding the lifecycle of resources in your Clarifai projects."}),"\n",(0,s.jsx)(n.p,{children:"These are the timestamps outputted in a successful response:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"created_at"})," \u2014 Indicates the exact date and time when a resource or an operation was first created or first performed, respectively."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"modified_at"})," \u2014 Indicates the exact date and time when a resource was last modified."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Below is an example response from a gRPC API request:"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["The gRPC response includes timestamps in Unix epoch time, which represents the number of seconds since January 1, 1970 (UTC). For example, a ",(0,s.jsx)(n.code,{children:"created_at"})," field of ",(0,s.jsx)(n.code,{children:"1457543499"})," seconds and ",(0,s.jsx)(n.code,{children:"608845000"})," nanoseconds converts to March 9, 2016, at 10:11:39.608845 AM UTC. The ",(0,s.jsx)(n.code,{children:"nanos"})," field adds precision by representing fractional seconds."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'model {\n    id: "general-image-recognition",\n    name: "Image Recognition",\n    created_at {\n        seconds: 1457543499,\n        nanos: 608845000\n        },\n    modified_at {\n        seconds: 1739900944,\n        nanos: 809517000\n    },\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Below is an example response from a REST API request:"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["In REST API responses, ",(0,s.jsx)(n.a,{href:"https://github.com/protocolbuffers/protobuf/blob/0bfe41b27e3dd8a30ae383210d7af10c28a642ea/src/google/protobuf/timestamp.proto#L108-L144",children:"timestamps"})," are converted to the ",(0,s.jsx)(n.a,{href:"https://www.ietf.org/rfc/rfc3339.txt",children:"RFC 3339"})," standard. The standard represents date and time as a string in this format: ",(0,s.jsx)(n.code,{children:"{year}-{month}-{day}T{hour}:{minute}:{second}[.{fractional_seconds}]Z"}),"."]}),(0,s.jsx)(n.p,{children:"These are the key formatting rules:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Year (",(0,s.jsx)(n.code,{children:"{year}"}),") is always four digits (such as ",(0,s.jsx)(n.code,{children:"2025"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Month, day, hour, minute, and second are zero-padded to two digits each (such as ",(0,s.jsx)(n.code,{children:"02"}),", ",(0,s.jsx)(n.code,{children:"09"}),", ",(0,s.jsx)(n.code,{children:"17"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Fractional seconds (optional) can go up to 9 digits, supporting up to nanosecond resolution (such as ",(0,s.jsx)(n.code,{children:".608845"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:['The "Z" suffix indicates the UTC time zone (such as ',(0,s.jsx)(n.code,{children:"2025-02-18T17:49:04.809517Z"}),")."]}),"\n"]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'"model": {\n    "id": "general-image-recognition",\n    "name": "Image Recognition",\n    "created_at": "2016-03-09T17:11:39.608845Z",\n    "modified_at": "2025-02-18T17:49:04.809517Z",\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"results-section",children:"Results Section"}),"\n",(0,s.jsx)(n.p,{children:'When you make a successful API call to Clarifai, the "results" section is where the real action happens. It\'s the payload containing the information you requested \u2014 the insights, predictions, or data derived from your input.'}),"\n",(0,s.jsx)(n.p,{children:'The exact content of the "results" section varies significantly depending on the API endpoint you\'re using.'}),"\n",(0,s.jsxs)(n.p,{children:["Below are some common elements you might encounter across different Clarifai API endpoints (",(0,s.jsx)(n.em,{children:"the examples are for REST API requests"}),"):"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Image recognition requests"})," \u2014 The ",(0,s.jsx)(n.code,{children:"outputs"})," field is a common container for storing the core results of prediction or analysis tasks. Inside ",(0,s.jsx)(n.code,{children:"outputs"}),", the ",(0,s.jsx)(n.code,{children:"data"})," field includes the actual results, such as recognized ",(0,s.jsx)(n.code,{children:"concepts"})," (",(0,s.jsx)(n.a,{href:"https://docs.clarifai.com/portal-guide/inputs-manager/concepts",children:"labels"}),") and their confidence scores."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'{\n  "outputs": [\n    {\n      "data": {\n        "concepts": [\n          { "id": "dog", "name": "dog", "value": 0.98 },\n          { "id": "pet", "name": "pet", "value": 0.95 }\n        ]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Concepts creation requests"})," \u2014 The ",(0,s.jsx)(n.code,{children:"concepts"})," field contains the details of the newly created concept, including its ID, name, and other relevant attributes."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'{\n  "concepts": [\n    {\n      "id": "charlie",\n      "name": "Charlie",\n      "app_id": "test-app"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Object detection requests"})," \u2014 The ",(0,s.jsx)(n.code,{children:"regions"})," field contains information about the ",(0,s.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/predict/images#visual-detection",children:"detected objects"})," within an image or video. This includes bounding box coordinates, associated ",(0,s.jsx)(n.code,{children:"concepts"}),", and their corresponding confidence scores."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'{\n  "outputs": [\n    {\n      "data": {\n        "regions": [\n          {\n            "region_info": { "bounding_box": { "top_row": 0.1, "left_col": 0.2, "bottom_row": 0.5, "right_col": 0.6 } },\n            "data": {\n              "concepts": [{ "id": "cat", "name": "cat", "value": 0.97 }]\n            }\n          }\n        ]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Workflow execution requests"})," \u2014 The results contain the outputs of each step in the ",(0,s.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/workflows/workflow-predict#images",children:"workflow"})," execution."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'{\n  "results": [\n    {\n      "outputs": [\n        {\n          "model": { "id": "general-image-recognition" },\n          "data": {\n            "concepts": [{ "id": "tree", "name": "tree", "value": 0.92 }]\n          }\n        }\n      ]\n    }\n  ]\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},65537:(e,n,a)=>{a.d(n,{A:()=>y});var i=a(96540),s=a(18215),t=a(65627),r=a(56347),o=a(50372),c=a(30604),d=a(11861),l=a(78749);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:a}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:a,attributes:i,default:s}}=e;return{value:n,label:a,attributes:i,default:s}}))}(a);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function h(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:a}=e;const s=(0,r.W6)(),t=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,c.aZ)(t),(0,i.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(s.location.search);n.set(t,e),s.replace({...s.location,search:n.toString()})}),[t,s])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:s}=e,t=p(e),[r,c]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=a.find((e=>e.default))??a[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:t}))),[d,u]=m({queryString:a,groupId:s}),[f,x]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,t]=(0,l.Dv)(a);return[s,(0,i.useCallback)((e=>{a&&t.set(e)}),[a,t])]}({groupId:s}),g=(()=>{const e=d??f;return h({value:e,tabValues:t})?e:null})();(0,o.A)((()=>{g&&c(g)}),[g]);return{selectedValue:r,selectValue:(0,i.useCallback)((e=>{if(!h({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),x(e)}),[u,x,t]),tabValues:t}}var x=a(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var _=a(74848);function j(e){let{className:n,block:a,selectedValue:i,selectValue:r,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,t.a_)(),l=e=>{const n=e.currentTarget,a=c.indexOf(n),s=o[a].value;s!==i&&(d(n),r(s))},u=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;n=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;n=c[a]??c[c.length-1];break}}n?.focus()};return(0,_.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},n),children:o.map((e=>{let{value:n,label:a,attributes:t}=e;return(0,_.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>{c.push(e)},onKeyDown:u,onClick:l,...t,className:(0,s.A)("tabs__item",g.tabItem,t?.className,{"tabs__item--active":i===n}),children:a??n},n)}))})}function v(e){let{lazy:n,children:a,selectedValue:t}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===t));return e?(0,i.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,_.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function b(e){const n=f(e);return(0,_.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,_.jsx)(j,{...n,...e}),(0,_.jsx)(v,{...n,...e})]})}function y(e){const n=(0,x.A)();return(0,_.jsx)(b,{...e,children:u(e.children)},String(n))}},79329:(e,n,a)=>{a.d(n,{A:()=>r});a(96540);var i=a(18215);const s={tabItem:"tabItem_Ymn6"};var t=a(74848);function r(e){let{children:n,hidden:a,className:r}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,r),hidden:a,children:n})}}}]);