"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[5508],{3294:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>h,default:()=>b,frontMatter:()=>d,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"additional-resources/api-overview/rate-limits","title":"Rate Limits","description":"Learn about our API rate limits","source":"@site/docs/additional-resources/api-overview/rate-limits.md","sourceDirName":"additional-resources/api-overview","slug":"/additional-resources/api-overview/rate-limits","permalink":"/additional-resources/api-overview/rate-limits","draft":false,"unlisted":false,"editUrl":"https://github.com/Clarifai/docs/blob/main/docs/additional-resources/api-overview/rate-limits.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"description":"Learn about our API rate limits","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"API Outputs","permalink":"/additional-resources/api-overview/api-outputs"},"next":{"title":"Status Codes","permalink":"/additional-resources/api-overview/status-codes"}}');var s=t(74848),a=t(28453),i=t(65537),o=t(79329),l=t(58069);const u='import requests\nimport time\n\n\ndef make_request(url, headers):\n    try:\n        response = requests.get(url, headers=headers)\n        response.raise_for_status()\n        return response.json()\n    except requests.exceptions.HTTPError as err:\n        error_response = err.response.json()\n        if (\n            "status" in error_response\n            and error_response["status"]["code"] == "CONN_THROTTLED"\n        ):\n            print("Rate limit exceeded. Waiting for 15 seconds before retrying...")\n            time.sleep(15)\n            return make_request(url, headers)  # Retry the request after waiting\n        else:\n            # Handle other types of errors\n            print("Error:", err)\n            return None\n\n\nurl = "https://api.clarifai.com/v2/models/types"\nheaders = {"Authorization": "Key YOUR_PAT_HERE"}\n\nresponse_data = make_request(url, headers)\n\nif response_data:\n    print(response_data)\n',c="const axios = require('axios');\nasync function makeRequest(url, headers) {\n    try {\n        const response = await axios.get(url, { headers });\n        return response.data;\n    } catch (error) {\n        if (error.response && error.response.data.status && error.response.data.status.code === 'CONN_THROTTLED') {\n            console.log(\"Rate limit exceeded. Waiting for 15 seconds before retrying...\");\n            await delay(15000); // Wait for 15 seconds before retrying\n            return makeRequest(url, headers); // Retry the request after waiting\n        } else {\n            // Handle other types of errors\n            console.error(\"Error:\", error);\n            return null;\n        }\n    }\n}\n// Helper function to delay execution\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst url = \"https://api.clarifai.com/v2/models/types\";\nconst headers = { 'Authorization': 'Key YOUR_PAT_HERE' };\nmakeRequest(url, headers)\n    .then(responseData => {\n        if (responseData) {\n            console.log(responseData);\n        }\n    });\n",d={description:"Learn about our API rate limits",sidebar_position:7},h="Rate Limits",p={},m=[{value:"Mitigating Rate Limits",id:"mitigating-rate-limits",level:2}];function f(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"rate-limits",children:"Rate Limits"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Learn about our API rate limits"})}),"\n",(0,s.jsx)("hr",{}),"\n",(0,s.jsx)(r.p,{children:"Our API has restrictions that limit the rate at which requests are made. These measures help us maintain the health, fairness, and security of our API."}),"\n",(0,s.jsx)(r.admonition,{type:"info",children:(0,s.jsxs)(r.p,{children:["Our default rate limit is ",(0,s.jsx)(r.strong,{children:"15 requests per second"})," for all users, regardless of the pricing plan. You need to contact us if you need a customized API rate limit."]})}),"\n",(0,s.jsx)(r.p,{children:"We control the number of requests that can be made to our API within a given timeframe."}),"\n",(0,s.jsx)(r.p,{children:"This helps to:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Maintain the stability and reliability of our API"})," \u2014 With rate limits, we ensure our service is not overwhelmed with excessive requests from a single entity, providing smooth and fair access for all our users."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Better handle increased demand on our infrastructure"})," \u2014 With rate limits, we can handle a sudden surge in API requests and distribute the increased load on our infrastructure more evenly."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Enhance the security of our API"})," \u2014 With rate limits, we can mitigate the risk of abuse, denial-of-service attacks, and other malicious activities."]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"mitigating-rate-limits",children:"Mitigating Rate Limits"}),"\n",(0,s.jsx)(r.p,{children:"You may bump into the API rate limit if you make requests exceeding your quota within the specified time frame. When the limit is reached, the API temporarily halts processing additional requests until a designated time interval has elapsed."}),"\n",(0,s.jsx)(r.p,{children:"The error response could look like this:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-text",children:'{\n  "status": {\n    "code": "CONN_THROTTLED",\n    "description": "Making too many requests",\n    "details": "exceeded limit of 15 requests per second",\n    "req_id": "..."\n  },\n  ...\n}\n'})}),"\n",(0,s.jsxs)(r.p,{children:["As you can see above, the response includes the ",(0,s.jsx)(r.code,{children:"CONN_THROTTLED"})," error, whose corresponding ",(0,s.jsx)(r.a,{href:"https://docs.clarifai.com/api-guide/advanced-topics/status-codes",children:"status code"})," is 11005."]}),"\n",(0,s.jsx)(r.p,{children:"It\u2019s a best practice to mitigate the rate limit errors in your code to ensure smooth access to the Clarifai API. For example, you can implement a back-off strategy, where you wait for 15 seconds before retrying the requests."}),"\n",(0,s.jsxs)(r.p,{children:["Here are HTTP-based code samples on how you could list Clarifai's ",(0,s.jsx)(r.a,{href:"https://docs.clarifai.com/api-guide/model/create-get-update-and-delete#list-model-types",children:"model types"})," and also handle rate limit errors."]}),"\n","\n","\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(o.A,{value:"python",label:"Python",children:(0,s.jsx)(l.A,{className:"language-python",children:u})}),(0,s.jsx)(o.A,{value:"nodejs",label:"NodeJS",children:(0,s.jsx)(l.A,{className:"language-javascript",children:c})})]})]})}function b(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}},65537:(e,r,t)=>{t.d(r,{A:()=>w});var n=t(96540),s=t(18215),a=t(65627),i=t(56347),o=t(50372),l=t(30604),u=t(11861),c=t(78749);function d(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:r,children:t}=e;return(0,n.useMemo)((()=>{const e=r??function(e){return d(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:s}}=e;return{value:r,label:t,attributes:n,default:s}}))}(t);return function(e){const r=(0,u.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function p(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function m(e){let{queryString:r=!1,groupId:t}=e;const s=(0,i.W6)(),a=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,l.aZ)(a),(0,n.useCallback)((e=>{if(!a)return;const r=new URLSearchParams(s.location.search);r.set(a,e),s.replace({...s.location,search:r.toString()})}),[a,s])]}function f(e){const{defaultValue:r,queryString:t=!1,groupId:s}=e,a=h(e),[i,l]=(0,n.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:a}))),[u,d]=m({queryString:t,groupId:s}),[f,b]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[s,a]=(0,c.Dv)(t);return[s,(0,n.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:s}),g=(()=>{const e=u??f;return p({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),b(e)}),[d,b,a]),tabValues:a}}var b=t(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function x(e){let{className:r,block:t,selectedValue:n,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.a_)(),c=e=>{const r=e.currentTarget,t=l.indexOf(r),s=o[t].value;s!==n&&(u(r),i(s))},d=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;r=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;r=l[t]??l[l.length-1];break}}r?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},r),children:o.map((e=>{let{value:r,label:t,attributes:a}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:n===r?0:-1,"aria-selected":n===r,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...a,className:(0,s.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":n===r}),children:t??r},r)}))})}function y(e){let{lazy:r,children:t,selectedValue:a}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=i.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==a})))})}function j(e){const r=f(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,v.jsx)(x,{...r,...e}),(0,v.jsx)(y,{...r,...e})]})}function w(e){const r=(0,b.A)();return(0,v.jsx)(j,{...e,children:d(e.children)},String(r))}},79329:(e,r,t)=>{t.d(r,{A:()=>i});t(96540);var n=t(18215);const s={tabItem:"tabItem_Ymn6"};var a=t(74848);function i(e){let{children:r,hidden:t,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,i),hidden:t,children:r})}}}]);