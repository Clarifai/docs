"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[689],{11470:(e,n,i)=>{i.d(n,{A:()=>v});var a=i(96540),t=i(18215),s=i(17559),l=i(23104),r=i(56347),c=i(205),o=i(57485),d=i(31682),h=i(70679);function u(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function x(e){const{values:n,children:i}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:i,default:a}})=>({value:e,label:n,attributes:i,default:a}))}(i);return function(e){const n=(0,d.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,i])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const i=(0,r.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(t),(0,a.useCallback)(e=>{if(!t)return;const n=new URLSearchParams(i.location.search);n.set(t,e),i.replace({...i.location,search:n.toString()})},[t,i])]}function f(e){const{defaultValue:n,queryString:i=!1,groupId:t}=e,s=x(e),[l,r]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=n.find(e=>e.default)??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s})),[o,d]=m({queryString:i,groupId:t}),[u,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[i,t]=(0,h.Dv)(n);return[i,(0,a.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),g=(()=>{const e=o??u;return p({value:e,tabValues:s})?e:null})();(0,c.A)(()=>{g&&r(g)},[g]);return{selectedValue:l,selectValue:(0,a.useCallback)(e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);r(e),d(e),f(e)},[d,f,s]),tabValues:s}}var g=i(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=i(74848);function A({className:e,block:n,selectedValue:i,selectValue:a,tabValues:s}){const r=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),o=e=>{const n=e.currentTarget,t=r.indexOf(n),l=s[t].value;l!==i&&(c(n),a(l))},d=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const i=r.indexOf(e.currentTarget)+1;n=r[i]??r[0];break}case"ArrowLeft":{const i=r.indexOf(e.currentTarget)-1;n=r[i]??r[r.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:a})=>(0,b.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:e=>{r.push(e)},onKeyDown:d,onClick:o,...a,className:(0,t.A)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":i===e}),children:n??e},e))})}function I({lazy:e,children:n,selectedValue:i}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===i);return e?(0,a.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i}))})}function y(e){const n=f(e);return(0,b.jsxs)("div",{className:(0,t.A)(s.G.tabs.container,"tabs-container",j.tabList),children:[(0,b.jsx)(A,{...n,...e}),(0,b.jsx)(I,{...n,...e})]})}function v(e){const n=(0,g.A)();return(0,b.jsx)(y,{...e,children:u(e.children)},String(n))}},16406:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"resources/api-overview/cli","title":"Clarifai CLI","description":"Learn how to use the Clarifai Command Line Interface (CLI)","source":"@site/docs/resources/api-overview/cli.md","sourceDirName":"resources/api-overview","slug":"/resources/api-overview/cli","permalink":"/resources/api-overview/cli","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"description":"Learn how to use the Clarifai Command Line Interface (CLI)","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Node.js SDK","permalink":"/resources/api-overview/nodejs-sdk"},"next":{"title":"gRPC API Clients","permalink":"/resources/api-overview/grpc-clients"}}');var t=i(74848),s=i(28453),l=i(11470),r=i(19365),c=i(88149);const o={description:"Learn how to use the Clarifai Command Line Interface (CLI)",sidebar_position:3},d="Clarifai CLI",h={},u=[{value:"Installation",id:"installation",level:2},{value:"Basics",id:"basics",level:2},{value:"Clarifai Login",id:"clarifai-login",level:2},{value:"Log in",id:"log-in",level:3},{value:"Log in With a User ID",id:"log-in-with-a-user-id",level:3},{value:"Log in With a Custom API URL",id:"log-in-with-a-custom-api-url",level:3},{value:"Clarifai Config",id:"clarifai-config",level:2},{value:"Create Context",id:"create-context",level:3},{value:"Display Current Context",id:"display-current-context",level:3},{value:"Delete Context",id:"delete-context",level:3},{value:"Edit Configuration File",id:"edit-configuration-file",level:3},{value:"Display Environment Variables",id:"display-environment-variables",level:3},{value:"Get All Contexts",id:"get-all-contexts",level:3},{value:"Switch Contexts",id:"switch-contexts",level:3},{value:"Display Current Configuration",id:"display-current-configuration",level:3},{value:"Clarifai Model Init",id:"clarifai-model-init",level:2},{value:"Basic Initialization",id:"basic-initialization",level:3},{value:"Initialize <code>mcp</code> Model Type",id:"initialize-mcp-model-type",level:3},{value:"Initialize <code>openai</code> Model Type",id:"initialize-openai-model-type",level:3},{value:"Initialize With GitHub Template",id:"initialize-with-github-template",level:3},{value:"Initialize With Toolkit",id:"initialize-with-toolkit",level:3}];function x(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"clarifai-cli",children:"Clarifai CLI"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Learn how to use the Clarifai Command Line Interface (CLI)"})}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsx)(n.p,{children:"Clarifai\u2019s Command Line Interface (CLI) is a powerful, user-friendly tool designed to simplify and enhance your experience with our AI platform."}),"\n",(0,t.jsx)(n.p,{children:"By offering a streamlined way to execute tasks directly from the terminal, the CLI eliminates the need for extensive coding or constant reliance on the web interface."}),"\n",(0,t.jsxs)(n.p,{children:["Bundled within our ",(0,t.jsx)(n.a,{href:"https://docs.clarifai.com/resources/api-overview/python-sdk",children:"Python SDK package"}),", the CLI empowers both technical and non-technical users to efficiently execute a wide range of tasks and boost productivity on the Clarifai platform."]}),"\n","\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["To begin, install the latest version of the ",(0,t.jsx)(n.code,{children:"clarifai"})," Python package."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"pip install --upgrade clarifai\n"})}),"\n",(0,t.jsx)(n.p,{children:"Once installed, you can confirm the version by running the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai --version\n"})}),"\n",(0,t.jsx)(n.h2,{id:"basics",children:"Basics"}),"\n",(0,t.jsx)(n.p,{children:"The CLI tool supports a broad range of use cases with intuitive commands and convenient aliases."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai [OPTIONS] COMMAND [ARGS]...\n\n  Clarifai CLI\n\nOptions:\n  --version      Show the version and exit.\n  --config TEXT\n  --help         Show this message and exit.\n\nCommands:\n  computecluster (cc)             Manage Compute Clusters: create, delete,\n                                  list\n  config                              Manage multiple configuration profiles\n                                      (contexts).\n\n                                      Authentication Precedence:\n\n                                        1. Environment variables (e.g.,\n                                        `CLARIFAI_PAT`) are used first if set.\n                                        2. The settings from the active\n                                        context are used if no environment\n                                        variables are provided.\n\n  deployment (dp)                 Manage Deployments: create, delete, list\n  login                           Login command to set PAT and other\n                                  configurations.\n  model                           Manage & Develop Models: init, download-\n                                  checkpoints, signatures, upload\n\n                                      Run & Test Models Locally: local-runner,\n                                      local-grpc, local-test\n\n                                      Model Inference: list, predict\n  nodepool (np)                   Manage Nodepools: create, delete, list\n  pipeline (pl)                   Manage pipelines: upload, init, list, etc\n  pipeline-step (pipelinestep, ps)\n                                  Manage pipeline steps: upload, test, list,\n                                  etc\n  run                             Execute a script with the current context's\n                                  environment\n  shell-completion                Shell completion script\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"--help"})," option is particularly useful to quickly understand the available functionalities and how to use them."]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai COMMAND --help"})})}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai login --help"})})}),"\n",(0,t.jsx)(n.p,{children:"Produces this output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai login [OPTIONS] [API_URL]\n\n  Login command to set PAT and other configurations.\n\nOptions:\n  --user_id TEXT  User ID\n  --help          Show this message and exit.\n"})}),"\n",(0,t.jsx)(n.h2,{id:"clarifai-login",children:"Clarifai Login"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai login [OPTIONS] [API_URL]"})})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"clarifai login"})," command is used to authenticate and configure your connection to the Clarifai platform. This involves setting up a ",(0,t.jsx)(n.a,{href:"https://docs.clarifai.com/control/authentication/pat",children:"Personal Access Token"})," (PAT) and other necessary configurations for making API requests."]}),"\n",(0,t.jsxs)(n.admonition,{title:"Authentication Precedence",type:"note",children:[(0,t.jsxs)(n.p,{children:["Authentication follows a defined order of precedence. If you set values (such as ",(0,t.jsx)(n.code,{children:"CLARIFAI_PAT"}),") as environment variables in your terminal, these take priority and are used first. If no relevant environment variables are found, the CLI falls back to the credentials and settings defined in the ",(0,t.jsx)(n.a,{href:"#clarifai-config",children:"active context"}),". ",(0,t.jsx)(n.strong,{children:"For security best practices, we recommend using environment variables instead of hardcoding credentials directly in your code."})]}),(0,t.jsx)(n.p,{children:"Here is an example of setting PAT as an environment variable:"}),(0,t.jsxs)(l.A,{groupId:"code",children:[(0,t.jsx)(r.A,{value:"bash",label:"Unix-Like Systems",children:(0,t.jsx)(c.A,{className:"language-bash",children:" export CLARIFAI_PAT=YOUR_PERSONAL_ACCESS_TOKEN_HERE "})}),(0,t.jsx)(r.A,{value:"bash2",label:"Windows",children:(0,t.jsx)(c.A,{className:"language-bash",children:" set CLARIFAI_PAT=YOUR_PERSONAL_ACCESS_TOKEN_HERE "})})]})]}),"\n",(0,t.jsx)(n.h3,{id:"log-in",children:"Log in"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai login"})})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"clarifai login"})," command will prompt you to enter your Clarifai PAT and user ID. The PAT input field is hidden for security purposes \u2014 simply paste the value and press Enter."]}),"\n",(0,t.jsx)(n.p,{children:"After providing the credentials, they will be validated automatically, and you'll be notified if any errors occur."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," To generate or copy your PAT, go to the ",(0,t.jsx)(n.strong,{children:"Security"})," section of your personal settings page. Your user ID is also available under the ",(0,t.jsx)(n.strong,{children:"Account"})," section on the same page."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"What is a Context?",type:"tip",children:(0,t.jsx)(n.p,{children:"A context refers to the active environment settings that determine how your commands interact with the Clarifai platform. Think of a context as a saved set of credentials (such as a PAT key or a specific user ID) you want to work with."})}),"\n",(0,t.jsxs)(n.p,{children:["You\u2019ll also be prompted to enter a context name \u2014 this can be a new name, an existing one, or simply ",(0,t.jsx)(n.code,{children:'"default"'}),". The credentials will be saved to the specified context, which becomes the active context used for interacting with the Clarifai platform."]}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai login\nTo authenticate, you'll need a Personal Access Token (PAT).\nYou can create one from your account settings: https://clarifai.com/settings/security\nEnter your Personal Access Token:\nEnter your Clarifai user ID: XXXX\nVerifying token...\n[INFO] 17:29:42.188183 Validating the Context Credentials... |  thread=5816\n[INFO] 17:29:43.832686 \u2705 Context is valid |  thread=5816\nLet's save these credentials to a new context.\nYou can have multiple contexts to easily switch between accounts or projects.\nEnter a name for this context [default]: my_new_context\n\u2705 Success! You are now logged in.\nCredentials saved to the 'my_new_context' context.\n\ud83d\udca1 To switch contexts later, use `clarifai config use-context <name>`.\n[INFO] 17:30:29.907399 Login successful for user 'XXXX' in context 'my_new_context' |  thread=5816\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"log-in-with-a-user-id",children:"Log in With a User ID"}),"\n",(0,t.jsx)(n.p,{children:"You can log in using your user ID."}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai login --user_id your_user_id_here"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai login --user_id XXXX\nTo authenticate, you'll need a Personal Access Token (PAT).\nYou can create one from your account settings: https://clarifai.com/settings/security\nEnter your Personal Access Token:\nVerifying token...\n[INFO] 18:08:00.158062 Validating the Context Credentials... |  thread=11532\n[INFO] 18:08:06.153526 \u2705 Context is valid |  thread=11532\nLet's save these credentials to a new context.\nYou can have multiple contexts to easily switch between accounts or projects.\nEnter a name for this context [default]: my_new_context\n\u2705 Success! You are now logged in.\nCredentials saved to the 'my_new_context' context.\n\ud83d\udca1 To switch contexts later, use `clarifai config use-context <name>`.\n[INFO] 18:08:21.163966 Login successful for user 'XXXX' in context 'my_new_context' |  thread=11532\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"log-in-with-a-custom-api-url",children:"Log in With a Custom API URL"}),"\n",(0,t.jsx)(n.p,{children:"You can optionally specify a custom API URL if you are connecting to a Clarifai instance other than the default."}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai login your_custom_url_here"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai login https://api-dev.clarifai.com/\nTo authenticate, you'll need a Personal Access Token (PAT).\nYou can create one from your account settings: https://clarifai.com/settings/security\nEnter your Personal Access Token: \nEnter your Clarifai user ID: XXXX\nVerifying token...\n[INFO] 17:04:30.321616 Validating the Context Credentials... |  thread=23096\n"})})]}),"\n",(0,t.jsx)(n.h2,{id:"clarifai-config",children:"Clarifai Config"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"clarifai config"})," command lets you create and manage various aspects of your Clarifai configuration profiles \u2014 known as ",(0,t.jsx)(n.em,{children:"contexts"})," \u2014 which represent different interaction environments or setups, as explained earlier."]}),"\n",(0,t.jsx)(n.p,{children:"Each context can store specific authentication details (such as PATs), API URLs, and other configuration settings relevant to a particular Clarifai project or environment."}),"\n",(0,t.jsx)(n.p,{children:"This command includes subcommands for creating, deleting, and switching between named Clarifai contexts, among other actions."}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config [OPTIONS] COMMAND [ARGS]...\n\n  Manage multiple configuration profiles (contexts).\n\n  Authentication Precedence:\n\n    1. Environment variables (e.g., `CLARIFAI_PAT`) are used first if set.\n    2. The settings from the active context are used if no environment\n    variables are provided.\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  create-context (create)         Create a new context.\n  current-context (current)       Show the current context's details.\n  delete-context (delete)         Delete a context.\n  edit (e)                        Open the configuration file for editing.\n  env (get-env)                   Print env vars for the active context.\n  get-contexts (list-contexts, ls)\n                                  List all available contexts.\n  use-context (use)               Set the current context.\n  view (show)                     Display the current configuration.\n"})})})}),"\n",(0,t.jsx)(n.h3,{id:"create-context",children:"Create Context"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"create-context"})," (or ",(0,t.jsx)(n.code,{children:"create"}),") subcommand creates a new Clarifai context. Note that you'll be prompted to configure the context by providing the necessary details for that context \u2014 such as user ID, API URL, and PAT."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["If you'd like to use the default values (such as the ",(0,t.jsx)(n.code,{children:"base-url"}),"), simply press Enter."]})}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsxs)(c.A,{className:"language-bash",children:[(0,t.jsx)(n.p,{children:"Usage: clarifai config create-context [OPTIONS] NAME"}),(0,t.jsx)(n.p,{children:"Create a new context."}),(0,t.jsx)(n.p,{children:"Options:\n--user-id TEXT   User ID\n--base-url TEXT  Base URL\n--pat TEXT       Personal access token"})]})})}),"\n",(0,t.jsx)(n.p,{children:"Or:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsxs)(c.A,{className:"language-bash",children:[(0,t.jsx)(n.p,{children:"Usage: clarifai config create [OPTIONS] NAME"}),(0,t.jsx)(n.p,{children:"Create a new context."}),(0,t.jsx)(n.p,{children:"Options:\n--user-id TEXT   User ID\n--base-url TEXT  Base URL\n--pat TEXT       Personal access token"})]})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can create a new context by providing a unique name for it:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config create-context your_context_name_here"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config create-context my_new_context\nuser id: XXXX\nbase url (default: https://api.clarifai.com):\npersonal access token value (default: \"ENVVAR\" to get our of env var rather than config): XXXX\n[INFO] 20:05:52.602933 Validating the Context Credentials... |  thread=21200\n[INFO] 20:05:59.957903 \u2705 Context is valid |  thread=21200\n[INFO] 20:05:59.970741 Context 'my_new_context' created successfully |  thread=21200\n"})})]}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can create a new context with all values specified inline:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config create-context your_context_name_here --user-id your_user_id_here --pat your_pat_here --base-url https://api.clarifai.com\n"})})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"[INFO] 21:00:58.015800 Validating the Context Credentials... |  thread=20976\n[INFO] 21:00:59.414716 \u2705 Context is valid |  thread=20976\n[INFO] 21:00:59.424841 Context 'my_new_context' created successfully |  thread=20976\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"display-current-context",children:"Display Current Context"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"current-context"})," (or ",(0,t.jsx)(n.code,{children:"current"}),") subcommand displays the details of the currently active Clarifai context. It helps you verify which context is in use and view its associated configuration, such as the user ID, PAT, and base URL."]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config current-context [OPTIONS]\n\n  Show the current context's details.\n\nOptions:\n  -o, --output-format [name|json|yaml]\n"})})})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," The ",(0,t.jsx)(n.code,{children:"-o"})," flag is the short form of the ",(0,t.jsx)(n.code,{children:"--output-format"})," flag."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Or:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config current [OPTIONS]\n\n  Show the current context's details.\n\nOptions:\n  -o, --output-format [name|json|yaml]\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can show the currently active context:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config current-context"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config current-context\nmy_new_context\n"})})]}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can show only the name of the current context:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config current-context --output-format name"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config current-context --output-format name\nmy_new_context\n"})})]}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can show context details in JSON format:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config current-context -o json"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'clarifai config current-context -o json\n{"CLARIFAI_API_BASE": "https://api.clarifai.com", "CLARIFAI_PAT": "XXXX", "CLARIFAI_USER_ID": "XXXX"}\n'})})]}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can show context details in YAML format:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config current-context -o yaml"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config current-context -o yaml\nCLARIFAI_API_BASE: https://api.clarifai.com\nCLARIFAI_PAT: XXXX\nCLARIFAI_USER_ID: XXXX\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"delete-context",children:"Delete Context"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"delete-context"})," or (",(0,t.jsx)(n.code,{children:"delete"}),") subcommand deletes an existing Clarifai context."]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config delete-context [OPTIONS] NAME\n\n  Delete a context.\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Or:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config delete [OPTIONS] NAME\n\n  Delete a context.\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can delete a context by specifying its name:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config delete-context your_context_name_here"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config delete-context my_new_context\nmy_new_context deleted\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"edit-configuration-file",children:"Edit Configuration File"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"edit"})," (alias ",(0,t.jsx)(n.code,{children:"e"}),") subcommand opens the CLI configuration file for the current context in your default text editor. This allows you to manually add, modify, or remove contexts and their settings \u2014 such as PATs, application IDs, or base URLs."]}),"\n",(0,t.jsx)(n.p,{children:"This is a useful way to set up or manage multiple contexts directly."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Remember to save the file after making changes."]}),"\n"]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config edit [OPTIONS]\n\n  Open the configuration file for editing.\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Or:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config e [OPTIONS]\n\n  Open the configuration file for editing.\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can open the configuration file of your current context for editing:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config edit"})})}),"\n",(0,t.jsx)(n.h3,{id:"display-environment-variables",children:"Display Environment Variables"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"env"})," (or ",(0,t.jsx)(n.code,{children:"get-env"}),") subcommand prints the environment variables that correspond to your active Clarifai context. It\u2019s useful if you want to export these variables for use in other tools, scripts, or terminals."]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config env [OPTIONS]\n\n  Print env vars for the active context.\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Or:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config get-env [OPTIONS]\n\n  Print env vars for the active context.\n"})})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can display the environment variables of your current context:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config env"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'clarifai config env\nexport CLARIFAI_API_BASE="https://api.clarifai.com"\nexport CLARIFAI_PAT="XXXX"\nexport CLARIFAI_USER_ID="XXXX"\n'})})]}),"\n",(0,t.jsx)(n.h3,{id:"get-all-contexts",children:"Get All Contexts"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"get-contexts"})," (or ",(0,t.jsx)(n.code,{children:"list-contexts"}),", or ",(0,t.jsx)(n.code,{children:"ls"}),") subcommand lists all Clarifai contexts defined in your configuration file, displayed in a table format. The currently active context is marked with an asterisk (",(0,t.jsx)(n.code,{children:"*"}),")."]}),"\n",(0,t.jsx)(n.p,{children:"This provides an overview of the different Clarifai setups you can switch between."}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config get-contexts [OPTIONS]\n\n  List all available contexts.\n\nOptions:\n  -o, --output-format [wide|name|json|yaml]\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Or:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config list-contexts [OPTIONS]\n\n  List all available contexts.\n\nOptions:\n  -o, --output-format [wide|name|json|yaml]\n"})})})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," The ",(0,t.jsx)(n.code,{children:"-o"})," flag is the short form of the ",(0,t.jsx)(n.code,{children:"--output-format"})," flag."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\xa0"}),"\n",(0,t.jsxs)(n.p,{children:["Here\u2019s how you can list all contexts in a table. By default, the ",(0,t.jsx)(n.code,{children:"wide"})," output format is used, which displays a detailed table with information for each context."]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config get-contexts"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config get-contexts\n    NAME                    USER_ID    API_BASE                  PAT\n    default                 XXXX      https://api.clarifai.com  c1eaa****\n*   my_new_context          XXXX      https://api.clarifai.com  c1eaa****\n    test_context            XXXX      https://api.clarifai.com  c1eaa****\n"})})]}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can list only the names of the contexts:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config get-contexts -o name"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config get-contexts -o name\ndefault\nmy_new_context\ntest_context\n"})})]}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can output context data as JSON:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config get-contexts --output-format json"})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can output context data as YAML:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config get-contexts -o yaml"})})}),"\n",(0,t.jsx)(n.h3,{id:"switch-contexts",children:"Switch Contexts"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"use-context"})," (or ",(0,t.jsx)(n.code,{children:"use"}),") subcommand sets a different Clarifai context as the active one. This is useful when you need to switch between environments or credentials without manually updating your configuration each time."]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config use-context [OPTIONS] NAME\n\n  Set the current context.\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Or:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config use [OPTIONS] NAME\n\n  Set the current context.\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here\u2019s how you can switch to a different context by specifying its name:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config use-context your_context_name_here"})})}),"\n",(0,t.jsx)(n.p,{children:"The Clarifai CLI will now use the new specified context for all subsequent operations."}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config use-context test_context\nSet test_context as the current context\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"display-current-configuration",children:"Display Current Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"view"})," (or ",(0,t.jsx)(n.code,{children:"show"}),") subcommand displays the full configuration file, including all defined contexts and their associated details. The currently active context is also indicated in the output."]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config view [OPTIONS]\n\n  Display the current configuration.\n\nOptions:\n  -o, --output-format [json|yaml]\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Or:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai config show [OPTIONS]\n\n  Display the current configuration.\n\nOptions:\n  -o, --output-format [json|yaml]\n"})})})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," The ",(0,t.jsx)(n.code,{children:"-o"})," flag is the short form of the ",(0,t.jsx)(n.code,{children:"--output-format"})," flag."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\xa0"}),"\n",(0,t.jsx)(n.p,{children:"Here\u2019s how to display the current configuration. By default, the output is shown in YAML format."}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config show"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"clarifai config show\ncontexts:\n  default:\n    CLARIFAI_USER_ID: alfrick\n  my_new_context:\n    CLARIFAI_API_BASE: https://api.clarifai.com\n    CLARIFAI_PAT: XXXX\n    CLARIFAI_USER_ID: XXXX\n  test_context:\n    CLARIFAI_API_BASE: https://api.clarifai.com\n    CLARIFAI_PAT: XXXX\n    CLARIFAI_USER_ID: XXXX\ncurrent-context: test_context\n"})})]}),"\n",(0,t.jsx)(n.p,{children:"Here is how you can display the current configuration in JSON format:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai config show --output-format json"})})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'clarifai config show --output-format json\n{\n  "current-context": "test_context",\n  "contexts": {\n    "default": {\n      "CLARIFAI_USER_ID": "alfrick"\n    },\n    "my_new_context": {\n      "CLARIFAI_API_BASE": "https://api.clarifai.com",\n      "CLARIFAI_PAT": "XXXX",\n      "CLARIFAI_USER_ID": "XXXX"\n    },\n    "test_context": {\n      "CLARIFAI_API_BASE": "https://api.clarifai.com",\n      "CLARIFAI_PAT": "XXXX",\n      "CLARIFAI_USER_ID": "XXXX"\n    }\n  }\n}\n'})})]}),"\n",(0,t.jsx)(n.h2,{id:"clarifai-model-init",children:"Clarifai Model Init"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"clarifai model init"})," command initializes a new Clarifai model directory structure. This command helps you set up the necessary files and folders to begin building a ",(0,t.jsx)(n.a,{href:"https://docs.clarifai.com/compute/models/upload/",children:"custom model"})," suitable for the Clarifai platform."]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:" clarifai model init [OPTIONS] [MODEL_PATH] "})})}),"\n",(0,t.jsxs)(n.p,{children:["The command creates a standardized directory structure in the specified ",(0,t.jsx)(n.code,{children:"MODEL_PATH"}),". If ",(0,t.jsx)(n.code,{children:"MODEL_PATH"})," is not provided, the command will use the current directory by default."]}),"\n",(0,t.jsx)(n.p,{children:"The generated structure includes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\u251c\u2500\u2500 1/\n\u2502   \u2514\u2500\u2500 model.py\n\u251c\u2500\u2500 requirements.txt\n\u2514\u2500\u2500 config.yaml\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"1/"})})," \u2014 A directory that holds the model file (",(0,t.jsx)(n.em,{children:"Note that the folder is named as 1"}),")","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"model.py"})})," \u2014 This file will contain the Python code for your Clarifai model. You will define your model's logic and how it interacts with the Clarifai platform within this file."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"requirements.txt"})})," \u2014 This file is used to list any Python dependencies your model requires. When your model is deployed, Clarifai will install these dependencies."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"config.yaml"})})," \u2014 This YAML file is used for model configuration, allowing you to define settings and parameters for your model."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"basic-initialization",children:"Basic Initialization"}),"\n",(0,t.jsxs)(n.p,{children:["If no option value is provided, the command defaults to initializing the standard ",(0,t.jsx)(n.code,{children:"ModelClass"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Here is how to initialize a model in the current directory with the default model class:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai model init"})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how to initialize a model in a new directory:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai model init my_custom_model"})})}),"\n",(0,t.jsxs)(n.p,{children:["This will create a directory ",(0,t.jsx)(n.code,{children:"my_custom_model"})," with the standard model structure inside it."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"--model-type-id"})," option specifies the type of model class to initialize. This ensures that the generated files are tailored to the chosen model type."]})}),"\n",(0,t.jsxs)(n.h3,{id:"initialize-mcp-model-type",children:["Initialize ",(0,t.jsx)(n.code,{children:"mcp"})," Model Type"]}),"\n",(0,t.jsxs)(n.p,{children:["Providing the ",(0,t.jsx)(n.code,{children:"mcp"})," option initializes the model structure using ",(0,t.jsx)(n.code,{children:"MCPModelClass"}),", which is used for models that will run on Clarifai using the ",(0,t.jsx)(n.a,{href:"https://docs.clarifai.com/compute/agents/mcp",children:"Model Context Protocol (MCP)"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Here is how to initialize an MCP model in the current directory:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai model init --model-type-id mcp"})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how to initialize an MCP model in a specific path:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai model init /home/username/Projects/MyMCPModel --model-type-id mcp"})})}),"\n",(0,t.jsxs)(n.h3,{id:"initialize-openai-model-type",children:["Initialize ",(0,t.jsx)(n.code,{children:"openai"})," Model Type"]}),"\n",(0,t.jsxs)(n.p,{children:["Providing the ",(0,t.jsx)(n.code,{children:"openai"})," option initializes the model structure using ",(0,t.jsx)(n.code,{children:"OpenAIModelClass"}),", intended for models that integrate with ",(0,t.jsx)(n.a,{href:"https://docs.clarifai.com/compute/inference/open-ai",children:"OpenAI's APIs"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Here is how to initialize an OpenAI-compatible model in the current directory:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai model init --model-type-id openai"})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how to initialize an OpenAI-compatible model in a specific path:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai model init /home/username/Projects/MyOpenAIModel --model-type-id openai"})})}),"\n",(0,t.jsx)(n.h3,{id:"initialize-with-github-template",children:"Initialize With GitHub Template"}),"\n",(0,t.jsxs)(n.p,{children:["You can initialize your model using a custom template from a GitHub repository using the ",(0,t.jsx)(n.code,{children:"--github-url"})," option and providing the full repository URL."]}),"\n",(0,t.jsx)(n.p,{children:"Here is how to clone a public GitHub repository in the current directory:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"clarifai model init --github-url https://github.com/Clarifai/runners-examples/tree/main/local-runners/ollama-model-upload\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how to clone a specific branch of a GitHub repository by including the branch reference directly in the URL:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"clarifai model init --github-url https://github.com/Clarifai/runners-examples/tree/vllm-tool-calling\n"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is how to clone a private GitHub repository using a GitHub Personal Access Token:"}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"clarifai model init --github-url https://github.com/your-username/my-private-model --github-pat YOUR_GITHUB_PAT_TOKEN\n"})})})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Replace ",(0,t.jsx)(n.code,{children:"https://github.com/your-username/my-private-model"})," and ",(0,t.jsx)(n.code,{children:"YOUR_GITHUB_PAT_TOKEN"})," with your actual values."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"initialize-with-toolkit",children:"Initialize With Toolkit"}),"\n",(0,t.jsxs)(n.p,{children:["You can initialize a new Clarifai model directory structure from a toolkit using the ",(0,t.jsx)(n.code,{children:"--toolkit"})," option. Toolkits allow you to run large language models (LLMs) and other generative AI models locally on your own machine."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, here is how you can initialize a default model using the ",(0,t.jsx)(n.a,{href:"https://ollama.com/search",children:"Ollama toolkit"})," in the current directory:"]}),"\n",(0,t.jsx)(l.A,{groupId:"code",children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:"clarifai model init --toolkit ollama"})})}),"\n",(0,t.jsxs)(n.p,{children:["You can find more details on running Ollama models with Clarifai Local Runners ",(0,t.jsx)(n.a,{href:"https://docs.clarifai.com/compute/local-runners/ollama",children:"here"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},19365:(e,n,i)=>{i.d(n,{A:()=>l});i(96540);var a=i(18215);const t={tabItem:"tabItem_Ymn6"};var s=i(74848);function l({children:e,hidden:n,className:i}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(t.tabItem,i),hidden:n,children:e})}}}]);