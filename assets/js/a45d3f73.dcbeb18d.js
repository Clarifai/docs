"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[8894],{22211:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>h,default:()=>x,frontMatter:()=>u,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"compute/local-runners","title":"Local Runners","description":"Run models locally for development, debugging, or compute tasks","source":"@site/docs/compute/local-runners.md","sourceDirName":"compute","slug":"/compute/local-runners","permalink":"/compute/local-runners","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"description":"Run models locally for development, debugging, or compute tasks","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Input and Output Data Types","permalink":"/compute/upload/data-types"},"next":{"title":"Agents","permalink":"/compute/agents/"}}');var o=t(74848),l=t(28453),a=t(65537),i=t(79329),s=t(58069);const c='clarifai login\ncontext name (default: "default"):\nuser id: alfrick\npersonal access token value (default: "ENVVAR" to get our of env var rather than config): c02f72c***************\n\nclarifai model local-runner \n[INFO] 14:00:01.177806 Checking setup for local development runner... |  thread=3524\n[INFO] 14:00:01.179203 Current context: default |  thread=3524\n[INFO] 14:00:01.189128 Current user_id: alfrick |  thread=3524\n[INFO] 14:00:01.189128 Current compute_cluster_id: local-dev-compute-cluster |  thread=3524\n[INFO] 14:00:02.394761 Failed to get compute cluster with ID local-dev-compute-cluster: code: CONN_DOES_NOT_EXIST\ndescription: "Resource does not exist"\ndetails: "ComputeCluster with ID \\\'local-dev-compute-cluster\\\' not found. Check your request fields."\nreq_id: "sdk-python-11.4.1-c8a4b5bab7a84ca7a91cd10fbc620c0f"\n |  thread=3524\nCompute cluster not found. Do you want to create a new compute cluster alfrick/local-dev-compute-cluster? (y/n): y\n[INFO] 14:00:20.755481\nCompute Cluster created\ncode: SUCCESS\ndescription: "Ok"\nreq_id: "sdk-python-11.4.1-31b3b07f08f04cbb81a50edfba30454f"\n |  thread=3524\n[INFO] 14:00:20.768179 Current nodepool_id: local-dev-nodepool |  thread=3524\n[INFO] 14:00:21.948659 Failed to get nodepool with ID local-dev-nodepool: code: CONN_DOES_NOT_EXIST\ndescription: "Resource does not exist"\ndetails: "Nodepool not found. Check your request fields."\nreq_id: "sdk-python-11.4.1-2e792b00b7d64521942e09f990db7e84"\n |  thread=3524\nNodepool not found. Do you want to create a new nodepool alfrick/local-dev-compute-cluster/local-dev-nodepool? (y/n): y\n[INFO] 14:00:25.698797\nNodepool created\ncode: SUCCESS\ndescription: "Ok"\nreq_id: "sdk-python-11.4.1-65d15f07e7534d44aa79a0d1a8607350"\n |  thread=3524\n[INFO] 14:00:25.720799 Current app_id: local-dev-runner-app |  thread=3524\n[INFO] 14:00:26.010459 Failed to get app with ID local-dev-runner-app: code: CONN_DOES_NOT_EXIST\ndescription: "Resource does not exist"\ndetails: "app identified by path /users/alfrick/apps/local-dev-runner-app not found"\nreq_id: "sdk-python-11.4.1-b3c6fcd7b4ad4c2e91f742dc31705a5b"\n |  thread=3524\nApp not found. Do you want to create a new app alfrick/local-dev-runner-app? (y/n): y\n[INFO] 14:00:31.354436\nApp created\ncode: SUCCESS\ndescription: "Ok"\nreq_id: "sdk-python-11.4.1-425accc65e1b451f9f6909d9dac25ecb"\n |  thread=3524\n[INFO] 14:00:31.363481 Current model_id: local-dev-model |  thread=3524\n[INFO] 14:00:33.396312 Failed to get model with ID local-dev-model: code: MODEL_DOES_NOT_EXIST\ndescription: "Model does not exist"\ndetails: "Model \\\'local-dev-model\\\' does not exist."\nreq_id: "sdk-python-11.4.1-024501ac37044ed4a4ed5a397f860cf8"\n |  thread=3524\nModel not found. Do you want to create a new model alfrick/local-dev-runner-app/models/local-dev-model? (y/n): y\n[INFO] 14:00:43.972640\nModel created\ncode: SUCCESS\ndescription: "Ok"\nreq_id: "sdk-python-11.4.1-052d3566144440bc83d3e5b66826a396"\n |  thread=3524\n[INFO] 14:00:45.317992 No model versions found. Creating a new version for local dev runner. |  thread=3524\n[INFO] 14:00:45.695709\nModel Version created\ncode: SUCCESS\ndescription: "Ok"\nreq_id: "sdk-python-11.4.1-cc9130981bea437895364a1a0debb079"\n |  thread=3524\n[INFO] 14:00:45.698444 Created model version 5aaae29b6551422ea9f78c84e5f19205 |  thread=3524\n[INFO] 14:00:45.698444 Current model version 5aaae29b6551422ea9f78c84e5f19205 |  thread=3524\n[INFO] 14:00:45.698444 Create the local dev runner tying this\n  alfrick/local-dev-runner-app/models/local-dev-model model (version: 5aaae29b6551422ea9f78c84e5f19205) to the\n  alfrick/local-dev-compute-cluster/local-dev-nodepool nodepool. |  thread=3524\n[INFO] 14:00:46.922695\nRunner created\ncode: SUCCESS\ndescription: "Ok"\nreq_id: "sdk-python-11.4.1-c1176211bd5e4cceadb35040f8d8d2a7"\n with id: 9dffc801b4904095a987b5c2b8508edf |  thread=3524\n[INFO] 14:00:46.936701 Current runner_id: 9dffc801b4904095a987b5c2b8508edf |  thread=3524\n[INFO] 14:00:47.239289 Current deployment_id: local-dev-deployment |  thread=3524\n[INFO] 14:00:47.241289 Current model section of config.yaml: {\'id\': \'my-uploaded-model\', \'user_id\': \'alfrick\', \'app_id\': \'docs-demos\', \'model_type_id\': \'text-to-text\'} |  thread=3524\nDo you want to backup config.yaml to config.yaml.bk then update the config.yaml with the new model information? (y/n): y\n[INFO] 14:00:51.122777\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n# About to start up the local dev runner in this terminal...\n# Here is a code snippet to call this model once it start from another terminal:\n |  thread=3524\n[INFO] 14:00:51.123778\n# Clarifai Model Client Script\n# Example usage:\nimport os\n\nfrom clarifai.client import Model\nfrom clarifai.runners.utils import data_types\n\nmodel = Model.from_current_context()\n\n# Example model prediction from different model methods:\n\nresponse = model.predict(text1=\'""\')\nprint(response)\n\nresponse = model.generate(text1=\'""\')\nfor res in response:\n    print(res)\n\n |  thread=3524\n[INFO] 14:00:51.123778 Now starting the local dev runner... |  thread=3524\n',d="# Clarifai Model Client Script\n# Example usage:\nimport os\n\nfrom clarifai.client import Model\nfrom clarifai.runners.utils import data_types\n\nmodel = Model.from_current_context()\n\n# Example model prediction from different model methods:\n\nresponse = model.predict(text1='\"\"')\nprint(response)\n\nresponse = model.generate(text1='\"\"')\nfor res in response:\n    print(res)",u={description:"Run models locally for development, debugging, or compute tasks",sidebar_position:5},h="Local Runners",p={},m=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Sign Up or Log In",id:"sign-up-or-log-in",level:3},{value:"Install Clarifai CLI",id:"install-clarifai-cli",level:3},{value:"Quick Start",id:"quick-start",level:2},{value:"Log in to Clarifai",id:"log-in-to-clarifai",level:3},{value:"Set up a Model",id:"set-up-a-model",level:3},{value:"Start Your Local Runner",id:"start-your-local-runner",level:3},{value:"Use Cases for Local Runners",id:"use-cases-for-local-runners",level:2},{value:"Step 1: Build a Model",id:"step-1-build-a-model",level:2},{value:"Step 2: Create a Context (Optional)",id:"step-2-create-a-context-optional",level:2},{value:"Step 3: Run Your Model",id:"step-3-run-your-model",level:2},{value:"Log in to Clarifai",id:"log-in-to-clarifai-1",level:3},{value:"Start Your Local Runner",id:"start-your-local-runner-1",level:3},{value:"Step 4: Test with Snippet",id:"step-4-test-with-snippet",level:2},{value:"Additional Examples",id:"additional-examples",level:2}];function f(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"local-runners",children:"Local Runners"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Run models locally for development, debugging, or compute tasks"})}),"\n",(0,o.jsx)("hr",{}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://www.clarifai.com/products/local-runners",children:"Local Runners"})," are a powerful feature that let you securely expose your locally running models or servers via a public URL, allowing you to quickly develop, test, and share any models running on your own hardware."]}),"\n",(0,o.jsx)(n.p,{children:"Instead of running solely in the cloud, you can run your models anywhere that supports Python and has an internet connection \u2014 whether it's your workstation or on-premise server."}),"\n",(0,o.jsx)(n.p,{children:"With Local Runners, you can connect your own models to Clarifai's compute plane. This seamless integration enables you to leverage the Clarifai cloud API, workflows, and other platform capabilities with your custom models."}),"\n",(0,o.jsx)(n.p,{children:"Your model can securely receive and process requests from anywhere, just as it would in a production cloud deployment."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," A runner is the actual running instance of your model. It is a unique process that pulls tasks (such as prediction requests) from a queue and executes them using the model\u2019s logic."]}),"\n"]}),"\n","\n","\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:" ",src:t(67399).A+"",width:"1448",height:"903"})}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(n.h3,{id:"sign-up-or-log-in",children:"Sign Up or Log In"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://clarifai.com/login",children:"Log in to"})," your existing Clarifai account or ",(0,o.jsx)(n.a,{href:"https://clarifai.com/signup",children:"sign up"})," for a new one. Next, retrieve the following credentials required for setup:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"User ID"})," \u2013 Go to your personal settings page and locate your user ID under the ",(0,o.jsx)(n.strong,{children:"Account"})," section."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"PAT"})," \u2013 From the same personal settings page, go to the ",(0,o.jsx)(n.strong,{children:"Security"})," section to generate or copy your ",(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/control/authentication/pat",children:"Personal Access Token (PAT)"}),". This token is used to authenticate your connection with the Clarifai platform."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"install-clarifai-cli",children:"Install Clarifai CLI"}),"\n",(0,o.jsxs)(n.p,{children:["Install the latest version of the ",(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/sdk/cli",children:"Clarifai CLI"})," (version ",(0,o.jsx)(n.code,{children:"11.6.3"})," or higher) tool. It includes built-in support for Local Runners."]}),"\n",(0,o.jsx)(a.A,{groupId:"code",children:(0,o.jsx)(i.A,{value:"bash",label:"Bash",children:(0,o.jsx)(s.A,{className:"language-bash",children:"pip install --upgrade clarifai"})})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," You'll need ",(0,o.jsx)(n.strong,{children:"Python 3.10 or higher"})," installed to successfully run the Local Runners."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsx)(n.p,{children:"Once you've completed the prerequisites above, run the following commands and follow the prompts in your terminal to quickly get started with Local Runners."}),"\n",(0,o.jsx)(n.h3,{id:"log-in-to-clarifai",children:"Log in to Clarifai"}),"\n",(0,o.jsxs)(n.p,{children:["Connect your environment to the Clarifai platform and ",(0,o.jsx)(n.a,{href:"#step-2-create-a-context-optional",children:"create a context"})," profile."]}),"\n",(0,o.jsx)(a.A,{groupId:"code",children:(0,o.jsx)(i.A,{value:"bash",label:"CLI",children:(0,o.jsx)(s.A,{className:"language-bash",children:"clarifai login"})})}),"\n",(0,o.jsx)(n.h3,{id:"set-up-a-model",children:"Set up a Model"}),"\n",(0,o.jsxs)(n.p,{children:["Generate a sample toy ",(0,o.jsx)(n.a,{href:"#step-1-build-a-model",children:"model"})," with the necessary files."]}),"\n",(0,o.jsx)(a.A,{groupId:"code",children:(0,o.jsx)(i.A,{value:"bash",label:"CLI",children:(0,o.jsx)(s.A,{className:"language-bash",children:"clarifai model init"})})}),"\n",(0,o.jsx)(n.h3,{id:"start-your-local-runner",children:"Start Your Local Runner"}),"\n",(0,o.jsxs)(n.p,{children:["Next, you'll connect your model to a public URL using Local Runners. The CLI will guide you through a series of confirmations for key objects on the Clarifai platform, such as compute clusters, nodepools, and deployments \u2014 which are described ",(0,o.jsx)(n.a,{href:"#table",children:"below"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Just review each prompt and confirm to proceed."}),"\n",(0,o.jsx)(a.A,{groupId:"code",children:(0,o.jsx)(i.A,{value:"bash",label:"CLI",children:(0,o.jsx)(s.A,{className:"language-bash",children:"clarifai model local-runner"})})}),"\n",(0,o.jsxs)(n.p,{children:["Once your runner launches successfully, your model will be running and accessible via a public URL. You can then open a new terminal, copy the sample code provided in the output, and ",(0,o.jsx)(n.a,{href:"#step-4-test-with-snippet",children:"test your model"}),"!"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"use-cases-for-local-runners",children:"Use Cases for Local Runners"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Streamlined model development"})," \u2014 Local Runners make it easy to build and test new models directly within your local environment. You can spin up a runner on your machine, route API calls through our public cloud endpoint, and watch requests hit your model in real time. This allows you to debug, set breakpoints, return results, and validate outputs."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Leverage your own compute resources"})," \u2014 If you have powerful hardware, you can take advantage of that local compute without relying on Clarifai's ",(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/compute/deployments/clusters-nodepools/#step-3-set-node-autoscaling-range",children:"autoscaling"})," infrastructure. Your model remains accessible through our API with full authentication, even though it runs locally."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Locally connect agents"})," \u2014 Because Local Runners execute on your chosen hardware, they can interact with local file systems, make OS-level calls, or access private data stores. With our ",(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/compute/agents/mcp",children:"MCP (Model Context Protocol)"})," model type, you can give your cloud-hosted agents or any MCP-enabled clients authenticated access to your locally controlled information, regardless of their deployment location."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Run models anywhere"})," \u2014 Whether on a local development machine, an on-premises server, or a private cloud cluster, Local Runners seamlessly connect your models to our platform. This enables you to keep sensitive data and custom-built models securely within your own environment."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"step-1-build-a-model",children:"Step 1: Build a Model"}),"\n",(0,o.jsx)(n.p,{children:"Start by building the model you want to run using Local Runners."}),"\n",(0,o.jsx)(n.p,{children:"You can either create a custom model from scratch or leverage pre-trained models from external sources like Hugging Face."}),"\n",(0,o.jsxs)(n.p,{children:["If you're building your own model, follow our comprehensive ",(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/compute/models/model-upload/",children:"step-by-step"})," guide to get started."]}),"\n",(0,o.jsxs)(n.p,{children:["You can also explore our ",(0,o.jsx)(n.a,{href:"https://github.com/Clarifai/runners-examples",children:"examples repository"})," to see models built for compatibility with the Clarifai platform."]}),"\n",(0,o.jsx)(n.admonition,{title:"tip",type:"note",children:(0,o.jsxs)(n.p,{children:["You can automatically generate a default model by running the ",(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/resources/api-overview/cli#clarifai-model-init",children:(0,o.jsx)(n.code,{children:"clarifai model init"})})," command in the terminal from your current directory. After the model's files are created, you can modify them as needed or go with the default options."]})}),"\n",(0,o.jsx)(n.h2,{id:"step-2-create-a-context-optional",children:"Step 2: Create a Context (Optional)"}),"\n",(0,o.jsxs)(n.p,{children:["Running the local development runner relies on certain environment variables defined in your current context. The ",(0,o.jsx)(n.em,{children:"context"})," refers to the active environment settings that determine how your commands interact with the Clarifai platform."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," You can create this context using the provided default values when you run ",(0,o.jsx)(n.code,{children:"clarifai login"})," and ",(0,o.jsx)(n.code,{children:"local-runner"})," commands."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Any configurations you create locally \u2014 such as the computer cluster and app \u2014 will also be created on the Clarifai platform, making them reusable whenever you test your model with the local development runner."}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/resources/api-overview/cli",children:"Click here"})," to learn how to create and manage various aspects of your Clarifai context, including switching contexts and editing your configuration information."]})}),"\n",(0,o.jsx)("a",{id:"table"}),"\n",(0,o.jsx)(n.p,{children:"These are the environment variables required to create a runner:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Variable"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"CLARIFAI_PAT"}),(0,o.jsx)(n.td,{children:"Personal Access Token (PAT) for authentication"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsxs)(n.td,{children:["CLARIFAI_USER_ID (",(0,o.jsx)(n.code,{children:"user_id"}),")"]}),(0,o.jsx)(n.td,{children:"User ID of the account owning the model"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsxs)(n.td,{children:["CLARIFAI_APP_ID (",(0,o.jsx)(n.code,{children:"app_id"}),")"]}),(0,o.jsx)(n.td,{children:"App ID containing the model"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsxs)(n.td,{children:["CLARIFAI_MODEL_ID  (",(0,o.jsx)(n.code,{children:"model_id"}),")"]}),(0,o.jsx)(n.td,{children:"The model ID for the model to be run locally"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsxs)(n.td,{children:["CLARIFAI_COMPUTE_CLUSTER_ID (",(0,o.jsx)(n.code,{children:"compute_cluster_id"}),")"]}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/compute/deployments/clusters-nodepools",children:"Compute cluster"})," where the Local Runner will reside. ",(0,o.jsxs)(n.em,{children:["Note that the ",(0,o.jsx)(n.code,{children:"user_id"})," of the compute cluster must match the ",(0,o.jsx)(n.code,{children:"user_id"})," of the model."]})]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsxs)(n.td,{children:["CLARIFAI_NODEPOOL_ID (",(0,o.jsx)(n.code,{children:"nodepool_id"}),")"]}),(0,o.jsx)(n.td,{children:"Nodepool within the compute cluster"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsxs)(n.td,{children:["CLARIFAI_DEPLOYMENT (",(0,o.jsx)(n.code,{children:"deployment_id"}),")"]}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/compute/deployments/deploy-model",children:"Deployment"})," for a model into the cluster and nodepool"]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsxs)(n.td,{children:["CLARIFAI_RUNNER_ID (",(0,o.jsx)(n.code,{children:"runner_id"}),")"]}),(0,o.jsx)(n.td,{children:"Auto-generated unique runner ID, created by the API and stored in the context"})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"step-3-run-your-model",children:"Step 3: Run Your Model"}),"\n",(0,o.jsx)(n.admonition,{title:"note",type:"info",children:(0,o.jsxs)(n.p,{children:["We'll use this method to run and test the model we created ",(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/compute/models/upload/",children:"here"}),"."]})}),"\n",(0,o.jsx)(n.p,{children:"To run your model with the local development runner, navigate to the directory where your custom model is located."}),"\n",(0,o.jsx)(n.p,{children:"Then, follow these steps."}),"\n",(0,o.jsx)(n.h3,{id:"log-in-to-clarifai-1",children:"Log in to Clarifai"}),"\n",(0,o.jsx)(n.p,{children:"Run the following command to log in to the Clarifai platform and establish a connection."}),"\n",(0,o.jsx)(a.A,{groupId:"code",children:(0,o.jsx)(i.A,{value:"bash",label:"CLI",children:(0,o.jsx)(s.A,{className:"language-bash",children:"clarifai login"})})}),"\n",(0,o.jsxs)(n.p,{children:["After running the ",(0,o.jsx)(n.code,{children:"login"})," command, you'll be prompted to enter the following details to authenticate your connection:"]}),"\n",(0,o.jsx)(a.A,{groupId:"code",children:(0,o.jsx)(i.A,{value:"bash",label:"CLI",children:(0,o.jsx)(s.A,{className:"language-bash",children:(0,o.jsx)(n.p,{children:'context name (default: "default"):\nuser id:\npersonal access token value (default: "ENVVAR" to get our env var rather than config):'})})})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Context name"}),' \u2014 You can provide a custom name for your Clarifai configuration context, or simply press Enter to use the default name, "default". This helps you manage different configurations if needed.']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"User ID"})," \u2014  Enter your Clarifai user ID."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"PAT"})," \u2014 Enter your Clarifai ",(0,o.jsx)(n.a,{href:"#get-a-pat-key-and-user-id",children:"PAT"}),". Note that if you press Enter, and you have set the ",(0,o.jsx)(n.code,{children:"CLARIFAI_PAT"})," environment variable, it will use that token automatically."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"start-your-local-runner-1",children:"Start Your Local Runner"}),"\n",(0,o.jsx)(n.p,{children:"Next, start a local development runner."}),"\n",(0,o.jsx)(a.A,{groupId:"code",children:(0,o.jsx)(i.A,{value:"bash",label:"CLI",children:(0,o.jsx)(s.A,{className:"language-bash",children:"clarifai model local-runner"})})}),"\n",(0,o.jsx)(n.p,{children:"Or:"}),"\n",(0,o.jsx)(a.A,{groupId:"code",children:(0,o.jsx)(i.A,{value:"bash",label:"CLI",children:(0,o.jsx)(s.A,{className:"language-bash",children:"clarifai model local-runner [OPTIONS] [MODEL_PATH]"})})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"MODEL_PATH"})," is an optional path to the model directory. If omitted, the current directory is used by default."]}),"\n"]}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsxs)(n.p,{children:["If the runner doesn't detect the necessary ",(0,o.jsx)(n.a,{href:"#step-2-create-a-context-optional",children:"context configurations"})," in your environment, it will prompt you to create them using default values."]}),"\n",(0,o.jsx)(n.p,{children:"This ensures that all essential components required for Local Runners are properly set up or included in your configuration context, including:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A compute cluster and nodepool configured for Local Runners."}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," This cluster is created exclusively for Local Runners. It is not designed to support other tasks and lacks features like autoscaling to handle variable traffic demands, among other cloud-specific capabilities. You also cannot use other types of clusters for Local Runners \u2014 only the special cluster created for this purpose is supported."]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"An app with a model and model version representing the local runner."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"A deployment that places the model version into the designated nodepool."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Example Output"}),(0,o.jsx)(s.A,{className:"language-text",children:c})]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," If the ",(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/compute/models/upload/#step-2-prepare-the-configyaml-file",children:(0,o.jsx)(n.code,{children:"config.yaml"})})," file does not contain model information that matches the ",(0,o.jsx)(n.code,{children:"user_id"}),", ",(0,o.jsx)(n.code,{children:"app_id"}),", and ",(0,o.jsx)(n.code,{children:"model_id"})," defined in your current context, it will be automatically updated to include the new model details. This ensures that the model started by the local development runner is the same one you intend to call via the API. If needed, you can back up the existing ",(0,o.jsx)(n.code,{children:"config.yaml"})," file as ",(0,o.jsx)(n.code,{children:"config.yaml.bk"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["You can view the active runners associated with your model on its individual page in the Clarifai platform. For a centralized view and easier management of all active runners, use the ",(0,o.jsx)(n.a,{href:"https://clarifai.com/compute/runners",children:"Runners dashboard"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"step-4-test-with-snippet",children:"Step 4: Test with Snippet"}),"\n",(0,o.jsxs)(n.p,{children:["Once the local development runner starts in your terminal, an example client code snippet is automatically generated based on the ",(0,o.jsx)(n.a,{href:"https://docs.clarifai.com/compute/models/inference/api#generate-example-code",children:"model's signature"})," to help you test it."]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Example Code Snippet"}),(0,o.jsx)(s.A,{className:"language-text",children:d})]}),"\n",(0,o.jsx)(n.p,{children:"If you run the generated snippet in a separate terminal, but within the same directory, you\u2019ll receive the model\u2019s response output."}),"\n",(0,o.jsx)(n.p,{children:"After you're done testing, simply close the terminal running the local development runner to shut it down."}),"\n",(0,o.jsx)(n.h2,{id:"additional-examples",children:"Additional Examples"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/Clarifai/runners-examples/tree/main/hello-world",children:"Simple example for running Hello World model locally with Clarifai\u2019s Local Runners"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/Clarifai/runners-examples/tree/main/local-runners/ollama-model-upload",children:"Example for running Ollama models locally with Clarifai\u2019s Local Runners"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.youtube.com/watch?v=JOdtZDmCFfk",children:"YouTube video on how to build your own local AI agent using Clarifai\u2019s Local Runners"})}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}},65537:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(96540),o=t(18215),l=t(65627),a=t(56347),i=t(50372),s=t(30604),c=t(11861),d=t(78749);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:o}}=e;return{value:n,label:t,attributes:r,default:o}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const o=(0,a.W6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(o.location.search);n.set(l,e),o.replace({...o.location,search:n.toString()})}),[l,o])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,l=h(e),[a,s]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:l}))),[c,u]=m({queryString:t,groupId:o}),[f,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,l]=(0,d.Dv)(t);return[o,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:o}),g=(()=>{const e=c??f;return p({value:e,tabValues:l})?e:null})();(0,i.A)((()=>{g&&s(g)}),[g]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),x(e)}),[u,x,l]),tabValues:l}}var x=t(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(74848);function y(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:i}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),d=e=>{const n=e.currentTarget,t=s.indexOf(n),o=i[t].value;o!==r&&(c(n),a(o))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{s.push(e)},onKeyDown:u,onClick:d,...l,className:(0,o.A)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:l}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===l));return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function v(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,o.A)("tabs-container",g.tabList),children:[(0,j.jsx)(y,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function w(e){const n=(0,x.A)();return(0,j.jsx)(v,{...e,children:u(e.children)},String(n))}},67399:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/local-runners-298af3177d2174a3805238cc2a99d2cc.png"},79329:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var r=t(18215);const o={tabItem:"tabItem_Ymn6"};var l=t(74848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,a),hidden:t,children:n})}}}]);