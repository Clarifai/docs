"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[689],{22046:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>f,contentTitle:()=>u,default:()=>m,frontMatter:()=>h,metadata:()=>i,toc:()=>x});const i=JSON.parse('{"id":"resources/api-overview/cli","title":"Clarifai CLI","description":"Learn how to use the Clarifai Command Line Interface (CLI)","source":"@site/docs/resources/api-overview/cli.md","sourceDirName":"resources/api-overview","slug":"/resources/api-overview/cli","permalink":"/resources/api-overview/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/Clarifai/docs/blob/main/docs/resources/api-overview/cli.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"description":"Learn how to use the Clarifai Command Line Interface (CLI)","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Node.js SDK","permalink":"/resources/api-overview/nodejs-sdk"},"next":{"title":"gRPC API Clients","permalink":"/resources/api-overview/grpc-clients"}}');var t=a(74848),l=a(28453),s=a(65537),r=a(79329),c=a(58069);const o="C:#############>clarifai config dump\ncontexts:\n  default:\n    CLARIFAI_API_BASE: https://api.clarifai.com\n    CLARIFAI_APP_ID: local-dev-runner-app\n    CLARIFAI_COMPUTE_CLUSTER_ID: local-dev-compute-cluster\n    CLARIFAI_DEPLOYMENT_ID: local-dev-deployment\n    CLARIFAI_MODEL_ID: local-dev-model\n    CLARIFAI_NODEPOOL_ID: local-dev-nodepool\n    CLARIFAI_PAT: XXXXXXXXXXXXXXXXXXX\n    CLARIFAI_RUNNER_ID: f35b7e4f3c774e48a8e54b74785debca\n    CLARIFAI_USER_ID: alfrick\n  my_new_context:\n    CLARIFAI_API_BASE: https://api.clarifai.com/\n    CLARIFAI_PAT: XXXXXXXXXXXX\n    CLARIFAI_USER_ID: alfrick\ncurrent_context: my_new_context",d="C::#############>clarifai config get-contexts\n    NAME            USER_ID    API_BASE                   PAT        APP_ID                COMPUTE_CLUSTER_ID         DEPLOYMENT_ID         MODEL_ID         NODEPOOL_ID         RUNNER_ID\n    default         alfrick    https://api.clarifai.com   c02f7****  local-dev-runner-app  local-dev-compute-cluster  local-dev-deployment  local-dev-model  local-dev-nodepool  f35b7e4f3c774e48a8e54b74785debca\n*   my_new_context  alfrick    https://api.clarifai.com/  XXXXX****   ",h={description:"Learn how to use the Clarifai Command Line Interface (CLI)",sidebar_position:3},u="Clarifai CLI",f={},x=[{value:"Installation",id:"installation",level:2},{value:"Set a PAT Key",id:"set-a-pat-key",level:3},{value:"Basics",id:"basics",level:3},{value:"Clarifai Context",id:"clarifai-context",level:2},{value:"Create Context",id:"create-context",level:3},{value:"Delete Context",id:"delete-context",level:3},{value:"Switch Contexts",id:"switch-contexts",level:3},{value:"Clarifai Login",id:"clarifai-login",level:2},{value:"Clarifai Config",id:"clarifai-config",level:2},{value:"Display Current Context",id:"display-current-context",level:3},{value:"Display Configuration File",id:"display-configuration-file",level:3},{value:"Edit Configuration File",id:"edit-configuration-file",level:3},{value:"Output Environment Variables",id:"output-environment-variables",level:3},{value:"List All Contexts",id:"list-all-contexts",level:3},{value:"Switch Contexts",id:"switch-contexts-1",level:3}];function p(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"clarifai-cli",children:"Clarifai CLI"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Learn how to use the Clarifai Command Line Interface (CLI)"})}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsx)(n.p,{children:"Clarifai\u2019s Command Line Interface (CLI) is a powerful, user-friendly tool designed to simplify and enhance your experience with our AI platform."}),"\n",(0,t.jsx)(n.p,{children:"By offering a streamlined way to execute tasks directly from the terminal, the CLI eliminates the need for extensive coding or constant reliance on the web interface."}),"\n",(0,t.jsxs)(n.p,{children:["Bundled within our ",(0,t.jsx)(n.a,{href:"https://docs.clarifai.com/resources/api-overview/python-sdk",children:"Python SDK package"}),", the CLI empowers both technical and non-technical users to efficiently execute a wide range of tasks and boost productivity on the Clarifai platform."]}),"\n","\n","\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["To begin, install the latest version of the ",(0,t.jsx)(n.code,{children:"clarifai"})," Python package."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"pip install --upgrade clarifai\n"})}),"\n",(0,t.jsx)(n.h3,{id:"set-a-pat-key",children:"Set a PAT Key"}),"\n",(0,t.jsxs)(n.p,{children:["You need to set the ",(0,t.jsx)(n.code,{children:"CLARIFAI_PAT"})," (Personal Access Token) as an environment variable before using the CLI tool. You can generate the PAT key in your personal settings page by navigating to the ",(0,t.jsx)(n.a,{href:"https://clarifai.com/settings/security",children:"Security section"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"This token is essential for authenticating your connection to the Clarifai platform."}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(r.A,{value:"bash",label:"Unix-Like Systems",children:(0,t.jsx)(c.A,{className:"language-bash",children:" export CLARIFAI_PAT=YOUR_PERSONAL_ACCESS_TOKEN_HERE "})}),(0,t.jsx)(r.A,{value:"bash2",label:"Windows",children:(0,t.jsx)(c.A,{className:"language-bash",children:" set CLARIFAI_PAT=YOUR_PERSONAL_ACCESS_TOKEN_HERE "})})]}),"\n",(0,t.jsx)(n.admonition,{title:"tip",type:"note",children:(0,t.jsxs)(n.p,{children:["On Windows, the Clarifai Python SDK expects a ",(0,t.jsx)(n.code,{children:"HOME"})," environment variable, which isn\u2019t set by default. To ensure compatibility with file paths used by the SDK, set ",(0,t.jsx)(n.code,{children:"HOME"})," to the value of your ",(0,t.jsx)(n.code,{children:"USERPROFILE"}),". You can set it in your Command Prompt this way: ",(0,t.jsx)(n.code,{children:"set HOME=%USERPROFILE%"}),"."]})}),"\n",(0,t.jsx)(n.h3,{id:"basics",children:"Basics"}),"\n",(0,t.jsx)(n.p,{children:"The CLI tool supports a broad range of use cases with intuitive commands and convenient aliases."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: clarifai [OPTIONS] COMMAND [ARGS]...\n\n  Clarifai CLI\n\nOptions:\n  --config TEXT\n  --help         Show this message and exit.\n\nCommands:\n  computecluster (cc)  Manage Compute Clusters: create, delete, list\n  config (cfg)         Manage CLI configuration\n  context              Manage contexts\n  deployment (dp)      Manage Deployments: create, delete, list\n  login                Login command to set PAT and other configurations.\n  model                Manage models: upload, test, local dev, predict, etc\n  nodepool (np)        Manage Nodepools: create, delete, list\n  run                  Execute a script with the current context's environment\n  shell-completion     Shell completion script\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"--help"})," option is particularly useful to quickly understand the available functionalities and how to use them."]}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai COMMAND --help"})})})}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai config --help"})})})}),"\n",(0,t.jsx)(n.p,{children:"Produces this output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'Usage: clarifai config [OPTIONS] COMMAND [ARGS]...\n\n  Manage CLI configuration\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  current-context (current)  Get the current context\n  dump (cat)                 Dump the configuration to stdout\n  edit (e)                   Edit the configuration file\n  env (cat)                  Print env vars. Use: eval "$(clarifai config env)"\n  get-contexts (list, ls)    Get all contexts\n  use-context (use)          Set the current context\n'})}),"\n",(0,t.jsx)(n.admonition,{title:"Context",type:"info",children:(0,t.jsx)(n.p,{children:"A context refers to the active environment settings that determine how your commands interact with the Clarifai platform. Think of a context as a saved set of credentials (such as a PAT key or a specific application ID) you want to work with."})}),"\n",(0,t.jsx)(n.h2,{id:"clarifai-context",children:"Clarifai Context"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"clarifai context"}),' command allows you to manage different Clarifai configurations or environments, referred to as "contexts."']}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai context [OPTIONS] COMMAND [ARGS]..."})})})}),"\n",(0,t.jsx)(n.p,{children:"This command provides subcommands to create, delete, and switch between different named Clarifai contexts. Each context can encapsulate specific authentication details (like PATs), API URLs, or other configurations relevant to a particular Clarifai project or user."}),"\n",(0,t.jsx)(n.h3,{id:"create-context",children:"Create Context"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"create"})," subcommand creates a new Clarifai context."]}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai context create CONTEXT_NAME_HERE"})})})}),"\n",(0,t.jsxs)(n.p,{children:["Here is an example of creating a context called ",(0,t.jsx)(n.code,{children:"my_new_context"}),". Note that you'll be prompted to configure the context by providing the necessary details for that context \u2014 user ID, API URL, and PAT."]}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsxs)(n.p,{children:["C:#############>clarifai context create my_new_context\nuser id: alfrick\nbase url (default: ",(0,t.jsx)(n.a,{href:"https://api.clarifai.com",children:"https://api.clarifai.com"}),'):\npersonal access token value (default: "ENVVAR" to get out of env var rather than config): xxxxxxxxxxxx']})})})}),"\n",(0,t.jsx)(n.h3,{id:"delete-context",children:"Delete Context"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"delete"})," (alias ",(0,t.jsx)(n.code,{children:"rm"}),") subcommand deletes an existing Clarifai context."]}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai context delete CONTEXT_NAME_HERE\n// or\nclarifai context rm CONTEXT_NAME_HERE"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is an example:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai context delete old_project_context"})})})}),"\n",(0,t.jsx)(n.h3,{id:"switch-contexts",children:"Switch Contexts"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"use"})," subcommand sets a specified context as the currently active context. All subsequent Clarifai CLI commands will operate within the configurations defined by this context."]}),"\n",(0,t.jsx)(n.p,{children:"This is useful when you need to switch between different Clarifai applications, user accounts, or API settings without repeatedly re-authenticating or reconfiguring."}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai context use CONTEXT_NAME_HERE"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is an example:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai context use my_other_project"})})})}),"\n",(0,t.jsx)(n.h2,{id:"clarifai-login",children:"Clarifai Login"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"clarifai login"})," command is used to authenticate and configure your access to the Clarifai platform. This involves setting up a Personal Access Token (PAT) and other necessary configurations for making API requests."]}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai login [OPTIONS] [API_URL]"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is an example of the standard way to use the command. You'll be prompted to enter a context name (a new, existing, or the default name), user ID, and PAT interactively."}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:'C:#############>clarifai login\ncontext name (default: "default"): my_new_context\nuser id: alfrick\npersonal access token value (default: "ENVVAR" to get out of env var rather than config): XXXXXXXXXXXX'})})})}),"\n",(0,t.jsx)(n.p,{children:"You can also log in with a user ID:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:'C:#############>clarifai login --user_id alfrick\ncontext name (default: "default"): my_new_context\npersonal access token value (default: "ENVVAR" to get out of env var rather than config): XXXXXXXXXX'})})})}),"\n",(0,t.jsx)(n.p,{children:"You can optionally specify a custom API URL if you are connecting to a Clarifai instance other than the default. Here is an example:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsxs)(n.p,{children:["C:#############>clarifai login ",(0,t.jsx)(n.a,{href:"https://api-dev.clarifai.com/",children:"https://api-dev.clarifai.com/"}),'\ncontext name (default: "default"): my_new_context\nuser id: alfrick\npersonal access token value (default: "ENVVAR" to get out of env var rather than config): XXXXXXXXXXXX']})})})}),"\n",(0,t.jsx)(n.h2,{id:"clarifai-config",children:"Clarifai Config"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"clarifai config"})," commands help you manage your CLI configuration, including the different contexts used to interact with the Clarifai API."]}),"\n",(0,t.jsx)(n.p,{children:"This command provides subcommands to manage various aspects of your CLI configuration settings."}),"\n",(0,t.jsx)(n.h3,{id:"display-current-context",children:"Display Current Context"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"current-context"})," (alias ",(0,t.jsx)(n.code,{children:"current"}),") subcommand displays the currently active CLI context. This is useful when you have multiple contexts with different configurations and you want to ensure you're operating under the correct one."]}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai config current-context\n// or\nclarifai config current"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is an example:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"C:#############>clarifai config current-context\nmy_new_context"})})})}),"\n",(0,t.jsx)(n.h3,{id:"display-configuration-file",children:"Display Configuration File"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"dump"})," (alias ",(0,t.jsx)(n.code,{children:"cat"}),") subcommand displays the entire CLI configuration file (in YAML format) to your console. This is helpful for inspecting all your defined contexts and their associated details."]}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai config dump\n// or\nclarifai config cat"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is an example:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:o})})}),"\n",(0,t.jsx)(n.h3,{id:"edit-configuration-file",children:"Edit Configuration File"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"edit"})," (alias ",(0,t.jsx)(n.code,{children:"e"}),") subcommand opens the CLI configuration file in your default text editor, allowing you to manually add, modify, or delete contexts. This is often how you'd initially set up new contexts with different settings, such as PAT keys or application IDs."]}),"\n",(0,t.jsx)(n.p,{children:"Remember to save the file after making changes."}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai config edit\n// or\nclarifai config e"})})})}),"\n",(0,t.jsx)(n.h3,{id:"output-environment-variables",children:"Output Environment Variables"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"env"})," (alias ",(0,t.jsx)(n.code,{children:"cat"}),") subcommand outputs your currently active context in a format that can be directly sourced into your shell's environment."]}),"\n",(0,t.jsx)(n.p,{children:"It generates a string of shell commands that can be useful if you want to use these values in a script or another process that relies on environment variables rather than the Clarifai config file."}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai config env\n// or\nclarifai config cat"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is an example:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsxs)(c.A,{className:"language-bash",children:[(0,t.jsx)(n.p,{children:"C:#############>clarifai config env --help\nUsage: clarifai config env [OPTIONS]"}),(0,t.jsx)(n.p,{children:'Print env vars. Use: eval "$(clarifai config env)"'}),(0,t.jsx)(n.p,{children:"Options:\n--help  Show this message and exit."}),(0,t.jsxs)(n.p,{children:['C:#############>clarifai config env\nexport CLARIFAI_API_BASE="',(0,t.jsx)(n.a,{href:"https://api.clarifai.com/",children:"https://api.clarifai.com/"}),'"\nexport CLARIFAI_PAT="XXXXXXXXXXXX"\nexport CLARIFAI_USER_ID="alfrick"']})]})})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," For Unix-like systems, running ",(0,t.jsx)(n.code,{children:'eval "$(clarifai config env)"'})," configures your current shell session by loading Clarifai-related environment variables directly from your active CLI configuration. This automatically sets up authentication for subsequent Clarifai commands or scripts run within that same session, eliminating the need to manually enter credentials. It's particularly useful for scripting where environment variables are preferred for authentication and for quickly setting up a terminal session with the correct Clarifai credentials. For Windows, you'd typically need to run ",(0,t.jsx)(n.code,{children:"clarifai config env"})," first, copy the output, and then manually run the ",(0,t.jsx)(n.code,{children:"set"})," commands it generates."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"list-all-contexts",children:"List All Contexts"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"get-contexts"})," (alias ",(0,t.jsx)(n.code,{children:"list"})," or ",(0,t.jsx)(n.code,{children:"ls"}),") subcommand lists all Clarifai contexts defined in your configuration file, displayed in a table format. This provides an overview of the different Clarifai setups you can switch between."]}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai config get-contexts\n// or\nclarifai config list\n// or\nclarifai config ls"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is an example:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:d})})}),"\n",(0,t.jsx)(n.h3,{id:"switch-contexts-1",children:"Switch Contexts"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"use-context"})," (alias ",(0,t.jsx)(n.code,{children:"use"}),") subcommand switches the active Clarifai context to a different one that you have defined."]}),"\n",(0,t.jsx)(n.p,{children:"This is crucial when you want to interact with a different Clarifai application or use a different API key without manually changing it every time."}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"clarifai config use-context\n// or\nclarifai config use"})})})}),"\n",(0,t.jsx)(n.p,{children:"Here is an example:"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(r.A,{value:"bash",label:"CLI",children:(0,t.jsx)(c.A,{className:"language-bash",children:(0,t.jsx)(n.p,{children:"C:#############>clarifai config use-context my_other_project\nSet my_other_project as the current context"})})})}),"\n",(0,t.jsxs)(n.p,{children:["The Clarifai CLI will now use the ",(0,t.jsx)(n.code,{children:"my_other_project"})," context for all subsequent commands (such as uploading models and generating predictions) until you switch it again."]})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},65537:(e,n,a)=>{a.d(n,{A:()=>C});var i=a(96540),t=a(18215),l=a(65627),s=a(56347),r=a(50372),c=a(30604),o=a(11861),d=a(78749);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:a}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:a,attributes:i,default:t}}=e;return{value:n,label:a,attributes:i,default:t}}))}(a);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function f(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:a}=e;const t=(0,s.W6)(),l=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,c.aZ)(l),(0,i.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(t.location.search);n.set(l,e),t.replace({...t.location,search:n.toString()})}),[l,t])]}function p(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,l=u(e),[s,c]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=a.find((e=>e.default))??a[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:l}))),[o,h]=x({queryString:a,groupId:t}),[p,m]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,l]=(0,d.Dv)(a);return[t,(0,i.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:t}),g=(()=>{const e=o??p;return f({value:e,tabValues:l})?e:null})();(0,r.A)((()=>{g&&c(g)}),[g]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!f({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),m(e)}),[h,m,l]),tabValues:l}}var m=a(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=a(74848);function v(e){let{className:n,block:a,selectedValue:i,selectValue:s,tabValues:r}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.a_)(),d=e=>{const n=e.currentTarget,a=c.indexOf(n),t=r[a].value;t!==i&&(o(n),s(t))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;n=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;n=c[a]??c[c.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":a},n),children:r.map((e=>{let{value:n,label:a,attributes:l}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>{c.push(e)},onKeyDown:h,onClick:d,...l,className:(0,t.A)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":i===n}),children:a??n},n)}))})}function b(e){let{lazy:n,children:a,selectedValue:l}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===l));return e?(0,i.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function A(e){const n=p(e);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",g.tabList),children:[(0,j.jsx)(v,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function C(e){const n=(0,m.A)();return(0,j.jsx)(A,{...e,children:h(e.children)},String(n))}},79329:(e,n,a)=>{a.d(n,{A:()=>s});a(96540);var i=a(18215);const t={tabItem:"tabItem_Ymn6"};var l=a(74848);function s(e){let{children:n,hidden:a,className:s}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,i.A)(t.tabItem,s),hidden:a,children:n})}}}]);