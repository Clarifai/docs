"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[3625],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return m}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,v=p["".concat(l,".").concat(m)]||p[m]||c[m]||s;return a?n.createElement(v,o(o({ref:t},d),{},{components:a})):n.createElement(v,o({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<s;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},85162:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(67294),r=a(34334),s="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,o),hidden:a},t)}},65488:function(e,t,a){a.d(t,{Z:function(){return m}});var n=a(83117),r=a(67294),s=a(34334),o=a(72389),i=a(67392),l=a(7094),u=a(12466),d="tabList__CuJ",c="tabItem_LNqP";function p(e){var t,a;const{lazy:o,block:p,defaultValue:m,values:v,groupId:f,className:b}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=v?v:h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),g=(0,i.l)(y,((e,t)=>e.value===t.value));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===m?m:null!=(t=null!=m?m:null==(a=h.find((e=>e.props.default)))?void 0:a.props.value)?t:h[0].props.value;if(null!==k&&!y.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:T,setTabGroupChoices:O}=(0,l.U)(),[E,w]=(0,r.useState)(k),_=[],{blockElementScrollPositionUntilNextRender:D}=(0,u.o5)();if(null!=f){const e=T[f];null!=e&&e!==E&&y.some((t=>t.value===e))&&w(e)}const N=e=>{const t=e.currentTarget,a=_.indexOf(t),n=y[a].value;n!==E&&(D(t),w(n),null!=f&&O(f,String(n)))},x=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=_.indexOf(e.currentTarget)+1;a=null!=(n=_[t])?n:_[0];break}case"ArrowLeft":{var r;const t=_.indexOf(e.currentTarget)-1;a=null!=(r=_[t])?r:_[_.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},b)},y.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:e=>_.push(e),onKeyDown:x,onFocus:N,onClick:N},o,{className:(0,s.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":E===t})}),null!=a?a:t)}))),o?(0,r.cloneElement)(h.filter((e=>e.props.value===E))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==E})))))}function m(e){const t=(0,o.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},87934:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return c}});var n=a(83117),r=(a(67294),a(3905)),s=a(65488),o=a(85162);const i={description:"Manage dataset versions so you can track the performance of and iterate on your datasets",sidebar_position:4},l="Dataset Versions",u={unversionedId:"api-guide/data/datasets/dataset-versions",id:"api-guide/data/datasets/dataset-versions",title:"Dataset Versions",description:"Manage dataset versions so you can track the performance of and iterate on your datasets",source:"@site/docs/api-guide/data/datasets/dataset-versions.md",sourceDirName:"api-guide/data/datasets",slug:"/api-guide/data/datasets/dataset-versions",permalink:"/api-guide/data/datasets/dataset-versions",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{description:"Manage dataset versions so you can track the performance of and iterate on your datasets",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Dataset Inputs",permalink:"/api-guide/data/datasets/dataset-inputs"},next:{title:"Supported Formats",permalink:"/api-guide/data/supported-formats"}},d={},c=[{value:"Add a Dataset Version",id:"add-a-dataset-version",level:2},{value:"List Dataset Versions",id:"list-dataset-versions",level:2},{value:"Get a Dataset Versions",id:"get-a-dataset-versions",level:2},{value:"Change a Dataset Version",id:"change-a-dataset-version",level:2},{value:"Delete a Dataset Version",id:"delete-a-dataset-version",level:2}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dataset-versions"},"Dataset Versions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Manage dataset versions so you can track the performance of your datasets and iterate over them")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"add-a-dataset-version"},"Add a Dataset Version"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location -g --request POST \'api.clarifai.com/v2/datasets/{{dataset_id}}/versions\' \\\n--header \'Authorization: Key {{YOUR API KEY}}\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "dataset_versions": [\n        {\n            "id": "dataset-version-1633032673",\n            "name": "foo",\n            "dataset_filter": {\n                "id": "{{dataset_filter_id}}"\n            }\n        }\n    ]\n}\'\n')))),(0,r.kt)("h2",{id:"list-dataset-versions"},"List Dataset Versions"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --location -g --request GET 'api.clarifai.com/v2/datasets/{{dataset_id}}/versions?page=1&per_page=100' \\\n--header 'Authorization: Key {{YOUR API KEY}}' \\\n--header 'Content-Type: application/json'\n")))),(0,r.kt)("h2",{id:"get-a-dataset-versions"},"Get a Dataset Versions"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --location -g --request GET 'api.clarifai.com/v2/datasets/{{dataset_id}}/versions/{{dataset_version_id}}' \\\n--header 'Authorization: Key {{YOUR API KEY}}' \\\n--header 'Content-Type: application/json'\n")))),(0,r.kt)("h2",{id:"change-a-dataset-version"},"Change a Dataset Version"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location -g --request PATCH \'api.clarifai.com/v2/datasets/{{dataset_id}}/versions\' \\\n--header \'Authorization: Key {{YOUR API KEY}}\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "dataset_versions": [\n        {\n            "id": "{{dataset_version_id}}",\n            "name": "dataset version updated name"\n        }\n    ],\n    "action": "overwrite"\n}\'\n')))),(0,r.kt)("h2",{id:"delete-a-dataset-version"},"Delete a Dataset Version"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl --location -g --request DELETE 'api.clarifai.com/v2/datasets/{{dataset_id}}/versions' \\\n--header 'Authorization: Key {{YOUR API KEY}}' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"dataset_version_ids\": [\"{{dataset_version_id}}\"]\n}'\n")))))}m.isMDXComponent=!0}}]);