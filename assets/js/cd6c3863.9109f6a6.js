"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[5515],{19365:(e,n,t)=>{t.d(n,{A:()=>s});var a=t(96540),i=t(20053);const r={tabItem:"tabItem_Ymn6"};function s(e){let{children:n,hidden:t,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,s),hidden:t},n)}},11470:(e,n,t)=>{t.d(n,{A:()=>I});var a=t(58168),i=t(96540),r=t(20053),s=t(23104),o=t(56347),u=t(57485),l=t(31682),c=t(89466);function p(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}function d(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??p(t);return function(e){const n=(0,l.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,u.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=d(e),[s,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[u,l]=m({queryString:t,groupId:a}),[p,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,c.Dv)(t);return[a,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),f=(()=>{const e=u??p;return g({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!g({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),l(e),b(e)}),[l,b,r]),tabValues:r}}var f=t(92303);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function _(e){let{className:n,block:t,selectedValue:o,selectValue:u,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),a=l[t].value;a!==o&&(p(n),u(a))},g=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n)},l.map((e=>{let{value:n,label:t,attributes:s}=e;return i.createElement("li",(0,a.A)({role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,key:n,ref:e=>c.push(e),onKeyDown:g,onClick:d},s,{className:(0,r.A)("tabs__item",h.tabItem,s?.className,{"tabs__item--active":o===n})}),t??n)})))}function y(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function E(e){const n=b(e);return i.createElement("div",{className:(0,r.A)("tabs-container",h.tabList)},i.createElement(_,(0,a.A)({},e,n)),i.createElement(y,(0,a.A)({},e,n)))}function I(e){const n=(0,f.A)();return i.createElement(E,(0,a.A)({key:String(n)},e))}},3987:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>b,contentTitle:()=>g,default:()=>y,frontMatter:()=>d,metadata:()=>m,toc:()=>f});var a=t(58168),i=(t(96540),t(15680)),r=t(11470),s=t(19365),o=t(77964);const u="################################################################\n# In this section, we set the user authentication and app ID.\n# Change these strings to run your own example.\n#################################################################\n\nUSER_ID = 'YOUR_USER_ID_HERE'\n# Your PAT (Personal Access Token) can be found in the Account's Security section\nPAT = 'YOUR_PAT_HERE'\nAPP_ID = 'YOUR_APP_ID_HERE'\n\n##########################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n##########################################################################\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import resources_pb2, service_pb2, service_pb2_grpc\nfrom clarifai_grpc.grpc.api.status import status_code_pb2\n\nchannel = ClarifaiChannel.get_grpc_channel()\nstub = service_pb2_grpc.V2Stub(channel)\n\nmetadata = (('authorization', 'Key ' + PAT),)\n\nuserDataObject = resources_pb2.UserAppIDSet(user_id=USER_ID, app_id=APP_ID) # The userDataObject is required when using a PAT\n\nlist_inputs_response = stub.ListInputs(\n    service_pb2.ListInputsRequest(\n        user_app_id=userDataObject,\n        page=2, \n        per_page=20\n    ),\n    metadata=metadata\n)\n\nif list_inputs_response.status.code != status_code_pb2.SUCCESS:\n    print(list_inputs_response.status)\n    raise Exception(\"List inputs failed, status: \" + list_inputs_response.status.description)\n\nfor input_object in list_inputs_response.inputs:\n    print(input_object)",l='//index.js file\n\n////////////////////////////////////////////////////////////////////\n// In this section, we set the user authentication and app ID.\n// Change these strings to run your own example.\n////////////////////////////////////////////////////////////////////\n\nconst USER_ID = \'YOUR_USER_ID_HERE\';\n// Your PAT (Personal Access Token) can be found in the Account\'s Security section\nconst PAT = \'YOUR_PAT_HERE\';\nconst APP_ID = \'YOUR_APP_ID_HERE\';\n\n///////////////////////////////////////////////////////////////////////////////////\n// YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n///////////////////////////////////////////////////////////////////////////////////\n\nconst { ClarifaiStub, grpc } = require("clarifai-nodejs-grpc");\n\nconst stub = ClarifaiStub.grpc();\n\n// This will be used by every Clarifai endpoint call\nconst metadata = new grpc.Metadata();\nmetadata.set("authorization", "Key " + PAT);\n\nstub.ListInputs(\n    {\n        user_app_id: {\n            user_id: USER_ID,\n            app_id: APP_ID\n        },\n        page: 2,\n        per_page: 20\n    },\n    metadata,\n    (err, response) => {\n        if (err) {\n            throw new Error(err);\n        }\n\n        if (response.status.code !== 10000) {\n            throw new Error("List inputs failed, status: " + response.status.description);\n        }\n\n        for (const input of response.inputs) {\n            console.log(JSON.stringify(input, null, 2));\n        }\n    }\n);\n',c='package com.clarifai.example;\n\nimport com.clarifai.channel.ClarifaiChannel;\nimport com.clarifai.credentials.ClarifaiCallCredentials;\nimport com.clarifai.grpc.api.*;\nimport com.clarifai.grpc.api.status.StatusCode;\n\npublic class ClarifaiExample {\n\n    ////////////////////////////////////////////////////////////////////\n    // In this section, we set the user authentication and app ID.\n    // Change these strings to run your own example.\n    ////////////////////////////////////////////////////////////////////\n\n    static final String USER_ID = "YOUR_USER_ID_HERE";\n    //Your PAT (Personal Access Token) can be found in the portal under Authentication\t\n    static final String PAT = "YOUR_PAT_HERE";\n    static final String APP_ID = "YOUR_APP_ID_HERE";\n\n    ///////////////////////////////////////////////////////////////////////////////////\n    // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n    ///////////////////////////////////////////////////////////////////////////////////\n\n    public static void main(String[] args) {\n\n        V2Grpc.V2BlockingStub stub = V2Grpc.newBlockingStub(ClarifaiChannel.INSTANCE.getGrpcChannel())\n            .withCallCredentials(new ClarifaiCallCredentials(PAT));\n\n        MultiInputResponse listInputsResponse = stub.listInputs(\n            ListInputsRequest.newBuilder()\n            .setUserAppId(UserAppIDSet.newBuilder().setUserId(USER_ID).setAppId(APP_ID))\n            .setPage(2)\n            .setPerPage(20)\n            .build()\n        );\n\n        if (listInputsResponse.getStatus().getCode() != StatusCode.SUCCESS) {\n            throw new RuntimeException("List inputs failed, status: " + listInputsResponse.getStatus());\n        }\n\n        for (Input input: listInputsResponse.getInputsList()) {\n            System.out.println(input);\n        }\n\n    }\n\n}',p='curl -X GET "https://api.clarifai.com/v2/users/YOUR_USER_ID_HERE/apps/YOUR_APP_ID_HERE/inputs?page=2&per_page=20" \\\n  -H "Authorization: Key YOUR_PAT_HERE" \\\n  ',d={description:"Paginate your data batches.",sidebar_position:3},g="Pagination",m={unversionedId:"api-guide/advanced-topics/pagination",id:"api-guide/advanced-topics/pagination",title:"Pagination",description:"Paginate your data batches.",source:"@site/docs/api-guide/advanced-topics/pagination.md",sourceDirName:"api-guide/advanced-topics",slug:"/api-guide/advanced-topics/pagination",permalink:"/api-guide/advanced-topics/pagination",draft:!1,editUrl:"https://github.com/Clarifai/docs/blob/main/docs/api-guide/advanced-topics/pagination.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"Paginate your data batches.",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Patching",permalink:"/api-guide/advanced-topics/patching"},next:{title:"Batch Predict CSV on Custom Text Model",permalink:"/api-guide/advanced-topics/batch-predict-csv-on-custom-text-model"}},b={},f=[],h={toc:f},_="wrapper";function y(e){let{components:n,...t}=e;return(0,i.yg)(_,(0,a.A)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"pagination"},"Pagination"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Paginate your data batches")),(0,i.yg)("hr",null),(0,i.yg)("p",null,"Many API calls are paginated. It is an helpful feature when working with our API, especially if you have a huge number of results to display."),(0,i.yg)("p",null,"You can provide ",(0,i.yg)("inlineCode",{parentName:"p"},"page")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"per_page")," params to the API request, and your results will be split into pages. "),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"page")," params indicates the page number\u2060\u2014defaults to 1. The ",(0,i.yg)("inlineCode",{parentName:"p"},"per_page")," params indicates the number of results that will be contained in each page\u2060\u2014defaults to 128. You can get up to 1,000 results per page. "),(0,i.yg)("p",null,"In the following example, we are getting all inputs and specifying to start at page 2 and retrieve 20 results per page."),(0,i.yg)("admonition",{type:"info"},(0,i.yg)("p",{parentName:"admonition"},"The initialization code used in the following example is outlined in detail on the ",(0,i.yg)("a",{parentName:"p",href:"https://docs.clarifai.com/api-guide/api-overview/api-clients#client-installation-instructions"},"client installation page."))),(0,i.yg)(r.A,{mdxType:"Tabs"},(0,i.yg)(s.A,{value:"python",label:"Python",mdxType:"TabItem"},(0,i.yg)(o.A,{className:"language-python",mdxType:"CodeBlock"},u)),(0,i.yg)(s.A,{value:"nodejs",label:"NodeJS",mdxType:"TabItem"},(0,i.yg)(o.A,{className:"language-javascript",mdxType:"CodeBlock"},l)),(0,i.yg)(s.A,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.yg)(o.A,{className:"language-java",mdxType:"CodeBlock"},c)),(0,i.yg)(s.A,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,i.yg)(o.A,{className:"language-bash",mdxType:"CodeBlock"},p))))}y.isMDXComponent=!0}}]);