"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[946],{10694:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>f,contentTitle:()=>h,default:()=>b,frontMatter:()=>p,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"integrations/databricks/fetch-data","title":"Fetch Data","description":"Seamlessly retrieve your data from Clarifai into Databricks","source":"@site/docs/integrations/databricks/fetch-data.md","sourceDirName":"integrations/databricks","slug":"/integrations/databricks/fetch-data","permalink":"/integrations/databricks/fetch-data","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"description":"Seamlessly retrieve your data from Clarifai into Databricks","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Upload Data","permalink":"/integrations/databricks/upload-data"},"next":{"title":"Fetch Annotations","permalink":"/integrations/databricks/fetch-annotations"}}');var r=a(74848),i=a(28453),s=a(11470),o=a(19365),l=a(88149);const c='#######################################################################################\n# In this section, we set the user authentication, user and app ID, and dataset ID.\n# Change these strings to run your own example.\n#######################################################################################\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\nPAT = "YOUR_PAT_HERE"\nUSER_ID = "YOUR_USER_ID_HERE"\nAPP_ID = "YOUR_APP_ID_HERE"\nDATASET_ID = "YOUR_DATASET_ID_HERE"\n\n############################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n############################################################################\n\n# Import the required packages\nimport os\nfrom clarifaipyspark.client import ClarifaiPySpark\n\n# Set Clarifai PAT as environment variable\nos.environ["CLARIFAI_PAT"] = PAT\n# Create a Clarifai-PySpark client object to connect to your app on Clarifai\ncspark_obj = ClarifaiPySpark(user_id=USER_ID, app_id=APP_ID)\n# Specify the dataset\ndataset_obj = cspark_obj.dataset(dataset_id=DATASET_ID)\n\n#  Retrieve data files in JSON format\ninputs_response = list(\n    dataset_obj.list_inputs(\n        input_type="image"  # Or, specify as "video", "audio", or "text"\n    )\n)\nprint(inputs_response)\n',u='#######################################################################################\n# In this section, we set the user authentication, user and app ID, and dataset ID.\n# Change these strings to run your own example.\n######################################################################################\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\nPAT = "YOUR_PAT_HERE"\nUSER_ID = "YOUR_USER_ID_HERE"\nAPP_ID = "YOUR_APP_ID_HERE"\nDATASET_ID = "YOUR_DATASET_ID_HERE"\n\n############################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n############################################################################\n\n# Import the required packages\nimport os\nfrom clarifaipyspark.client import ClarifaiPySpark\n\n# Set Clarifai PAT as environment variable\nos.environ["CLARIFAI_PAT"] = PAT\n# Create a Clarifai-PySpark client object to connect to your app on Clarifai\ncspark_obj = ClarifaiPySpark(user_id=USER_ID, app_id=APP_ID)\n# Specify the dataset\ndataset_obj = cspark_obj.dataset(dataset_id=DATASET_ID)\n\n# Retrieve data files as a dataframe\ninputs_df = dataset_obj.export_inputs_to_dataframe(\n          input_type="image" # Or, specify as "text"\n   )\nprint(inputs_df)\n',d='##################################################################################\n# In this section, we set the user authentication, user and app ID, dataset ID,\n# and destination volume path. Change these strings to run your own example.\n##################################################################################\n\n# Your PAT (Personal Access Token) can be found in the Account\'s Security section\nPAT = "YOUR_PAT_HERE"\nUSER_ID = "YOUR_USER_ID_HERE"\nAPP_ID = "YOUR_APP_ID_HERE"\nDATASET_ID = "YOUR_DATASET_ID_HERE"\n# URL path of your Databricks volume \nDESTINATION_VOLUME_PATH = "YOUR_DATABRICKS_VOLUME_PATH_HERE"\n\n############################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n############################################################################\n\n# Import the required packages\nimport os\nfrom clarifaipyspark.client import ClarifaiPySpark\n# Set Clarifai PAT as environment variable\nos.environ["CLARIFAI_PAT"] = PAT\n# Create a Clarifai-PySpark client object to connect to your app on Clarifai\ncspark_obj = ClarifaiPySpark(user_id=USER_ID, app_id=APP_ID)\n# Specify the dataset\ndataset_obj = cspark_obj.dataset(dataset_id=DATASET_ID)\n\n#  Retrieve data files in JSON format\ninputs_response = list(\n    dataset_obj.list_inputs(\n        input_type="image"  # Or, specify as "text"\n    )\n)\n#For images\ndataset_obj.export_images_to_volume(path=DESTINATION_VOLUME_PATH, \n                                    input_response=inputs_response)\n#For text\n#dataset_obj.export_text_to_volume(path=DESTINATION_VOLUME_PATH, \n                                  #input_response=inputs_response)\n\n\n\n',p={description:"Seamlessly retrieve your data from Clarifai into Databricks",sidebar_position:2},h="Fetch Data",f={},m=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Retrieve Data Files in JSON Format",id:"retrieve-data-files-in-json-format",level:2},{value:"Retrieve Data Files as a Dataframe",id:"retrieve-data-files-as-a-dataframe",level:2},{value:"Retrieve Data Files to Databricks Volume",id:"retrieve-data-files-to-databricks-volume",level:2}];function _(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"fetch-data",children:"Fetch Data"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Seamlessly retrieve your data from Clarifai into Databricks"})}),"\n",(0,r.jsx)("hr",{}),"\n",(0,r.jsx)(t.p,{children:"You may use Clarifai for tasks like image recognition and analysis. Then, you may want to bring the results or the processed data into Databricks for more in-depth exploration, analysis, or integration with other data sources."}),"\n",(0,r.jsx)(t.p,{children:"Let\u2019s illustrate how you can effortlessly transfer data from Clarifai into the Databricks environment."}),"\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Databricks notebook development environment"}),"\n",(0,r.jsxs)(t.li,{children:["Get your PAT (Personal Access Token) from the Clarifai\u2019s portal under the ",(0,r.jsx)(t.a,{href:"https://clarifai.com/settings/security",children:"Settings/Security"})," section"]}),"\n",(0,r.jsx)(t.li,{children:"Get your Clarifai user ID"}),"\n",(0,r.jsx)(t.li,{children:"Get the ID of the Clarifai app where you want to fetch the data from"}),"\n",(0,r.jsx)(t.li,{children:"Get the ID of the dataset having the data within your app"}),"\n",(0,r.jsxs)(t.li,{children:["Install the ",(0,r.jsx)(t.a,{href:"https://github.com/Clarifai/clarifai-pyspark",children:"Clarifai PySpark"})," package by running ",(0,r.jsx)(t.code,{children:"pip install clarifai-pyspark "})]}),"\n",(0,r.jsxs)(t.li,{children:["Install Protocol Buffers by running ",(0,r.jsx)(t.code,{children:"pip install protobuf==4.24.2 "}),". It\u2019s a cross-platform, serialization protocol that describes the structure of the data to be sent"]}),"\n"]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["You can learn how to authenticate with the Clarifai platform ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/clarifai-basics/authentication/personal-access-tokens",children:"here"}),"."]})}),"\n","\n","\n",(0,r.jsx)(t.h2,{id:"retrieve-data-files-in-json-format",children:"Retrieve Data Files in JSON Format"}),"\n",(0,r.jsx)(t.p,{children:"You can retrieve detailed information about the input data in your Clarifai app\u2019s dataset. You\u2019ll get a JSON response containing comprehensive details about the dataset files."}),"\n",(0,r.jsxs)(t.p,{children:["Ensure you use the ",(0,r.jsx)(t.code,{children:"input_type"}),' parameter for targeted retrieval based on the data file types. You can specify the desired type, such as "image", "video", "audio", or "text", to obtain specific details relevant to that file type.']}),"\n",(0,r.jsx)(s.A,{groupId:"code",children:(0,r.jsx)(o.A,{value:"python",label:"Python",children:(0,r.jsx)(l.A,{className:"language-python",children:c})})}),"\n",(0,r.jsx)(t.h2,{id:"retrieve-data-files-as-a-dataframe",children:"Retrieve Data Files as a Dataframe"}),"\n",(0,r.jsxs)(t.p,{children:["You can retrieve detailed information about your data files in a structured dataframe format. The dataframe includes key columns like ",(0,r.jsx)(t.code,{children:"input_id"}),", ",(0,r.jsx)(t.code,{children:"image_url/text_url"}),", ",(0,r.jsx)(t.code,{children:"image_info/text_info"}),", ",(0,r.jsx)(t.code,{children:"input_created_at"}),", and ",(0,r.jsx)(t.code,{children:"input_modified_at"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Ensure to specify the ",(0,r.jsx)(t.code,{children:"input_type"}),' parameter to tailor the results to a specific type, such as "image", or "text".']}),"\n",(0,r.jsx)(t.p,{children:"Note that the JSON response may include additional attributes, offering comprehensive insights beyond the specified columns in the dataframe."}),"\n",(0,r.jsx)(s.A,{groupId:"code",children:(0,r.jsx)(o.A,{value:"python",label:"Python",children:(0,r.jsx)(l.A,{className:"language-python",children:u})})}),"\n",(0,r.jsx)(t.h2,{id:"retrieve-data-files-to-databricks-volume",children:"Retrieve Data Files to Databricks Volume"}),"\n",(0,r.jsx)(t.p,{children:"You can effortlessly download image and text files from your Clarifai app\u2019s dataset to your Databricks volume."}),"\n",(0,r.jsxs)(t.p,{children:["You need to specify the path where the retrieved data will be stored in the volume and utilize the response obtained from the ",(0,r.jsx)(t.code,{children:"list_inputs()"})," function as the parameter."]}),"\n",(0,r.jsx)(s.A,{groupId:"code",children:(0,r.jsx)(o.A,{value:"python",label:"Python",children:(0,r.jsx)(l.A,{className:"language-python",children:d})})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["You can get examples for integrating Clarifai with Databricks ",(0,r.jsx)(t.a,{href:"https://github.com/Clarifai/clarifai-pyspark/tree/main/examples",children:"here"}),"."]})})]})}function b(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(_,{...e})}):_(e)}},11470:(e,t,a)=>{a.d(t,{A:()=>g});var n=a(96540),r=a(18215),i=a(17559),s=a(23104),o=a(56347),l=a(205),c=a(57485),u=a(31682),d=a(70679);function p(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:t,children:a}=e;return(0,n.useMemo)(()=>{const e=t??function(e){return p(e).map(({props:{value:e,label:t,attributes:a,default:n}})=>({value:e,label:t,attributes:a,default:n}))}(a);return function(e){const t=(0,u.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,a])}function f({value:e,tabValues:t}){return t.some(t=>t.value===e)}function m({queryString:e=!1,groupId:t}){const a=(0,o.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(r),(0,n.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})},[r,a])]}function _(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,i=h(e),[s,o]=(0,n.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=t.find(e=>e.default)??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i})),[c,u]=m({queryString:a,groupId:r}),[p,_]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,r]=(0,d.Dv)(t);return[a,(0,n.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),b=(()=>{const e=c??p;return f({value:e,tabValues:i})?e:null})();(0,l.A)(()=>{b&&o(b)},[b]);return{selectedValue:s,selectValue:(0,n.useCallback)(e=>{if(!f({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),_(e)},[u,_,i]),tabValues:i}}var b=a(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=a(74848);function A({className:e,block:t,selectedValue:a,selectValue:n,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),c=e=>{const t=e.currentTarget,r=o.indexOf(t),s=i[r].value;s!==a&&(l(t),n(s))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;t=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;t=o[a]??o[o.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:i.map(({value:e,label:t,attributes:n})=>(0,v.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:c,...n,className:(0,r.A)("tabs__item",y.tabItem,n?.className,{"tabs__item--active":a===e}),children:t??e},e))})}function I({lazy:e,children:t,selectedValue:a}){const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===a);return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))})}function x(e){const t=_(e);return(0,v.jsxs)("div",{className:(0,r.A)(i.G.tabs.container,"tabs-container",y.tabList),children:[(0,v.jsx)(A,{...t,...e}),(0,v.jsx)(I,{...t,...e})]})}function g(e){const t=(0,b.A)();return(0,v.jsx)(x,{...e,children:p(e.children)},String(t))}},19365:(e,t,a)=>{a.d(t,{A:()=>s});a(96540);var n=a(18215);const r={tabItem:"tabItem_Ymn6"};var i=a(74848);function s({children:e,hidden:t,className:a}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,a),hidden:t,children:e})}}}]);