"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[3230],{11470:(e,t,l)=>{l.d(t,{A:()=>w});var n=l(96540),r=l(18215),a=l(17559),o=l(23104),s=l(56347),i=l(205),c=l(57485),d=l(31682),u=l(70679);function h(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){const{values:t,children:l}=e;return(0,n.useMemo)(()=>{const e=t??function(e){return h(e).map(({props:{value:e,label:t,attributes:l,default:n}})=>({value:e,label:t,attributes:l,default:n}))}(l);return function(e){const t=(0,d.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,l])}function p({value:e,tabValues:t}){return t.some(t=>t.value===e)}function f({queryString:e=!1,groupId:t}){const l=(0,s.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(r),(0,n.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(l.location.search);t.set(r,e),l.replace({...l.location,search:t.toString()})},[r,l])]}function x(e){const{defaultValue:t,queryString:l=!1,groupId:r}=e,a=m(e),[o,s]=(0,n.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const l=t.find(e=>e.default)??t[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:t,tabValues:a})),[c,d]=f({queryString:l,groupId:r}),[h,x]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[l,r]=(0,u.Dv)(t);return[l,(0,n.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),g=(()=>{const e=c??h;return p({value:e,tabValues:a})?e:null})();(0,i.A)(()=>{g&&s(g)},[g]);return{selectedValue:o,selectValue:(0,n.useCallback)(e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),x(e)},[d,x,a]),tabValues:a}}var g=l(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=l(74848);function v({className:e,block:t,selectedValue:l,selectValue:n,tabValues:a}){const s=[],{blockElementScrollPositionUntilNextRender:i}=(0,o.a_)(),c=e=>{const t=e.currentTarget,r=s.indexOf(t),o=a[r].value;o!==l&&(i(t),n(o))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const l=s.indexOf(e.currentTarget)+1;t=s[l]??s[0];break}case"ArrowLeft":{const l=s.indexOf(e.currentTarget)-1;t=s[l]??s[s.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:a.map(({value:e,label:t,attributes:n})=>(0,b.jsx)("li",{role:"tab",tabIndex:l===e?0:-1,"aria-selected":l===e,ref:e=>{s.push(e)},onKeyDown:d,onClick:c,...n,className:(0,r.A)("tabs__item",y.tabItem,n?.className,{"tabs__item--active":l===e}),children:t??e},e))})}function j({lazy:e,children:t,selectedValue:l}){const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===l);return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==l}))})}function I(e){const t=x(e);return(0,b.jsxs)("div",{className:(0,r.A)(a.G.tabs.container,"tabs-container",y.tabList),children:[(0,b.jsx)(v,{...t,...e}),(0,b.jsx)(j,{...t,...e})]})}function w(e){const t=(0,g.A)();return(0,b.jsx)(I,{...e,children:h(e.children)},String(t))}},19365:(e,t,l)=>{l.d(t,{A:()=>o});l(96540);var n=l(18215);const r={tabItem:"tabItem_Ymn6"};var a=l(74848);function o({children:e,hidden:t,className:l}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,l),hidden:t,children:e})}},39937:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>f,frontMatter:()=>d,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"compute/upload/test-locally","title":"Test Models Locally","description":"Learn how to test your locally built models","source":"@site/docs/compute/upload/test-locally.md","sourceDirName":"compute/upload","slug":"/compute/upload/test-locally","permalink":"/compute/upload/test-locally","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"description":"Learn how to test your locally built models","sidebar_position":3,"toc_max_heading_level":4},"sidebar":"tutorialSidebar","previous":{"title":"Build and Upload Models","permalink":"/compute/upload/"},"next":{"title":"Input and Output Data Types","permalink":"/compute/upload/data-types"}}');var r=l(74848),a=l(28453),o=l(11470),s=l(19365),i=l(88149);const c='from clarifai.runners.models.model_class import ModelClass\nfrom typing import Iterator\n\n\nclass MyModel(ModelClass):\n    """A custom runner that adds "Hello World" to the end of the text."""\n\n    def load_model(self):\n        """Load the model here."""\n\n    @ModelClass.method\n    def predict(self, text1: str = "") -> str:\n        output_text = text1 + "Hello World"\n        return output_text\n\n    @ModelClass.method\n    def generate(self, text1: str = "") -> Iterator[str]:\n        """Example yielding a whole batch of streamed stuff back."""\n\n        for i in range(10):  # fake something iterating generating 10 times.\n            output_text = text1 + f"Generate Hello World {i}"\n            yield output_text\n\n    def test(self):\n        res = self.predict("test")\n        assert res == "testHello World"\n\n        res = self.generate("test")\n        for i, r in enumerate(res):\n            assert r == f"testGenerate Hello World {i}"\n',d={description:"Learn how to test your locally built models",sidebar_position:3,toc_max_heading_level:4},u="Test Models Locally",h={},m=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Build a Model",id:"build-a-model",level:3},{value:"Install Clarifai CLI",id:"install-clarifai-cli",level:3},{value:"Set up Docker or a Virtual Environment",id:"set-up-docker-or-a-virtual-environment",level:3},{value:"Test by Running Locally",id:"test-by-running-locally",level:2},{value:"Test by Starting a gRPC Server",id:"test-by-starting-a-grpc-server",level:2},{value:"Make Inference Requests",id:"make-inference-requests",level:3}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Details:l}=t;return l||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"test-models-locally",children:"Test Models Locally"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Learn how to test your custom models locally"})}),"\n",(0,r.jsx)("hr",{}),"\n",(0,r.jsx)(t.p,{children:"Before uploading a custom model to the Clarifai platform, always test and debug it locally. It ensures smooth performance, verifies dependency compatibility, and streamlines the deployment process."}),"\n",(0,r.jsx)(t.p,{children:"This step helps you detect problems like setup file errors, typos, code misconfigurations, or incorrect model implementations. This saves you time and avoids upload failures by validating the model\u2019s behavior on the target hardware you plan to deploy to."}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"You should ensure your local environment has sufficient memory and compute resources to handle model loading and execution during the testing process."})}),"\n","\n","\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(t.h3,{id:"build-a-model",children:"Build a Model"}),"\n",(0,r.jsx)(t.p,{children:"You can either build a custom model from scratch or leverage pre-trained models from external repositories like Hugging Face."}),"\n",(0,r.jsxs)(t.p,{children:["If you're developing your own model, our ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/compute/models/model-upload/",children:"step-by-step guide"})," provides detailed instructions to get started. You can also explore ",(0,r.jsx)(t.a,{href:"https://github.com/Clarifai/runners-examples",children:"this examples repository"})," to learn how to build models compatible with the Clarifai platform."]}),"\n",(0,r.jsx)(t.h3,{id:"install-clarifai-cli",children:"Install Clarifai CLI"}),"\n",(0,r.jsxs)(t.p,{children:["Install the latest version of the ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/sdk/cli",children:"Clarifai CLI"})," (Command Line Interface) tool. We'll use this tool to test models in the local development environment."]}),"\n",(0,r.jsx)(o.A,{groupId:"code",children:(0,r.jsx)(s.A,{value:"bash",label:"Bash",children:(0,r.jsx)(i.A,{className:"language-bash",children:" pip install --upgrade clarifai "})})}),"\n",(0,r.jsx)(t.h3,{id:"set-up-docker-or-a-virtual-environment",children:"Set up Docker or a Virtual Environment"}),"\n",(0,r.jsxs)(t.p,{children:["Set up either a Docker container (recommended) or a Python virtual ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/compute/models/model-upload/#set-up-docker-or-a-virtual-environment",children:"local development environment"})," for testing the model locally. This ensures proper dependency management and prevents conflicts in your project."]}),"\n",(0,r.jsxs)(l,{children:[(0,r.jsx)("summary",{children:"CLI Flags"}),(0,r.jsx)(t.p,{children:"These are the key CLI flags available for local testing and running your models:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"--mode"})," \u2014  Specify how to run the model: ",(0,r.jsx)(t.code,{children:"env"})," for virtual environment or ",(0,r.jsx)(t.code,{children:"container"})," for Docker container. Defaults to ",(0,r.jsx)(t.code,{children:"env"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"-p"})," or ",(0,r.jsx)(t.code,{children:"--port"})," \u2014  The port to host the gRPC server for running the model locally. Defaults to ",(0,r.jsx)(t.code,{children:"8000"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"--keep_env"})," \u2014  Retain the virtual environment after testing the model locally (applicable for ",(0,r.jsx)(t.code,{children:"env"})," mode). Defaults to ",(0,r.jsx)(t.code,{children:"False"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"--keep_image"})," \u2014  Retain the Docker image built after testing the model locally (applicable for ",(0,r.jsx)(t.code,{children:"container"})," mode). Defaults to ",(0,r.jsx)(t.code,{children:"False"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"--skip_dockerfile"})," \u2014 Flag to skip generating a dockerfile so that you can manually edit an already created dockerfile."]}),"\n"]})]}),"\n",(0,r.jsx)(t.h2,{id:"test-by-running-locally",children:"Test by Running Locally"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"local-test"})," method allows you to test your model with a single CLI command. It runs the model locally and sends a sample request to verify that the model responds successfully."]}),"\n",(0,r.jsx)(t.p,{children:"The results of the request are displayed directly in the console."}),"\n",(0,r.jsxs)(t.p,{children:["Note that to test your model locally, you need to implement a ",(0,r.jsx)(t.code,{children:"test"})," method in the ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/compute/models/upload/#step-1-prepare-the-modelpy-file",children:(0,r.jsx)(t.code,{children:"model.py"})})," file. This method should internally call other model methods to perform validation."]}),"\n",(0,r.jsxs)(t.p,{children:["When you run the ",(0,r.jsx)(t.code,{children:"local-test"})," CLI command shown below, it will automatically invoke the ",(0,r.jsx)(t.code,{children:"test"})," method to carry out the testing process."]}),"\n",(0,r.jsxs)(t.p,{children:["Below is a sample ",(0,r.jsx)(t.code,{children:"model.py"})," file with an example implementation of the ",(0,r.jsx)(t.code,{children:"test"})," method:"]}),"\n",(0,r.jsx)(o.A,{groupId:"code",children:(0,r.jsx)(s.A,{value:"python",label:"Python",children:(0,r.jsx)(i.A,{className:"language-python",children:c})})}),"\n",(0,r.jsxs)(t.admonition,{title:"How to specify Local Model Path",type:"note",children:[(0,r.jsxs)(t.p,{children:["You can specify the path to the directory containing the custom model you want to test. For example, if your model's files are stored in ",(0,r.jsx)(t.code,{children:"./examples/models/clarifai_llama"}),", use the following command:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"clarifai model local-test ./examples/models/clarifai_llama --mode container\n"})}),(0,r.jsx)(t.p,{children:"If you don\u2019t specify a path, the current directory is used by default. In that case, simply navigate to the directory and run:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"clarifai model local-test --mode container\n"})})]}),"\n",(0,r.jsx)(t.p,{children:"Here is how to test a model in a Docker Container:"}),"\n",(0,r.jsx)(o.A,{groupId:"code",children:(0,r.jsx)(s.A,{value:"bash",label:"Bash",children:(0,r.jsx)(i.A,{className:"language-bash",children:" clarifai model local-test --mode container "})})}),"\n",(0,r.jsx)(t.p,{children:"Here is how to test a model in a virtual environment:"}),"\n",(0,r.jsx)(o.A,{groupId:"code",children:(0,r.jsx)(s.A,{value:"bash",label:"Bash",children:(0,r.jsx)(i.A,{className:"language-bash",children:" clarifai model local-test --mode env "})})}),"\n",(0,r.jsx)(t.h2,{id:"test-by-starting-a-grpc-server",children:"Test by Starting a gRPC Server"}),"\n",(0,r.jsxs)(t.p,{children:["The  ",(0,r.jsx)(t.code,{children:"local-grpc"})," method starts a local gRPC server at ",(0,r.jsx)(t.code,{children:"https://localhost:{port}/"})," for running the model. Once the server is running, you can perform inference on the model via the Clarifai Python SDK."]}),"\n",(0,r.jsx)(t.p,{children:"Here is how to test a model in a Docker Container:"}),"\n",(0,r.jsx)(o.A,{groupId:"code",children:(0,r.jsx)(s.A,{value:"bash",label:"Bash",children:(0,r.jsx)(i.A,{className:"language-bash",children:" clarifai model local-grpc --mode container --port 8000 "})})}),"\n",(0,r.jsx)(t.p,{children:"Here is how to test a model in a virtual environment:"}),"\n",(0,r.jsx)(o.A,{groupId:"code",children:(0,r.jsx)(s.A,{value:"bash",label:"Bash",children:(0,r.jsx)(i.A,{className:"language-bash",children:" clarifai model local-grpc --mode env --port 8000  "})})}),"\n",(0,r.jsx)(t.h3,{id:"make-inference-requests",children:"Make Inference Requests"}),"\n",(0,r.jsxs)(t.p,{children:["Once the model is running locally, you need to configure the ",(0,r.jsx)(t.code,{children:"CLARIFAI_API_BASE"})," environment variable to point to the localhost and port where the gRPC server is running."]}),"\n",(0,r.jsxs)(o.A,{groupId:"code",children:[(0,r.jsx)(s.A,{value:"bash",label:"Unix-Like Systems",children:(0,r.jsxs)(i.A,{className:"language-bash",children:[' export CLARIFAI_API_BASE="localhost',":add-port-here",'" ']})}),(0,r.jsx)(s.A,{value:"bash2",label:"Windows",children:(0,r.jsxs)(i.A,{className:"language-bash",children:[' set CLARIFAI_API_BASE="localhost',":add-port-here",'" ']})})]}),"\n",(0,r.jsxs)(t.p,{children:["You can then make ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/compute/models/inference/api",children:"inference requests"})," using the model."]})]})}function f(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);