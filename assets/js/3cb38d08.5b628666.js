"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[5956],{2233:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>L,contentTitle:()=>x,default:()=>k,frontMatter:()=>v,metadata:()=>s,toc:()=>w});const s=JSON.parse('{"id":"integrations/LiteLLM/clarifai-litellm","title":"Using Clarifai Models In LiteLLM","description":"Learn how to use Clarifai Models in LiteLLM","source":"@site/docs/integrations/LiteLLM/clarifai-litellm.md","sourceDirName":"integrations/LiteLLM","slug":"/integrations/LiteLLM/clarifai-litellm","permalink":"/integrations/LiteLLM/clarifai-litellm","draft":false,"unlisted":false,"editUrl":"https://github.com/Clarifai/docs/blob/main/docs/integrations/LiteLLM/clarifai-litellm.md","tags":[],"version":"current","frontMatter":{"pagination_next":null},"sidebar":"tutorialSidebar","previous":{"title":"LiteLLM Clarifai Integration","permalink":"/integrations/LiteLLM/"}}');var a=t(74848),o=t(28453),i=t(65537),r=t(79329),l=t(58069);const c='from litellm import completion\n\nmessages = [{"role": "user","content": """Write a poem about history?"""}]\n# Using LLM from Clarifai Platform\nresponse=completion(\n            model="clarifai/mistralai.completion.mistral-large",\n            messages=messages,\n        )\n\nprint(f"Mistral large response : {response}")',h='from litellm import completion\n\nmessages = [{"role": "user","content": """Write a poem about history?"""}]\nresponse=completion(\n            model="clarifai/anthropic.completion.claude-2_1",\n            messages=messages,\n        )\n\nprint(f"Claude-2.1 response : {response}")',d='from litellm import completion\n\nmessages = [{"role": "user","content": """Write a poem about history?"""}]\nresponse = completion(\n                model="clarifai/openai.chat-completion.GPT-4",\n                messages=messages,\n                stream=True,\n                api_key = "OpenAI_API_KEY")\n\nfor chunk in response:\n  print(chunk)',u='from litellm import acompletion\nasync def test_get_response():\n    user_message = "Hello, how are you?"\n    messages = [{"content": user_message, "role": "user"}]\n    response = await acompletion(model="clarifai/openai.chat-completion.GPT-4", messages=messages, api_key="OpenAI_API_KEY")\n    return response\n\nresponse = await test_get_response()\nprint(response)',p='from litellm import acompletion\nimport asyncio, os, traceback\n\nasync def completion_call():\n    try:\n        print("test acompletion + streaming")\n        response = await acompletion(\n            model="clarifai/mistralai.completion.mistral-large", \n            messages=[{"content": "Hello, how are you?", "role": "user"}], \n            stream=True\n        )\n        print(f"response: {response}")\n        async for chunk in response:\n            print(chunk)\n    except:\n        print(f"error occurred: {traceback.format_exc()}")\n        pass\n\nawait completion_call()',m="Mistral large response : ModelResponse(id='chatcmpl-6eed494d-7ae2-4870-b9c2-6a64d50a6151', choices=[Choices\n(finish_reason='stop', index=1, message=Message(content=\"In the grand tapestry of time, where tales unfold,\\nLies the chronicle of ages, a sight to behold.\\nA tale of empires rising, and kings of old,\\nOf civilizations lost, and stories untold.\\n\\nOnce upon a yesterday, in a time so vast,\\nHumans took their first steps, \ncasting shadows in the past.\\nFrom the cradle of mankind, a journey they embarked,\\nThrough stone and bronze and iron, their skills they sharpened and marked.\\n\\nEgyptians built pyramids, reaching for the skies,\\nWhile Greeks sought wisdom, truth, in philosophies that lie.\\nRoman legions marched, their empire to expand,\\nAnd in the East, the Silk Road joined the world, hand in hand.\\n\\nThe Middle Ages came, \nwith knights in shining armor,\\nFeudal lords and serfs, a time of both clamor and calm order.\\nThen Renaissance bloomed, like a flower in the sun,\\nA rebirth of art and science, a new age had begun.\\n\\nAcross the vast oceans, explorers sailed with courage bold,\\nDiscovering new lands, stories of adventure, untold.\\nIndustrial Revolution churned, progress in its wake,\\nMachines and factories, a whole new world to make.\\n\\nTwo World Wars raged, a testament to man's strife,\\nYet from the ashes rose hope, a renewed will for life.\\nInto the modern era, technology took flight,\\nConnecting every corner, bathed in digital light.\\n\\nHistory, a symphony, a melody of time,\\nA testament to human will, resilience so sublime.\\nIn every page, a lesson, in every tale, a guide,\\nFor understanding our past, shapes our future's tide.\", role='assistant'))], created=1713896412, model='https://api.clarifai.com/v2/users/mistralai/apps/completion/models/mistral-large/outputs', object='chat.completion', system_fingerprint=None, usage=Usage(prompt_tokens=13, completion_tokens=338, total_tokens=351))",f="Claude-2.1 response : ModelResponse(id='chatcmpl-d126c919-4db4-4aa3-ac8f-7edea41e0b93', choices=[Choices(finish_reason='stop', index=1, message=Message\n(content=\" Here's a poem I wrote about history:\\n\\nThe Tides of Time\\n\\nThe tides of time ebb and flow,\\nCarrying stories of long ago.\\nFigures and events \ncome into light,\\nShaping the future with all their might.\\n\\nKingdoms rise, empires fall, \\nLeaving traces that echo down every hall.\\nRevolutions bring change with a fiery glow,\\nToppling structures from long ago.\\n\\nExplorers traverse each ocean and\nland,\\nSeeking treasures they don't understand.\\nWhile artists and writers try to make their mark,\\nHoping their works shine bright in the dark.\\n\\nThe cycle repeats again and again,\\nAs humanity struggles to learn from its pain.\\nThough the players may change on history's stage,\\nThe themes stay the same from age to age.\\n\\nWar and peace, life and death,\\nLove and strife with every breath.\\nThe tides of time continue their dance,\\nAs we join in, by luck or by chance.\\n\\nSo we study the past to light the way forward, \\nHeeding warnings from stories told and heard.\\nThe future unfolds from this unending flow -\\nWhere the tides of time ultimately go.\", role='assistant'))], created=1713896579, model='https://api.clarifai.com/v2/users/anthropic/apps/completion/models/claude-2_1/outputs', object='chat.completion', system_fingerprint=None, usage=Usage(prompt_tokens=12, completion_tokens=232, total_tokens=244))",g="ModelResponse(id='chatcmpl-40ae19af-3bf0-4eb4-99f2-33aec3ba84af', choices=[StreamingChoices(finish_reason=None, index=0, delta=Delta(content=\"In the quiet corners \nof time's grand hall,\\nLies the tale of rise and fall.\\nFrom ancient \nruins to modern sprawl,\\nHistory, the greatest story of them all.\\n\\nEmpires have risen, empires have decayed,\\nThrough the eons, memories have stayed.\\nIn the book of time, history is laid,\\nA tapestry of events, meticulously displayed.\\n\\nThe pyramids of Egypt, standing tall,\\nThe Roman Empire's mighty sprawl.\\nFrom Alexander's conquest, to the Berlin Wall,\\nHistory, a silent witness to it all.\\n\\nIn the shadow of the past we tread,\\nWhere once kings and prophets led.\\nTheir stories in our hearts are spread,\\nEchoes of their words, in our minds are read.\\n\\nBattles fought and victories won,\\nActs of courage under the sun.\\nTales of love, of deeds done,\\nIn history's grand book, they all run.\\n\\nHeroes born, legends made,\\nIn the annals of time, they'll never fade.\\nTheir triumphs and failures all displayed,\\nIn the eternal march of history's parade.\\n\\nThe ink of the past is forever dry,\\nBut its lessons, we cannot deny.\\nIn its stories, truths lie,\\nIn its wisdom, we rely.\\n\\nHistory, a mirror to our past,\\nA guide for the future vast.\\nThrough its lens, we're ever cast,\\nIn the drama of life, forever vast.\", role='assistant', function_call=None, tool_calls=None), logprobs=None)], created=1714744515, model='https://api.clarifai.com/v2/users/openai/apps/chat-completion/models/GPT-4/outputs', object='chat.completion.chunk', system_fingerprint=None)\nModelResponse(id='chatcmpl-40ae19af-3bf0-4eb4-99f2-33aec3ba84af', choices=[StreamingChoices(finish_reason='stop', index=0, delta=Delta(content=None, role=None, function_call=None, tool_calls=None), logprobs=None)], created=1714744515, model='https://api.clarifai.com/v2/users/openai/apps/chat-completion/models/GPT-4/outputs', object='chat.completion.chunk', system_fingerprint=None)",y="ModelResponse(id='chatcmpl-095f1f4f-66b0-4f1f-988d-159a809f0c9c', choices=[Choices(finish_reason='stop', index=1, message=Message(content=\"Hello! As an artificial intelligence, \nI don't have feelings, but I'm here and ready to assist you. How can I help you today?\", role='assistant'))], \ncreated=1717782689, model='https://api.clarifai.com/v2/users/openai/apps/chat-completion/models/GPT-4/outputs', object='chat.completion', system_fingerprint=None, usage=Usage(prompt_tokens=6, completion_tokens=30, total_tokens=36))",b="test acompletion + streaming\nresponse: <litellm.utils.CustomStreamWrapper object at 0x7e7b640d5250>\nModelResponse(id='chatcmpl-d70421b5-9701-4ed1-8926-09ccd79abd25', choices=[StreamingChoices(finish_reason=None, \nindex=0, delta=Delta(content=\"Hello! I'm an assistant designed to help answer your questions and provide information, so I don't have feelings, but I'm here and ready to assist you. How can I help you today?\", role='assistant', function_call=None, tool_calls=None), logprobs=None)], created=1718733588, model='https://api.clarifai.com/v2/users/mistralai/apps/completion/models/mistral-large/outputs', object='chat.completion.chunk', system_fingerprint=None)\nModelResponse(id='chatcmpl-d70421b5-9701-4ed1-8926-09ccd79abd25', \nchoices=[StreamingChoices(finish_reason='stop', index=0, delta=Delta(content=None, role=None, function_call=None, tool_calls=None), logprobs=None)], created=1718733588, model='https://api.clarifai.com/v2/users/mistralai/apps/completion/models/mistral-large/outputs', object='chat.completion.chunk', system_fingerprint=None)",v={pagination_next:null},x="Using Clarifai Models In LiteLLM",L={},w=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Completion",id:"completion",level:2},{value:"Streaming",id:"streaming",level:2},{value:"Async Completion",id:"async-completion",level:2},{value:"Async Streaming",id:"async-streaming",level:2}];function j(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"using-clarifai-models-in-litellm",children:"Using Clarifai Models In LiteLLM"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Learn how to use Clarifai Models in LiteLLM"})}),"\n",(0,a.jsx)("hr",{}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://www.litellm.ai/",children:"LiteLLM"})," allows you to interact with LLM models from different providers. One such provider is Clarifai. Using LiteLLM users can easily use hosted LLM models in the Clarifai platform. Now let\u2019s look at how you can use Clarifai LLMs through LiteLLM."]}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Setting up the Clarifai Python SDK along with PAT. Refer to the installation and configuration with the PAT token ",(0,a.jsx)(n.a,{href:"https://docs.clarifai.com/python-sdk/sdk-overview/",children:"here"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Guide to get your ",(0,a.jsx)(n.a,{href:"https://docs.clarifai.com/clarifai-basics/authentication/personal-access-tokens",children:"PAT"})]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import os\n#Replace your PAT\nos.environ['CLARIFAI_PAT'] =\"YOUR_PAT\"\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Install the required packages."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"!pip install litellm\n!pip install clarifai\n"})}),"\n",(0,a.jsx)(n.h2,{id:"completion",children:"Completion"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"completion"})," method is the core functionality of LiteLLM for interacting with large language models (LLMs) and generating text. It provides a standardized way to send prompts to various LLMs and retrieve the generated responses. You can set the ",(0,a.jsx)(n.code,{children:"model"})," field as a model URL from the Clarifai platform."]}),"\n",(0,a.jsxs)(n.p,{children:["Click ",(0,a.jsx)(n.a,{href:"https://litellm.vercel.app/docs/completion",children:"here"})," to learn more about completion in LiteLLM."]}),"\n",(0,a.jsxs)(n.p,{children:["In the example given below, we are going to chat with the ",(0,a.jsx)(n.code,{children:"Mistral-Large"})," model from Clarifai."]}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsx)(r.A,{value:"python",label:"Python",children:(0,a.jsx)(l.A,{className:"language-python",children:c})})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(l.A,{className:"language-python",children:m})]}),"\n",(0,a.jsxs)(n.p,{children:["Now let\u2019s ask the same question to ",(0,a.jsx)(n.code,{children:"Claude-2.1"})," model.  Claude models require special tokens as input. Therefore by using LiteLLM we are standardizing the inputs for LLM applications."]}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsx)(r.A,{value:"python",label:"Python",children:(0,a.jsx)(l.A,{className:"language-python",children:h})})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(l.A,{className:"language-python",children:f})]}),"\n",(0,a.jsx)(n.p,{children:"If you observe the above outputs, the response format from both the models is the same even though they are different LLMs. This is one of the advantages of LiteLLM."}),"\n",(0,a.jsx)(n.h2,{id:"streaming",children:"Streaming"}),"\n",(0,a.jsx)(n.p,{children:"When using streaming, the completion method no longer returns a single dictionary with all the responses. Instead, it returns an iterator that yields dictionaries containing partial information as the LLM generates the response."}),"\n",(0,a.jsxs)(n.p,{children:["Click ",(0,a.jsx)(n.a,{href:"https://litellm.vercel.app/docs/completion/stream#streaming-responses",children:"here"})," to learn more about streaming in LiteLLM."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"Set stream=True as an argument to the completion function."})}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsx)(r.A,{value:"python",label:"Python",children:(0,a.jsx)(l.A,{className:"language-python",children:d})})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(l.A,{className:"language-python",children:g})]}),"\n",(0,a.jsx)(n.h2,{id:"async-completion",children:"Async Completion"}),"\n",(0,a.jsx)(n.p,{children:"Async completion in LiteLLM uses asynchronous capabilities to handle language model completions efficiently. By using async function, LiteLLM can perform non-blocking I/O operations, making it well-suited for applications that require responsive and scalable interactions with language models."}),"\n",(0,a.jsxs)(n.p,{children:["Click ",(0,a.jsx)(n.a,{href:"https://litellm.vercel.app/docs/completion/stream#async-completion",children:"here"})," to learn more about async completion in LiteLLM."]}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsx)(r.A,{value:"python",label:"Python",children:(0,a.jsx)(l.A,{className:"language-python",children:u})})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(l.A,{className:"language-python",children:y})]}),"\n",(0,a.jsx)(n.h2,{id:"async-streaming",children:"Async Streaming"}),"\n",(0,a.jsx)(n.p,{children:"Async streaming in LiteLLM refers to the process of handling real-time data streams asynchronously when interacting with language models. This is particularly useful for applications that need to process data as it arrives without waiting for the entire response, such as chatbots, real-time data processing systems, or live user interactions."}),"\n",(0,a.jsxs)(n.p,{children:["Click ",(0,a.jsx)(n.a,{href:"https://litellm.vercel.app/docs/completion/stream#async-streaming",children:"here"})," to learn more about async streaming in LiteLLM."]}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsx)(r.A,{value:"python",label:"Python",children:(0,a.jsx)(l.A,{className:"language-python",children:p})})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(l.A,{className:"language-python",children:b})]})]})}function k(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(j,{...e})}):j(e)}},65537:(e,n,t)=>{t.d(n,{A:()=>w});var s=t(96540),a=t(18215),o=t(65627),i=t(56347),r=t(50372),l=t(30604),c=t(11861),h=t(78749);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:a}}=e;return{value:n,label:t,attributes:s,default:a}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(o),(0,s.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=u(e),[i,l]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:o}))),[c,d]=m({queryString:t,groupId:a}),[f,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,h.Dv)(t);return[a,(0,s.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),y=(()=>{const e=c??f;return p({value:e,tabValues:o})?e:null})();(0,r.A)((()=>{y&&l(y)}),[y]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),g(e)}),[d,g,o]),tabValues:o}}var g=t(9136);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function v(e){let{className:n,block:t,selectedValue:s,selectValue:i,tabValues:r}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),h=e=>{const n=e.currentTarget,t=l.indexOf(n),a=r[t].value;a!==s&&(c(n),i(a))},d=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:r.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{l.push(e)},onKeyDown:d,onClick:h,...o,className:(0,a.A)("tabs__item",y.tabItem,o?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:o}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===o));return e?(0,s.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function L(e){const n=f(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",y.tabList),children:[(0,b.jsx)(v,{...n,...e}),(0,b.jsx)(x,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,b.jsx)(L,{...e,children:d(e.children)},String(n))}},79329:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var s=t(18215);const a={tabItem:"tabItem_Ymn6"};var o=t(74848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,s.A)(a.tabItem,i),hidden:t,children:n})}}}]);