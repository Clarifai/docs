"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[2724],{80350:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>u,contentTitle:()=>c,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=r(74848),s=r(28453),i=r(3514),a=r(84142);const o={},c="Integrating Unstructred.io with Clarifai",l={id:"integrations/unstructured/README",title:"Integrating Unstructred.io with Clarifai",description:"Learn how to use Unstructured along with Clarifai SDKs",source:"@site/docs/integrations/unstructured/README.mdx",sourceDirName:"integrations/unstructured",slug:"/integrations/unstructured/",permalink:"/integrations/unstructured/",draft:!1,unlisted:!1,editUrl:"https://github.com/Clarifai/docs/blob/main/docs/integrations/unstructured/README.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using Clarifai Models In LiteLLM",permalink:"/integrations/LiteLLM/clarifai-litellm"},next:{title:"Data Ingestion Using Unstructured.io",permalink:"/integrations/unstructured/data-ingestion"}},u={},d=[];function m(t){const e={a:"a",h1:"h1",p:"p",strong:"strong",...(0,s.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"integrating-unstructredio-with-clarifai",children:"Integrating Unstructred.io with Clarifai"}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:"Learn how to use Unstructured along with Clarifai SDKs"})}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:"https://unstructured.io",children:"Unstructured.io"})," tackles a common challenge in large language models (LLMs):  transforming raw data into a format LLMs can understand and process effectively. It is a data ETL (Extract, Transform, Load) platform designed for LLMs. Unstructured.io is a data ingestion powerhouse as it can ingest various data formats. It acts as a central hub, regardless of where your data resides ie.  local machines, cloud storage, or databases. It also provides connectors and libraries to simplify data access from various sources. You can configure it to retrieve the data your LLMs need seamlessly.  Unstructured.io goes beyond simply moving data. It offers tools and libraries to transform raw data into a structured format suitable for LLM consumption. By integrating Clarifai into Unstructred.io, users gain access to Clarifai's capabilities ie.  it can ingest and store unstructured data into Clarifai vectorDB and call LLMs from the Clarifai platform."]}),"\n","\n",(0,n.jsx)(i.A,{items:(0,a.$S)().items})]})}function f(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(m,{...t})}):m(t)}},3514:(t,e,r)=>{r.d(e,{A:()=>w});r(96540);var n=r(18215),s=r(84142),i=r(28774),a=r(53465),o=r(16654),c=r(21312),l=r(51107);const u={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var d=r(74848);function m(t){let{href:e,children:r}=t;return(0,d.jsx)(i.A,{href:e,className:(0,n.A)("card padding--lg",u.cardContainer),children:r})}function f(t){let{href:e,icon:r,title:s,description:i}=t;return(0,d.jsxs)(m,{href:e,children:[(0,d.jsxs)(l.A,{as:"h2",className:(0,n.A)("text--truncate",u.cardTitle),title:s,children:[r," ",s]}),i&&(0,d.jsx)("p",{className:(0,n.A)("text--truncate",u.cardDescription),title:i,children:i})]})}function h(t){let{item:e}=t;const r=(0,s.Nr)(e),n=function(){const{selectMessage:t}=(0,a.W)();return e=>t(e,(0,c.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:e}))}();return r?(0,d.jsx)(f,{href:r,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:e.description??n(e.items.length)}):null}function g(t){let{item:e}=t;const r=(0,o.A)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,s.cC)(e.docId??void 0);return(0,d.jsx)(f,{href:e.href,icon:r,title:e.label,description:e.description??n?.description})}function p(t){let{item:e}=t;switch(e.type){case"link":return(0,d.jsx)(g,{item:e});case"category":return(0,d.jsx)(h,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}function x(t){let{className:e}=t;const r=(0,s.$S)();return(0,d.jsx)(w,{items:r.items,className:e})}function w(t){const{items:e,className:r}=t;if(!e)return(0,d.jsx)(x,{...t});const i=(0,s.d1)(e);return(0,d.jsx)("section",{className:(0,n.A)("row",r),children:i.map(((t,e)=>(0,d.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,d.jsx)(p,{item:t})},e)))})}},53465:(t,e,r)=>{r.d(e,{W:()=>l});var n=r(96540),s=r(44586);const i=["zero","one","two","few","many","other"];function a(t){return i.filter((e=>t.includes(e)))}const o={locale:"en",pluralForms:a(["one","other"]),select:t=>1===t?"one":"other"};function c(){const{i18n:{currentLocale:t}}=(0,s.A)();return(0,n.useMemo)((()=>{try{return function(t){const e=new Intl.PluralRules(t);return{locale:t,pluralForms:a(e.resolvedOptions().pluralCategories),select:t=>e.select(t)}}(t)}catch(e){return console.error(`Failed to use Intl.PluralRules for locale "${t}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${e.message}\n`),o}}),[t])}function l(){const t=c();return{selectMessage:(e,r)=>function(t,e,r){const n=t.split("|");if(1===n.length)return n[0];n.length>r.pluralForms.length&&console.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${n.length}: ${t}`);const s=r.select(e),i=r.pluralForms.indexOf(s);return n[Math.min(i,n.length-1)]}(r,e,t)}}},28453:(t,e,r)=>{r.d(e,{R:()=>a,x:()=>o});var n=r(96540);const s={},i=n.createContext(s);function a(t){const e=n.useContext(i);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:a(t.components),n.createElement(i.Provider,{value:e},t.children)}}}]);