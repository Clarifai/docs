"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[876],{6458:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>c});var t=i(74848),o=i(28453);const d={description:"Learn about deprecation of `closed_environment`",sidebar_position:-4},s="Deprecation of closed_environment in favor of enrich_dataset",a={id:"product-updates/upcoming-api-changes/closed-environment",title:"Deprecation of closed_environment in favor of enrich_dataset",description:"Learn about deprecation of `closed_environment`",source:"@site/docs/product-updates/upcoming-api-changes/closed-environment.md",sourceDirName:"product-updates/upcoming-api-changes",slug:"/product-updates/upcoming-api-changes/closed-environment",permalink:"/product-updates/upcoming-api-changes/closed-environment",draft:!1,unlisted:!1,editUrl:"https://github.com/Clarifai/docs/blob/main/docs/product-updates/upcoming-api-changes/closed-environment.md",tags:[],version:"current",sidebarPosition:-4,frontMatter:{description:"Learn about deprecation of `closed_environment`",sidebar_position:-4},sidebar:"tutorialSidebar",previous:{title:"Changes to Workflow Builder Model IDs",permalink:"/product-updates/upcoming-api-changes/workflow-builder-ids"},next:{title:"Updates to Model and Model Version Endpoints",permalink:"/product-updates/upcoming-api-changes/model-version-endpoints"}},r={},c=[{value:"Date",id:"date",level:2},{value:"Change",id:"change",level:2},{value:"Details",id:"details",level:2}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"deprecation-of-closed_environment-in-favor-of-enrich_dataset",children:["Deprecation of ",(0,t.jsx)(n.code,{children:"closed_environment"})," in favor of ",(0,t.jsx)(n.code,{children:"enrich_dataset"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Learn about deprecation of ",(0,t.jsx)(n.code,{children:"closed_environment"})]})}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsx)(n.h2,{id:"date",children:"Date"}),"\n",(0,t.jsx)(n.p,{children:"January 26th, 2023"}),"\n",(0,t.jsx)(n.h2,{id:"change",children:"Change"}),"\n",(0,t.jsxs)(n.p,{children:["Deprecation of ",(0,t.jsx)(n.code,{children:"closed_environment"})," in favor of ",(0,t.jsx)(n.code,{children:"enrich_dataset"})," for creating embedding-classifier models"]}),"\n",(0,t.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,t.jsxs)(n.p,{children:["When using the ",(0,t.jsx)(n.strong,{children:"PostModels"})," endpoint to create a custom embedding-classifier model, you could include the ",(0,t.jsx)(n.code,{children:"closed_environment"})," variable, as part of the ",(0,t.jsx)(n.code,{children:"modelVersion.OutputInfo.OutputConfig"})," struct."]}),"\n",(0,t.jsx)(n.p,{children:"The variable accepted a Boolean value and specified whether a pre-stored dataset, of (usually) negative embeddings, should be added to the training process of your model. This generally leads to higher model accuracy without any additional effort on your end."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"closed_environment"})," was set to ",(0,t.jsx)(n.code,{children:"False"}),", which was the default action, we would try to use additional negative embeddings during the training process. ",(0,t.jsx)(n.em,{children:"However, the default action would fail if the underlying base model did not have negative embeddings."})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If it was set to ",(0,t.jsx)(n.code,{children:"True"}),", it meant that the user wanted a closed environment for the training and therefore we did not add additional negative embeddings. This worked for all embedding models."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["We plan to replace it with ",(0,t.jsx)(n.code,{children:"enrich_dataset"})," that is specified inside ",(0,t.jsx)(n.code,{children:"modelVersion.TrainInfo.Params"})," when creating embedding-classifiers, which is the only type of model that supports it."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"enrich_dataset"})," variable will be implemented as an ",(0,t.jsx)(n.code,{children:"ENUM"})," instead of a ",(0,t.jsx)(n.code,{children:"BOOL"})," so that it can have two options: ",(0,t.jsx)(n.code,{children:"Automatic"})," (default) and ",(0,t.jsx)(n.code,{children:"Disabled"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Automatic"})," means that if there are negative embeddings for a base model, we will use them\u2014and we won\u2019t use them if they\u2019re not available. ",(0,t.jsx)(n.em,{children:"So, the training will not fail if the underlying embeddings do not have negative embeddings."})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Disabled"})," means that we should not use the negative embeddings whether they are available or not."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["That way, ",(0,t.jsx)(n.code,{children:"enrich_dataset"})," fixes the problem with ",(0,t.jsx)(n.code,{children:"closed_environment"}),". Previously, setting the ",(0,t.jsx)(n.code,{children:"closed_environment"})," variable to ",(0,t.jsx)(n.code,{children:"False"})," (the default value) would fail if the base model didn\u2019t have the negatives for it."]}),"\n",(0,t.jsxs)(n.p,{children:["This change will also affect the ",(0,t.jsx)(n.strong,{children:"PostModelVersions"})," endpoint."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var t=i(96540);const o={},d=t.createContext(o);function s(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);