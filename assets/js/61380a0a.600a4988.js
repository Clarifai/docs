"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[6521],{43789:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>A,contentTitle:()=>v,default:()=>_,frontMatter:()=>y,metadata:()=>a,toc:()=>C});const a=JSON.parse('{"id":"additional-resources/api-overview/cli","title":"Clarifai CLI","description":"Learn how to use the Clarifai Command Line Interface (CLI)","source":"@site/docs/additional-resources/api-overview/cli.md","sourceDirName":"additional-resources/api-overview","slug":"/additional-resources/api-overview/cli","permalink":"/additional-resources/api-overview/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/Clarifai/docs/blob/main/docs/additional-resources/api-overview/cli.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"description":"Learn how to use the Clarifai Command Line Interface (CLI)","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Node.js SDK","permalink":"/additional-resources/api-overview/nodejs-sdk"},"next":{"title":"gRPC API Clients","permalink":"/additional-resources/api-overview/grpc-clients"}}');var i=t(74848),r=t(28453),s=t(65537),l=t(79329),o=t(58069);const c='user_id: "YOUR_USER_ID_HERE"\npat: "YOUR_PAT_HERE"  \nbase_url: "https://api.clarifai.com"',d="Usage: clarifai model predict [OPTIONS]\n\n  Predict using the given model\n\nOptions:\n  --config PATH                   Path to the model predict config file.\n  --model_id TEXT                 Model ID of the model used to predict.\n  --user_id TEXT                  User ID of the model used to predict.\n  --app_id TEXT                   App ID of the model used to predict.\n  --model_url TEXT                Model URL of the model used to predict.\n  --file_path TEXT                File path of file for the model to predict\n  --url TEXT                      URL to the file for the model to predict\n  --bytes TEXT                    Bytes to the file for the model to predict\n  --input_id TEXT                 Existing input id in the app for the model\n                                  to predict\n  --input_type TEXT               Type of input\n  -cc_id, --compute_cluster_id TEXT\n                                  Compute Cluster ID to use for the model\n  -np_id, --nodepool_id TEXT      Nodepool ID to use for the model\n  -dpl_id, --deployment_id TEXT   Deployment ID to use for the model\n  --inference_params TEXT         Inference parameters to override\n  --output_config TEXT            Output config to override\n  --help                          Show this message and exit.\n",u='clarifai model predict --model_id claude-v2 --user_id anthropic --app_id completion --bytes "Human: Write a tweet on future of AI\\nAssistant:" --input_type text\n',h='status {\n  code: SUCCESS\n  description: "Ok"\n  req_id: "sdk-python-11.0.5-ee8ff730ab144888b6062a6b5ece6d1b"\n}\noutputs {\n  id: "dddb6616ba594f41abf77dd8f35b351d"\n  status {\n    code: SUCCESS\n    description: "Ok"\n  }\n  created_at {\n    seconds: 1737623976\n    nanos: 884184949\n  }\n  model {\n    id: "claude-v2"\n    name: "claude-v2"\n    created_at {\n      seconds: 1689360584\n      nanos: 718730000\n    }\n    app_id: "completion"\n    model_version {\n      id: "f39db57922eb48188cf41a26660aaf74"\n      created_at {\n        seconds: 1706762592\n        nanos: 463521000\n      }\n      status {\n        code: MODEL_TRAINED\n        description: "Model is trained and ready"\n      }\n      completed_at {\n        seconds: 1706762763\n        nanos: 246861000\n      }\n      visibility {\n        gettable: PUBLIC\n      }\n      app_id: "completion"\n      user_id: "anthropic"\n      metadata {\n      }\n    }\n    user_id: "anthropic"\n    model_type_id: "text-to-text"\n    visibility {\n      gettable: PUBLIC\n    }\n    modified_at {\n      seconds: 1729160329\n      nanos: 739032000\n    }\n    workflow_recommended {\n    }\n    image {\n      url: "https://data.clarifai.com/large/users/anthropic/apps/completion/inputs/image/b9d666a9e16a31c8bbbf6da89cceb804"\n      hosted {\n        prefix: "https://data.clarifai.com"\n        suffix: "users/anthropic/apps/completion/inputs/image/b9d666a9e16a31c8bbbf6da89cceb804"\n        sizes: "small"\n        sizes: "large"\n        crossorigin: "use-credentials"\n      }\n    }\n    license_type: CLOSED_SOURCE\n    source: WRAPPED\n    creator: "anthropic"\n  }\n  input {\n    id: "13cf01b7817e4b38a0c7d140a3ce0755"\n    data {\n      text {\n        raw: "Human: Write a tweet on future of AI\\\\nAssistant:"\n        url: "https://samples.clarifai.com/placeholder.gif"\n      }\n    }\n  }\n  data {\n    text {\n      raw: " Here\\\'s a draft 280 character tweet on the future of AI:\\n\\nThe future of AI holds tremendous promise. As algorithms continue improving, AI will transform industries from healthcare to transportation. But we must ensure AI develops safely and ethically, prioritizing human wellbeing over profits or progress at any cost. Together, through foresight and care, we can build an AI-powered world that benefits all."\n      text_info {\n        encoding: "UnknownTextEnc"\n      }\n    }\n  }\n}\n',p="clarifai model predict --model_id claude-v2 --user_id anthropic --app_id completion --file_path <add-predict-filepath-here> --input_type text",m="clarifai model predict --model_id llama2-7b-chat --user_id meta --app_id Llama-2 --url https://samples.clarifai.com/featured-models/llama2-prompt3.txt --input_type text",f='clarifai model predict --model_url https://clarifai.com/anthropic/completion/models/claude-v2 --bytes "Human: Write a tweet on future of AI\\nAssistant:" --input_type text\n',g='model_url: "https://clarifai.com/anthropic/completion/models/claude-v2"\nbytes: "Human: Write a tweet on future of AI\\nAssistant:"\ninput_type: "text"',x="clarifai model predict --config <add-config-filepath-here>",b='clarifai model predict --model_url https://clarifai.com/openai/whisper/models/whisper-large-v2 --url https://s3.amazonaws.com/samples.clarifai.com/featured-models/record_out+(3).wav --input_type audio --inference_params "{\\"task\\":\\"transcribe\\"}"\n',j='clarifai model predict --model_url https://clarifai.com/clarifai/main/models/general-image-recognition --url https://samples.clarifai.com/dog2.jpeg --input_type image --output_config "{\\"max_concepts\\":3}"\n',y={description:"Learn how to use the Clarifai Command Line Interface (CLI)",sidebar_position:3},v="Clarifai CLI",A={},C=[{value:"Installation",id:"installation",level:2},{value:"Basics",id:"basics",level:2},{value:"Login",id:"login",level:2},{value:"Compute Orchestration",id:"compute-orchestration",level:2},{value:"Model Operations",id:"model-operations",level:2},{value:"Predict by IDs",id:"predict-by-ids",level:3},{value:"Predict by Model URL",id:"predict-by-model-url",level:3},{value:"Predict by a YAML file",id:"predict-by-a-yaml-file",level:3},{value:"Specify Prediction Parameters",id:"specify-prediction-parameters",level:3}];function I(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"clarifai-cli",children:"Clarifai CLI"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Learn how to use the Clarifai Command Line Interface (CLI)"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(n.p,{children:"Clarifai\u2019s Command Line Interface (CLI) is a powerful, user-friendly tool designed to simplify and enhance your experience with our AI platform. By offering a streamlined way to execute tasks directly from the terminal, the CLI eliminates the need for extensive coding or constant reliance on the web interface."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/Clarifai/examples/tree/main/CLI",children:"The Clarifai CLI"})," supports a broad range of functionalities, from making model predictions to leveraging advanced Compute Orchestration capabilities, making it an essential tool for for a wide range of use cases."]}),"\n",(0,i.jsx)(n.p,{children:"Bundled within our Python SDK package, the CLI empowers both technical and non-technical users to efficiently manage tasks and boost productivity on the Clarifai platform."}),"\n","\n","\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["To begin, install the latest version of the ",(0,i.jsx)(n.code,{children:"clarifai"})," Python package."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"pip install --upgrade clarifai\n"})}),"\n",(0,i.jsx)(n.h2,{id:"basics",children:"Basics"}),"\n",(0,i.jsx)(n.p,{children:"The CLI tool is designed to help users manage various aspects of their compute resources, deployments, and models through a series of intuitive commands and aliases."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"Usage: clarifai [OPTIONS] COMMAND [ARGS]...\n\n  Clarifai CLI\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  cc              Alias for 'computecluster'\n  computecluster  Manage Compute Clusters: create, delete, list\n  deployment      Manage Deployments: create, delete, list\n  dpl             Alias for 'deployment'\n  login           Login command to set PAT and other configurations.\n  model           Manage models: upload, test locally, run_locally, predict\n  nodepool        Manage Nodepools: create, delete, list\n  np              Alias for 'nodepool'\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"--help"})," option is particularly useful to quickly understand the available functionalities and how to use them."]}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-yaml",children:(0,i.jsx)(n.p,{children:"clarifai COMMAND --help"})})})}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-yaml",children:(0,i.jsx)(n.p,{children:"clarifai model --help"})})})}),"\n",(0,i.jsx)(n.p,{children:"Produces this output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"Usage: clarifai model [OPTIONS] COMMAND [ARGS]...\n\n  Manage models: upload, test locally, run_locally, predict\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  predict       Predict using the given model\n  run-locally   Run the model locally and start a gRPC server to serve...\n  test-locally  Test model locally.\n  upload        Upload a model to Clarifai.\n\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["You can learn how to use the ",(0,i.jsx)(n.code,{children:"run-locally"}),", ",(0,i.jsx)(n.code,{children:"test-locally"}),", and ",(0,i.jsx)(n.code,{children:"upload"})," commands ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/sdk/compute-orchestration/model-upload#step-4-test-the-model-locally",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"login",children:"Login"}),"\n",(0,i.jsxs)(n.p,{children:["To use the CLI tool to interact with the Clarifai platform, you must first log in using a ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/clarifai-basics/authentication/personal-access-tokens",children:"Personal Access Token"})," (PAT). This requires creating a YAML login configuration file to securely store your credentials."]}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"yaml",label:"YAML",children:(0,i.jsx)(o.A,{className:"language-yaml",children:c})})}),"\n",(0,i.jsx)(n.p,{children:"Once the configuration file is set up, you can authenticate your CLI session with Clarifai using the stored credentials. This ensures seamless access to the CLI's features and functionalities."}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-text",children:(0,i.jsxs)(n.p,{children:["clarifai login --config ",(0,i.jsx)(n.code,{children:"<add-config-filepath-here>"})]})})})}),"\n",(0,i.jsx)(n.h2,{id:"compute-orchestration",children:"Compute Orchestration"}),"\n",(0,i.jsx)(n.p,{children:"The Clarifai CLI simplifies Compute Orchestration tasks. With the CLI, you can easily manage the infrastructure required for deploying and scaling machine learning models, even without extensive technical expertise."}),"\n",(0,i.jsxs)(n.p,{children:["You can learn how to use the CLI for Compute Orchestration ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/sdk/compute-orchestration",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"model-operations",children:"Model Operations"}),"\n",(0,i.jsx)(n.p,{children:"You can perform model predictions using the Clarifai CLI in the following ways:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["By specifying ",(0,i.jsx)(n.code,{children:"user_id"}),", ",(0,i.jsx)(n.code,{children:"app_id"}),", and ",(0,i.jsx)(n.code,{children:"model_id"})]}),"\n",(0,i.jsx)(n.li,{children:"By providing the model URL"}),"\n",(0,i.jsx)(n.li,{children:"By using a YAML configuration file"}),"\n"]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"CLI Predict Options"}),(0,i.jsx)(o.A,{className:"language-text",children:d})]}),"\n",(0,i.jsx)(n.h3,{id:"predict-by-ids",children:"Predict by IDs"}),"\n",(0,i.jsxs)(n.p,{children:["You can use the ",(0,i.jsx)(n.code,{children:"--bytes"})," argument along with specifying ",(0,i.jsx)(n.code,{children:"user_id"}),", ",(0,i.jsx)(n.code,{children:"app_id"}),", and ",(0,i.jsx)(n.code,{children:"model_id"}),"."]}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-bash",children:u})})}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Output Example"}),(0,i.jsx)(o.A,{className:"language-text",children:h})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["You can also use the ",(0,i.jsx)(n.code,{children:"--file_path"})," argument, which specifies the local path to the file that contains the instructions for the model to generate predictions."]}),"\n"]}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-bash",children:p})})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["You can also use the ",(0,i.jsx)(n.code,{children:"--url"})," argument, which specifies the URL of the file that contains the instructions for the model to generate predictions."]}),"\n"]}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-bash",children:m})})}),"\n",(0,i.jsx)(n.h3,{id:"predict-by-model-url",children:"Predict by Model URL"}),"\n",(0,i.jsxs)(n.p,{children:["You can make predictions by using the ",(0,i.jsx)(n.code,{children:"--model_url"})," argument, which specifies the URL of the model to be used for generating predictions."]}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-bash",children:f})})}),"\n",(0,i.jsx)(n.h3,{id:"predict-by-a-yaml-file",children:"Predict by a YAML file"}),"\n",(0,i.jsx)(n.p,{children:"You can provide the instructions for generating predictions in a YAML configuration file."}),"\n",(0,i.jsx)(n.p,{children:"Here is an example:"}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"yaml",label:"YAML",children:(0,i.jsx)(o.A,{className:"language-yaml",children:g})})}),"\n",(0,i.jsx)(n.p,{children:"Then, you need to specify the path to that file."}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-bash",children:x})})}),"\n",(0,i.jsx)(n.h3,{id:"specify-prediction-parameters",children:"Specify Prediction Parameters"}),"\n",(0,i.jsx)(n.p,{children:"You can specify prediction parameters to influence the output of some models. These settings allow you to control the model's behavior during prediction, influencing attributes such as creativity, coherence, and diversity in the results."}),"\n",(0,i.jsxs)(n.p,{children:["You can get a description of the prediction parameters ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/sdk/Inference-from-AI-Models/Advance-Inference-Options/#prediction-paramaters",children:"here"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Here is how you can specify various inference parameters :"}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-bash",children:b})})}),"\n",(0,i.jsx)(n.p,{children:"Here is how you can specify output configuration parameters:"}),"\n",(0,i.jsx)(s.A,{children:(0,i.jsx)(l.A,{value:"bash",label:"CLI",children:(0,i.jsx)(o.A,{className:"language-bash",children:j})})})]})}function _(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(I,{...e})}):I(e)}},65537:(e,n,t)=>{t.d(n,{A:()=>A});var a=t(96540),i=t(18215),r=t(65627),s=t(56347),l=t(50372),o=t(30604),c=t(11861),d=t(78749);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const i=(0,s.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})}),[r,i])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,r=h(e),[s,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[c,u]=m({queryString:t,groupId:i}),[f,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,r]=(0,d.Dv)(t);return[i,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:i}),x=(()=>{const e=c??f;return p({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{x&&o(x)}),[x]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)}),[u,g,r]),tabValues:r}}var g=t(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function j(e){let{className:n,block:t,selectedValue:a,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,t=o.indexOf(n),i=l[t].value;i!==a&&(c(n),s(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{o.push(e)},onKeyDown:u,onClick:d,...r,className:(0,i.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=f(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",x.tabList),children:[(0,b.jsx)(j,{...n,...e}),(0,b.jsx)(y,{...n,...e})]})}function A(e){const n=(0,g.A)();return(0,b.jsx)(v,{...e,children:u(e.children)},String(n))}},79329:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var a=t(18215);const i={tabItem:"tabItem_Ymn6"};var r=t(74848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,s),hidden:t,children:n})}}}]);