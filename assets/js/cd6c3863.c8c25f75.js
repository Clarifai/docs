"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[6204],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),l=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=r,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return d}});var a=n(7462),r=n(7294),i=n(2389),o=n(9443);var s=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(3616),l=n(6010),c="tabItem_vU9c";function p(e){var t,n,i,o=e.lazy,p=e.block,d=e.defaultValue,f=e.values,m=e.groupId,v=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,u.lx)(b,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===d?d:null!=(t=null!=d?d:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=g[0])?void 0:i.props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=s(),k=w.tabGroupChoices,E=w.setTabGroupChoices,O=(0,r.useState)(y),T=O[0],I=O[1],P=[],x=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var _=k[m];null!=_&&_!==T&&b.some((function(e){return e.value===_}))&&I(_)}var N=function(e){var t=e.currentTarget,n=P.indexOf(t),a=b[n].value;a!==T&&(x(t),I(a),null!=m&&E(m,a))},j=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=P.indexOf(e.currentTarget)+1;n=P[a]||P[0];break;case"ArrowLeft":var r=P.indexOf(e.currentTarget)-1;n=P[r]||P[P.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},v)},b.map((function(e){var t=e.value,n=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return P.push(e)},onKeyDown:j,onFocus:N,onClick:N},i,{className:(0,l.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(g.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function d(e){var t=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},9416:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=n(6396),s=n(8215),u=["components"],l={description:"Paginate your data batches.",sidebar_position:3},c="Pagination",p={unversionedId:"api-guide/advanced-topics/pagination",id:"api-guide/advanced-topics/pagination",title:"Pagination",description:"Paginate your data batches.",source:"@site/docs/api-guide/advanced-topics/pagination.md",sourceDirName:"api-guide/advanced-topics",slug:"/api-guide/advanced-topics/pagination",permalink:"/docs-new/api-guide/advanced-topics/pagination",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-guide/advanced-topics/pagination.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"Paginate your data batches.",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Patching",permalink:"/docs-new/api-guide/advanced-topics/patching"},next:{title:"Batch Predict CSV on Custom Text Model",permalink:"/docs-new/api-guide/advanced-topics/batch-predict-csv-on-custom-text-model"}},d=[],f={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,u);return(0,i.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pagination"},"Pagination"),(0,i.kt)("p",null,"Many API calls are paginated. You can provide ",(0,i.kt)("inlineCode",{parentName:"p"},"page")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"per_page")," params to the API. In the example below we are getting all inputs and specifying to start at page 2 and get back 20 results per page."),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"java",label:"Java",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import com.clarifai.grpc.api.*;\nimport com.clarifai.grpc.api.status.*;\n\n// Insert here the initialization code as outlined on this page:\n// https://docs.clarifai.com/api-guide/api-overview/api-clients#client-installation-instructions\n\nMultiInputResponse listInputsResponse = stub.listInputs(\n    ListInputsRequest.newBuilder()\n        .setPage(2)\n        .setPerPage(20)\n        .build()\n);\n\nif (listInputsResponse.getStatus().getCode() != StatusCode.SUCCESS) {\n    throw new RuntimeException("List inputs failed, status: " + listInputsResponse.getStatus());\n}\n\nfor (Input input : listInputsResponse.getInputsList()) {\n    System.out.println(input);\n}\n'))),(0,i.kt)(s.Z,{value:"nodejs",label:"NodeJS",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'// Insert here the initialization code as outlined on this page:\n// https://docs.clarifai.com/api-guide/api-overview/api-clients#client-installation-instructions\n\nstub.ListInputs(\n    {page: 2, per_page: 20},\n    metadata,\n    (err, response) => {\n        if (err) {\n            throw new Error(err);\n        }\n\n        if (response.status.code !== 10000) {\n            throw new Error("List inputs failed, status: " + response.status.description);\n        }\n\n        for (const input of response.inputs) {\n            console.log(JSON.stringify(input, null, 2));\n        }\n    }\n);\n'))),(0,i.kt)(s.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# Insert here the initialization code as outlined on this page:\n# https://docs.clarifai.com/api-guide/api-overview/api-clients#client-installation-instructions\n\nlist_inputs_response = stub.ListInputs(\n    service_pb2.ListInputsRequest(page=2, per_page=20),\n    metadata=metadata\n)\n\nif list_inputs_response.status.code != status_code_pb2.SUCCESS:\n    raise Exception("List inputs failed, status: " + list_inputs_response.status.description)\n\nfor input_object in list_inputs_response.inputs:\n    print(input_object)\n'))),(0,i.kt)(s.Z,{value:"curl",label:"cURL",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET \\\n  -H "Authorization: Key YOUR_API_KEY" \\\n  https://api.clarifai.com/v2/inputs?page=2&per_page=20\n')))))}m.isMDXComponent=!0}}]);