"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[1187],{9451:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>_,contentTitle:()=>v,default:()=>I,frontMatter:()=>y,metadata:()=>n,toc:()=>w});const n=JSON.parse('{"id":"create/models/deep-fine-tuning/clusterer","title":"Clusterer","description":"Learn about our clusterer model type","source":"@site/docs/create/models/deep-fine-tuning/clusterer.md","sourceDirName":"create/models/deep-fine-tuning","slug":"/create/models/deep-fine-tuning/clusterer","permalink":"/create/models/deep-fine-tuning/clusterer","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"description":"Learn about our clusterer model type","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Visual Embedder","permalink":"/create/models/deep-fine-tuning/visual-embedder"},"next":{"title":"Text Classifier","permalink":"/create/models/deep-fine-tuning/text-classifier"}}');var r=a(74848),s=a(28453),i=a(11470),l=a(19365),o=a(73748);const d='from clarifai.client.user import User\n#replace your "user_id"\nclient = User(user_id="user_id")\napp = client.create_app(app_id="demo_train", base_workflow="Universal")',c="#importing load_module_dataloader for calling the dataloader object in dataset.py in the local data folder\nfrom clarifai.datasets.upload.utils import load_module_dataloader\n\n\n# Construct the path to the dataset folder\nCSV_PATH = os.path.join(os.getcwd().split('/models/model_train')[0],'datasets/upload/data/imdb.csv')\n\n\n# Create a Clarifai dataset with the specified dataset_id \ndataset = app.create_dataset(dataset_id=\"text_dataset\")\n# Upload the dataset using the provided dataloader and get the upload status\ndataset.upload_from_csv(csv_path=CSV_PATH,input_type='text',csv_type='raw', labels=True)\n",u="print(app.list_trainable_model_types())",p='MODEL_ID = "model_clusterer"\nMODEL_TYPE_ID = "clusterer"\n\n# Create a model by passing the model name and model type as parameter\nmodel = app.create_model(model_id=MODEL_ID, model_type_id=MODEL_TYPE_ID)\n',h="# Get the params for the selected template\nmodel_params = model.get_params()\nprint(model_params)",m='import time\n#Starting the training\nmodel_version_id = model.train()\n\n#Checking the status of training\nwhile True:\n    status = model.training_status(version_id=model_version_id,training_logs=False)\n    if status.code == 21106: #MODEL_TRAINING_FAILED\n        print(status)\n        break\n    elif status.code == 21100: #MODEL_TRAINED\n        print(status)\n        break\n    else:\n        print("Current Status:",status)\n        print("Waiting---")\n        time.sleep(120)',g='TEXT = b"This is a great place to work"\n\n# get the predictions\nmodel_prediction = model.predict_by_bytes(TEXT, input_type="text")\n\nprint(model_prediction.outputs[0].data.clusters)\n';var f=a(92027);const x="['visual-classifier',\n 'visual-detector',\n 'visual-segmenter',\n 'visual-embedder',\n 'clusterer',\n 'text-classifier',\n 'embedding-classifier',\n 'text-to-text']",b="{'train_params': {'base_embed_model': None,\n  'coarse_clusters': 32.0,\n  'eval_holdout_fraction': 0.2,\n  'query_holdout_fraction': 0.1,\n  'to_be_indexed_queries_fraction': 0.25,\n  'max_num_query_embeddings': 100.0,\n  'num_results_per_query': [1.0, 5.0, 10.0, 20.0],\n  'max_visited': 32.0,\n  'quota': 1000.0,\n  'beta': 1.0}}",j='[id: "22_5"\n\nprojection: 0.010116016492247581\n\nprojection: -0.035988882184028625\n\n]',y={description:"Learn about our clusterer model type",sidebar_position:7},v="Clusterer",_={},w=[{value:"Example Use Case",id:"example-use-case",level:2},{value:"Create and Train a Clusterer",id:"create-and-train-a-clusterer",level:2},{value:"Step 1: App Creation",id:"step-1-app-creation",level:3},{value:"Step 2: Dataset Upload",id:"step-2-dataset-upload",level:3},{value:"Step 3: Model Creation",id:"step-3-model-creation",level:3},{value:"Step 4: Patch Model (optional)",id:"step-4-patch-model-optional",level:3},{value:"Step 5: Set Up Model Parameters",id:"step-5-set-up-model-parameters",level:3},{value:"Step 6: Initiate Model Training",id:"step-6-initiate-model-training",level:3},{value:"Step 7: Model Prediction",id:"step-7-model-prediction",level:3}];function A(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:a}=t;return a||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"clusterer",children:"Clusterer"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Learn about our clusterer model type"})}),"\n",(0,r.jsx)("hr",{}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Input"}),": Images and videos"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Output"}),": Clusters"]}),"\n",(0,r.jsx)(t.p,{children:"Clusterer is a type of deep fine-tuned model designed to identify and group similar images or video frames within a dataset. The primary goal of clustering is to discover patterns or relationships among data points based on their inherent characteristics or features, without requiring explicit labels or predefined categories."}),"\n",(0,r.jsx)(t.p,{children:'Cluster models are often used in conjunction with embedding models to perform visual searches. This is done by first using an embedding model to represent each image as a vector in a lower-dimensional space. The cluster model then uses the mathematical structure of this space to determine which images are "clustered together."'}),"\n",(0,r.jsx)(t.p,{children:"The cluster model type can be used in a wide range of applications, including:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Customer segmentation in marketing"}),": Cluster models can be used to group customers with similar purchasing behaviors, demographics, or preferences."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Anomaly detection in network security"}),": Cluster models can identify unusual patterns in network traffic data, helping detect potential security threats or cyberattacks. Unusual clusters can indicate unauthorized access or malicious activity."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Document clustering in natural language processing"}),": In textual data analysis, cluster models can group similar documents based on their content. This aids in tasks like topic modeling, content summarization, and document organization."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"You may choose a visual classifier model type in cases where:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"You want to perform visual searches accurately, quickly, and easily. Cluster models and embedding models do not require any labels or custom concepts to be trained. This makes them much more scalable and flexible than traditional methods for visual search, which often require a large amount of labeled data to train."}),"\n",(0,r.jsxs)(t.li,{children:['You need a cluster model to learn new features not recognized by the existing Clarifai models. In that case, you may need to "deep fine-tune" your custom model and integrate it directly within your ',(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/portal-guide/workflows/",children:"workflows"}),"."]}),"\n",(0,r.jsx)(t.li,{children:"You have a custom-tailored dataset, accurate labels, and the expertise and time to fine-tune models."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"example-use-case",children:"Example Use Case"}),"\n",(0,r.jsx)(t.p,{children:"If you want to find all images of cats in your dataset, you can simply use the cluster model to find all images that are clustered together with the embedding of a cat image."}),"\n",(0,r.jsx)(t.h2,{id:"create-and-train-a-clusterer",children:"Create and Train a Clusterer"}),"\n",(0,r.jsx)(t.p,{children:"Let's demonstrate how to create and train a clustering model using our API."}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["Before using the ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/additional-resources/api-overview/python-sdk",children:"Python SDK"}),", ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/additional-resources/api-overview/nodejs-sdk",children:"Node.js SDK"}),", or any of our ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/additional-resources/api-overview/grpc-clients",children:"gRPC clients"}),", ensure they are properly installed on your machine. Refer to their respective installation guides for instructions on how to install and initialize them."]})}),"\n","\n","\n","\n",(0,r.jsx)(t.h3,{id:"step-1-app-creation",children:"Step 1: App Creation"}),"\n",(0,r.jsxs)(t.p,{children:["Let's start by creating an ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/create-manage/applications/create",children:"app"}),"."]}),"\n",(0,r.jsx)(i.A,{groupId:"code",children:(0,r.jsx)(l.A,{value:"python",label:"Python SDK",children:(0,r.jsx)(o.A,{className:"language-python",children:d})})}),"\n",(0,r.jsx)(t.h3,{id:"step-2-dataset-upload",children:"Step 2: Dataset Upload"}),"\n",(0,r.jsxs)(t.p,{children:["Next, let\u2019s upload the ",(0,r.jsx)(t.a,{href:"https://docs.clarifai.com/create-manage/datasets/upload",children:"dataset"})," that will be used to train the model to the app."]}),"\n",(0,r.jsxs)(t.p,{children:["You can find the dataset we used ",(0,r.jsx)(t.a,{href:"https://github.com/Clarifai/examples/tree/main/datasets/upload/data",children:"here"}),"."]}),"\n",(0,r.jsx)(i.A,{groupId:"code",children:(0,r.jsx)(l.A,{value:"python",label:"Python SDK",children:(0,r.jsx)(o.A,{className:"language-python",children:c})})}),"\n",(0,r.jsx)(t.h3,{id:"step-3-model-creation",children:"Step 3: Model Creation"}),"\n",(0,r.jsx)(t.p,{children:"Let's list all the available trainable model types in the Clarifai platform."}),"\n",(0,r.jsx)(i.A,{groupId:"code",children:(0,r.jsx)(l.A,{value:"python",label:"Python SDK",children:(0,r.jsx)(o.A,{className:"language-python",children:u})})}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:"Output"}),(0,r.jsx)(o.A,{className:"language-text",children:x})]}),"\n",(0,r.jsxs)(t.p,{children:["Next, let's select the ",(0,r.jsx)(t.code,{children:"clusterer"})," model type and use it to create a model."]}),"\n",(0,r.jsx)(i.A,{groupId:"code",children:(0,r.jsx)(l.A,{value:"python",label:"Python SDK",children:(0,r.jsx)(o.A,{className:"language-python",children:p})})}),"\n",(0,r.jsx)(t.h3,{id:"step-4-patch-model-optional",children:"Step 4: Patch Model (optional)"}),"\n",(0,r.jsx)(t.p,{children:"After creating a model, you can perform patch operations on it by merging, removing, or overwriting data. By default, all actions support overwriting, but they handle lists of objects in specific ways."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["The ",(0,r.jsx)(t.code,{children:"merge"})," action updates a ",(0,r.jsx)(t.code,{children:"key:value"})," pair with ",(0,r.jsx)(t.code,{children:"key:new_value"})," or appends to an existing list. For dictionaries, it merges entries that share the same ",(0,r.jsx)(t.code,{children:"id"})," field."]}),"\n",(0,r.jsxs)(t.li,{children:["The ",(0,r.jsx)(t.code,{children:"remove"})," action is only used to delete the model's cover image on the platform UI."]}),"\n",(0,r.jsxs)(t.li,{children:["The ",(0,r.jsx)(t.code,{children:"overwrite"})," action completely replaces an existing object with a new one."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Below is an example of performing patch operations on a model, such as updating its description and notes."}),"\n",(0,r.jsx)(i.A,{groupId:"code",children:(0,r.jsx)(l.A,{value:"python",label:"Python SDK",children:(0,r.jsx)(o.A,{className:"language-python",children:f.A})})}),"\n",(0,r.jsx)(t.h3,{id:"step-5-set-up-model-parameters",children:"Step 5: Set Up Model Parameters"}),"\n",(0,r.jsx)(t.p,{children:"You can customize the model parameters as needed before starting the training process."}),"\n",(0,r.jsx)(i.A,{groupId:"code",children:(0,r.jsx)(l.A,{value:"python",label:"Python SDK",children:(0,r.jsx)(o.A,{className:"language-python",children:h})})}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:"Output"}),(0,r.jsx)(o.A,{className:"language-text",children:b})]}),"\n",(0,r.jsx)(t.h3,{id:"step-6-initiate-model-training",children:"Step 6: Initiate Model Training"}),"\n",(0,r.jsxs)(t.p,{children:["To initiate the model training process, call the ",(0,r.jsx)(t.code,{children:"model.train()"})," method. The Clarifai API also provides features for monitoring training status and saving training logs to a local file."]}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["If the training status code returns ",(0,r.jsx)(t.code,{children:"MODEL-TRAINED"}),", it means the model has successfully completed training and is ready for use."]})}),"\n",(0,r.jsx)(i.A,{groupId:"code",children:(0,r.jsx)(l.A,{value:"python",label:"Python SDK",children:(0,r.jsx)(o.A,{className:"language-python",children:m})})}),"\n",(0,r.jsx)(t.h3,{id:"step-7-model-prediction",children:"Step 7: Model Prediction"}),"\n",(0,r.jsx)(t.p,{children:"After the model is trained and ready to use, you can run some predictions with it."}),"\n",(0,r.jsx)(i.A,{groupId:"code",children:(0,r.jsx)(l.A,{value:"python",label:"Python SDK",children:(0,r.jsx)(o.A,{className:"language-python",children:g})})}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:"Output"}),(0,r.jsx)(o.A,{className:"language-text",children:j})]})]})}function I(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(A,{...e})}):A(e)}},11470:(e,t,a)=>{a.d(t,{A:()=>_});var n=a(96540),r=a(18215),s=a(23104),i=a(56347),l=a(205),o=a(57485),d=a(31682),c=a(70679);function u(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:t,children:a}=e;return(0,n.useMemo)(()=>{const e=t??function(e){return u(e).map(({props:{value:e,label:t,attributes:a,default:n}})=>({value:e,label:t,attributes:a,default:n}))}(a);return function(e){const t=(0,d.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,a])}function h({value:e,tabValues:t}){return t.some(t=>t.value===e)}function m({queryString:e=!1,groupId:t}){const a=(0,i.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,o.aZ)(r),(0,n.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})},[r,a])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,s=p(e),[i,o]=(0,n.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=t.find(e=>e.default)??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s})),[d,u]=m({queryString:a,groupId:r}),[g,f]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,r]=(0,c.Dv)(t);return[a,(0,n.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),x=(()=>{const e=d??g;return h({value:e,tabValues:s})?e:null})();(0,l.A)(()=>{x&&o(x)},[x]);return{selectedValue:i,selectValue:(0,n.useCallback)(e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),f(e)},[u,f,s]),tabValues:s}}var f=a(92303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=a(74848);function j({className:e,block:t,selectedValue:a,selectValue:n,tabValues:i}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),d=e=>{const t=e.currentTarget,r=l.indexOf(t),s=i[r].value;s!==a&&(o(t),n(s))},c=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;t=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;t=l[a]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:i.map(({value:e,label:t,attributes:n})=>(0,b.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{l.push(e)},onKeyDown:c,onClick:d,...n,className:(0,r.A)("tabs__item",x.tabItem,n?.className,{"tabs__item--active":a===e}),children:t??e},e))})}function y({lazy:e,children:t,selectedValue:a}){const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===a);return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))})}function v(e){const t=g(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",x.tabList),children:[(0,b.jsx)(j,{...t,...e}),(0,b.jsx)(y,{...t,...e})]})}function _(e){const t=(0,f.A)();return(0,b.jsx)(v,{...e,children:u(e.children)},String(t))}},19365:(e,t,a)=>{a.d(t,{A:()=>i});a(96540);var n=a(18215);const r={tabItem:"tabItem_Ymn6"};var s=a(74848);function i({children:e,hidden:t,className:a}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,a),hidden:t,children:e})}},92027:(e,t,a)=>{a.d(t,{A:()=>n});const n='from clarifai.client.app import App\n\napp = App(app_id="YOUR_APP_ID_HERE", user_id="YOUR_USER_ID_HERE", pat="YOUR_PAT_HERE")\n\n# Update the details of the model\napp.patch_model(model_id="model_clusterer", action="merge", description="description", notes="notes", toolkits=["OpenAI"], use_cases=["llm"], languages=["en"], image_url="https://samples.clarifai.com/metro-north.jpg")\n\n# Update the model\'s image by specifying the \'remove\' action\napp.patch_model(model_id=\'model_clusterer\', action=\'remove\', image_url=\'https://samples.clarifai.com/metro-north.jpg\')\n'}}]);