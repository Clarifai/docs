"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[7777],{85162:(n,e,r)=>{r.d(e,{Z:()=>l});var t=r(67294),s=r(86010);const o={tabItem:"tabItem_Ymn6"};function l(n){let{children:e,hidden:r,className:l}=n;return t.createElement("div",{role:"tabpanel",className:(0,s.Z)(o.tabItem,l),hidden:r},e)}},74866:(n,e,r)=>{r.d(e,{Z:()=>E});var t=r(87462),s=r(67294),o=r(86010),l=r(12466),a=r(16550),i=r(91980),p=r(67392),c=r(50012);function h(n){return function(n){return s.Children.map(n,(n=>{if(!n||(0,s.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(n).map((n=>{let{props:{value:e,label:r,attributes:t,default:s}}=n;return{value:e,label:r,attributes:t,default:s}}))}function d(n){const{values:e,children:r}=n;return(0,s.useMemo)((()=>{const n=e??h(r);return function(n){const e=(0,p.l)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,r])}function u(n){let{value:e,tabValues:r}=n;return r.some((n=>n.value===e))}function _(n){let{queryString:e=!1,groupId:r}=n;const t=(0,a.k6)(),o=function(n){let{queryString:e=!1,groupId:r}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:e,groupId:r});return[(0,i._X)(o),(0,s.useCallback)((n=>{if(!o)return;const e=new URLSearchParams(t.location.search);e.set(o,n),t.replace({...t.location,search:e.toString()})}),[o,t])]}function f(n){const{defaultValue:e,queryString:r=!1,groupId:t}=n,o=d(n),[l,a]=(0,s.useState)((()=>function(n){let{defaultValue:e,tabValues:r}=n;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!u({value:e,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${r.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=r.find((n=>n.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:e,tabValues:o}))),[i,p]=_({queryString:r,groupId:t}),[h,f]=function(n){let{groupId:e}=n;const r=function(n){return n?`docusaurus.tab.${n}`:null}(e),[t,o]=(0,c.Nk)(r);return[t,(0,s.useCallback)((n=>{r&&o.set(n)}),[r,o])]}({groupId:t}),m=(()=>{const n=i??h;return u({value:n,tabValues:o})?n:null})();(0,s.useLayoutEffect)((()=>{m&&a(m)}),[m]);return{selectedValue:l,selectValue:(0,s.useCallback)((n=>{if(!u({value:n,tabValues:o}))throw new Error(`Can't select invalid tab value=${n}`);a(n),p(n),f(n)}),[p,f,o]),tabValues:o}}var m=r(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(n){let{className:e,block:r,selectedValue:a,selectValue:i,tabValues:p}=n;const c=[],{blockElementScrollPositionUntilNextRender:h}=(0,l.o5)(),d=n=>{const e=n.currentTarget,r=c.indexOf(e),t=p[r].value;t!==a&&(h(e),i(t))},u=n=>{let e=null;switch(n.key){case"Enter":d(n);break;case"ArrowRight":{const r=c.indexOf(n.currentTarget)+1;e=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(n.currentTarget)-1;e=c[r]??c[c.length-1];break}}e?.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},e)},p.map((n=>{let{value:e,label:r,attributes:l}=n;return s.createElement("li",(0,t.Z)({role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,key:e,ref:n=>c.push(n),onKeyDown:u,onClick:d},l,{className:(0,o.Z)("tabs__item",v.tabItem,l?.className,{"tabs__item--active":a===e})}),r??e)})))}function b(n){let{lazy:e,children:r,selectedValue:t}=n;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(e){const n=o.find((n=>n.props.value===t));return n?(0,s.cloneElement)(n,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},o.map(((n,e)=>(0,s.cloneElement)(n,{key:e,hidden:n.props.value!==t}))))}function x(n){const e=f(n);return s.createElement("div",{className:(0,o.Z)("tabs-container",v.tabList)},s.createElement(g,(0,t.Z)({},n,e)),s.createElement(b,(0,t.Z)({},n,e)))}function E(n){const e=(0,m.Z)();return s.createElement(x,(0,t.Z)({key:String(e)},n))}},19904:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>E,contentTitle:()=>b,default:()=>y,frontMatter:()=>g,metadata:()=>x,toc:()=>T});var t=r(87462),s=(r(67294),r(3905)),o=r(74866),l=r(85162),a=r(90814);const i='##########################################################################\n# In this section, we set the user authentication, app ID, and negative \n# and positive texts. Change these strings to run your own example.\n##########################################################################\n\nUSER_ID = \'YOUR_USER_ID_HERE\'\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\nPAT = \'YOUR_PAT_HERE\'\nAPP_ID = \'YOUR_APP_ID_HERE\'\n# Add your own batch of texts\npositive_raw_texts = [\n    "Marie is a published author.",\n    "In three years, everyone will be happy.",\n    "Nora Roberts is the most prolific romance writer the world has ever known.",\n    "She has written more than 225 books.",\n    "If you walk into Knoxville, you\'ll find a shop named Rala.",\n    "There are more than 850 miles of hiking trails in the Great Smoky Mountains.",\n    "Harrison Ford is 6\'1\\".",\n    "According to Reader\'s Digest, in the original script of Return of The Jedi, Han Solo died.",\n    "Kate travels to Doolin, Ireland every year for a writers\' conference.",\n    "Fort Stevens was decommissioned by the United States military in 1947.",\n]\nnegative_text_urls = [\n    "https://samples.clarifai.com/negative_sentence_1.txt",\n    "https://samples.clarifai.com/negative_sentence_2.txt",\n    "https://samples.clarifai.com/negative_sentence_3.txt",\n    "https://samples.clarifai.com/negative_sentence_4.txt",\n    "https://samples.clarifai.com/negative_sentence_5.txt",\n    "https://samples.clarifai.com/negative_sentence_6.txt",\n    "https://samples.clarifai.com/negative_sentence_7.txt",\n    "https://samples.clarifai.com/negative_sentence_8.txt",\n    "https://samples.clarifai.com/negative_sentence_9.txt",\n    "https://samples.clarifai.com/negative_sentence_10.txt",\n]\n\n##########################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n##########################################################################\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import resources_pb2, service_pb2, service_pb2_grpc\nfrom clarifai_grpc.grpc.api.status import status_code_pb2\n\nchannel = ClarifaiChannel.get_grpc_channel()\nstub = service_pb2_grpc.V2Stub(channel)\n\nmetadata = ((\'authorization\', \'Key \' + PAT),)\n\nuserDataObject = resources_pb2.UserAppIDSet(user_id=USER_ID, app_id=APP_ID)\n\npost_inputs_response = stub.PostInputs(\n    service_pb2.PostInputsRequest(\n        user_app_id=userDataObject,\n        inputs=[\n            resources_pb2.Input(\n                data=resources_pb2.Data(\n                    text=resources_pb2.Text(raw=raw_text),\n                    concepts=[resources_pb2.Concept(id="positive", value=1)]\n                )\n            )\n            for raw_text in positive_raw_texts\n        ] + [\n            resources_pb2.Input(\n                data=resources_pb2.Data(\n                    text=resources_pb2.Text(\n                        url=text_url,\n                        allow_duplicate_url=True\n                    ),\n                    concepts=[resources_pb2.Concept(id="negative", value=1)]\n                )\n            )\n            for text_url in negative_text_urls\n        ]\n    ),\n    metadata=metadata\n)\n\nif post_inputs_response.status.code != status_code_pb2.SUCCESS:\n    print(post_inputs_response.status)\n    raise Exception("Failed response, status: " + post_inputs_response.status.description)\n\n# Uncomment this line to see the structure and data of the response\n#print(post_inputs_response)',p='###############################################################\n# In this section, we set the user authentication and app ID. \n# Change these strings to run your own example.\n###############################################################\n\nUSER_ID = \'YOUR_USER_ID_HERE\'\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\nPAT = \'YOUR_PAT_HERE\'\nAPP_ID = \'YOUR_APP_ID_HERE\'\n\n##########################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n##########################################################################\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import resources_pb2, service_pb2, service_pb2_grpc\nfrom clarifai_grpc.grpc.api.status import status_code_pb2\nimport time\n\nchannel = ClarifaiChannel.get_grpc_channel()\nstub = service_pb2_grpc.V2Stub(channel)\n\nmetadata = ((\'authorization\', \'Key \' + PAT),)\n\nuserDataObject = resources_pb2.UserAppIDSet(user_id=USER_ID, app_id=APP_ID)\n\nwhile True:\n    list_inputs_response = stub.ListInputs(\n        service_pb2.ListInputsRequest(\n            user_app_id=userDataObject,\n            page=1,\n            per_page=100\n        ),\n        metadata=metadata\n    )\n    \n    if list_inputs_response.status.code != status_code_pb2.SUCCESS:\n        print(list_inputs_response.status)\n        raise Exception("Failed response, status: " + list_inputs_response.status.description)\n\n    for the_input in list_inputs_response.inputs:\n        input_status_code = the_input.status.code\n        if input_status_code == status_code_pb2.INPUT_DOWNLOAD_SUCCESS:\n            continue\n        elif input_status_code in (status_code_pb2.INPUT_DOWNLOAD_PENDING, status_code_pb2.INPUT_DOWNLOAD_IN_PROGRESS):\n            print("Not all inputs have been downloaded yet. Checking again shortly.")\n            break\n        else:\n            error_message = (\n                    str(input_status_code) + " " +\n                    the_input.status.description + " " +\n                    the_input.status.details\n            )\n            raise Exception(\n                f"Expected inputs to download, but got {error_message}. Full response: {list_inputs_response}"\n            )\n    else:\n        # Once all inputs have been successfully downloaded, break the while True loop\n        print("All inputs have been successfully downloaded.")\n        break\n    time.sleep(2)',c="################################################################################\n# In this section, we set the user authentication, app ID, and the ID of the \n# model we want to create. Change these strings to run your own example.\n################################################################################\n\nUSER_ID = 'YOUR_USER_ID_HERE'\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\nPAT = 'YOUR_PAT_HERE'\nAPP_ID = 'YOUR_APP_ID_HERE'\n# Change this to create your own custom model\nMODEL_ID = 'text-model-1' \n\n##########################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n##########################################################################\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import resources_pb2, service_pb2, service_pb2_grpc\nfrom clarifai_grpc.grpc.api.status import status_code_pb2\n\nchannel = ClarifaiChannel.get_grpc_channel()\nstub = service_pb2_grpc.V2Stub(channel)\n\nmetadata = (('authorization', 'Key ' + PAT),)\n\nuserDataObject = resources_pb2.UserAppIDSet(user_id=USER_ID, app_id=APP_ID)\n\npost_models_response = stub.PostModels(\n    service_pb2.PostModelsRequest(\n        user_app_id=userDataObject,\n        models=[\n            resources_pb2.Model(\n                id=MODEL_ID\n            )\n        ]\n    ),\n    metadata=metadata\n)\n\nif post_models_response.status.code != status_code_pb2.SUCCESS:\n    print(post_models_response.status)\n    raise Exception(\"Failed response, status: \" + post_models_response.status.description)\n\n# Uncomment this line to see the structure and data of the response\n#print(post_models_response)",h="################################################################################\n# In this section, we set the user authentication, app ID, and the ID of the \n# model we want to train. Change these strings to run your own example.\n################################################################################\n\nUSER_ID = 'YOUR_USER_ID_HERE'\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\nPAT = 'YOUR_PAT_HERE'\nAPP_ID = 'YOUR_APP_ID_HERE'\n# Change these to train your own custom model\nMODEL_ID = 'text-model-1' \nCONCEPT_ID_1 = 'positive'\nCONCEPT_ID_2 = 'negative'\n\n##########################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n##########################################################################\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import resources_pb2, service_pb2, service_pb2_grpc\nfrom clarifai_grpc.grpc.api.status import status_code_pb2\n\nchannel = ClarifaiChannel.get_grpc_channel()\nstub = service_pb2_grpc.V2Stub(channel)\n\nmetadata = (('authorization', 'Key ' + PAT),)\n\nuserDataObject = resources_pb2.UserAppIDSet(user_id=USER_ID, app_id=APP_ID)\n\npost_model_versions_response = stub.PostModelVersions(\n    service_pb2.PostModelVersionsRequest(\n        user_app_id=userDataObject,\n        model_id=MODEL_ID,\n        model_versions=[\n            resources_pb2.ModelVersion(\n                output_info=resources_pb2.OutputInfo(\n                    data=resources_pb2.Data(\n                        concepts=[\n                            resources_pb2.Concept(id=CONCEPT_ID_1, value=1), # 1 means true, this concept is present\n                            resources_pb2.Concept(id=CONCEPT_ID_2, value=1)\n                            ] \n                        ),\n                )\n            )]\n    ),\n    metadata=metadata\n)\n\nif post_model_versions_response.status.code != status_code_pb2.SUCCESS:\n    print(post_model_versions_response.status)\n    raise Exception(\"Failed response, status: \" + post_model_versions_response.status.description)\n\n# Uncomment this line to see the structure and data of the response\n#print(post_model_versions_response)",d="###############################################################################\n# In this section, we set the user authentication, app ID, and the ID of the \n# model to wait for its training. Change these strings to run your own example.\n################################################################################\n\nUSER_ID = 'YOUR_USER_ID_HERE'\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\nPAT = 'YOUR_PAT_HERE'\nAPP_ID = 'YOUR_APP_ID_HERE'\n# Change this to wait for your own model's training\nMODEL_ID = 'text-model-1' \n\n##########################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n##########################################################################\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import resources_pb2, service_pb2, service_pb2_grpc\nfrom clarifai_grpc.grpc.api.status import status_code_pb2\nimport time\n\nchannel = ClarifaiChannel.get_grpc_channel()\nstub = service_pb2_grpc.V2Stub(channel)\n\nmetadata = (('authorization', 'Key ' + PAT),)\n\nuserDataObject = resources_pb2.UserAppIDSet(user_id=USER_ID, app_id=APP_ID)\n\nwhile True:\n    get_model_response = stub.GetModel(\n        service_pb2.GetModelRequest(\n             user_app_id=userDataObject,\n            model_id=MODEL_ID\n        ),\n        metadata=metadata\n    )\n    \n    if get_model_response.status.code != status_code_pb2.SUCCESS:\n        print(get_model_response.status)\n        raise Exception(\"Failed response, status: \" + get_model_response.status.description)\n\n    version_status_code = get_model_response.model.model_version.status.code\n    if version_status_code == status_code_pb2.MODEL_TRAINED:\n        print(\"The model has been successfully trained.\")\n        break\n    elif version_status_code in (status_code_pb2.MODEL_QUEUED_FOR_TRAINING, status_code_pb2.MODEL_TRAINING):\n        print(\"The model hasn't been trained yet. Trying again shortly.\")\n        time.sleep(2)\n    else:\n        error_message = (\n                str(get_model_response.status.code) + \" \" +\n                get_model_response.status.description + \" \" +\n                get_model_response.status.details\n        )\n        raise Exception(\n            f\"Expected model to train, but got {error_message}. Full response: {get_model_response}\"\n        )\n\nmodel_version_id = get_model_response.model.model_version.id\n",u="###########################################################################\n# In this section, we set the user authentication, app ID, model details, \n# and new input samples. Change these strings to run your own example.\n###########################################################################\n\nUSER_ID = 'YOUR_USER_ID_HERE'\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\nPAT = 'YOUR_PAT_HERE'\nAPP_ID = 'YOUR_APP_ID_HERE'\n# Change these to make your own predictions\nMODEL_ID = 'text-model-1'\nMODEL_VERSION_ID = '49219b5968624221ac488303dde55327' \nINPUT_TEXT = 'Butchart Gardens contains over 900 varieties of plants.'\nINPUT_URL = 'https://samples.clarifai.com/negative_sentence_12.txt'\n\n##########################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n##########################################################################\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import resources_pb2, service_pb2, service_pb2_grpc\nfrom clarifai_grpc.grpc.api.status import status_code_pb2\n\nchannel = ClarifaiChannel.get_grpc_channel()\nstub = service_pb2_grpc.V2Stub(channel)\n\nmetadata = (('authorization', 'Key ' + PAT),)\n\nuserDataObject = resources_pb2.UserAppIDSet(user_id=USER_ID, app_id=APP_ID)\n\npost_model_outputs_response = stub.PostModelOutputs(\n    service_pb2.PostModelOutputsRequest(\n        user_app_id=userDataObject,\n        model_id=MODEL_ID,\n        # By default, the latest model version will be used, but it doesn't hurt to set it explicitly\n        version_id=MODEL_VERSION_ID,\n        inputs=[\n            resources_pb2.Input(data=resources_pb2.Data(text=resources_pb2.Text(raw=INPUT_TEXT))),\n            resources_pb2.Input(data=resources_pb2.Data(text=resources_pb2.Text(url=INPUT_URL))),\n        ]\n    ),\n    metadata=metadata\n)\n\nif post_model_outputs_response.status.code != status_code_pb2.SUCCESS:\n    print(post_model_outputs_response.status)\n    raise Exception(\"Failed response, status: \" + post_model_outputs_response.status.description)\n\nfor output in post_model_outputs_response.outputs:\n    text_object = output.input.data.text\n    val = text_object.raw if text_object.raw else text_object.url\n\n    print(f\"The following concepts were predicted for the input `{val}`:\")\n    for concept in output.data.concepts:\n        print(f\"\\t{concept.name}: {concept.value:.2f}\")\n",_='###########################################################################\n# In this section, we set the user authentication, app ID, model ID,\n# and model version. Change these strings to run your own example.\n###########################################################################\n\nUSER_ID = "YOUR_USER_ID_HERE"\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\nPAT = "YOUR_PAT_HERE"\nAPP_ID = "YOUR_APP_ID_HERE"\n# Change these to make your own evaluations\nMODEL_ID = "text-model-1"\nMODEL_VERSION_ID = "3ad2c152232e46ebb16ed31f67dc54d8"\n\n##########################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n##########################################################################\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import resources_pb2, service_pb2, service_pb2_grpc\nfrom clarifai_grpc.grpc.api.status import status_code_pb2\n\nchannel = ClarifaiChannel.get_grpc_channel()\nstub = service_pb2_grpc.V2Stub(channel)\n\nmetadata = (("authorization", "Key " + PAT),)\n\nuserDataObject = resources_pb2.UserAppIDSet(user_id=USER_ID, app_id=APP_ID)\n\npost_model_evaluations = stub.PostEvaluations(\n    service_pb2.PostEvaluationsRequest(\n        user_app_id=userDataObject,\n        eval_metrics=[\n            resources_pb2.EvalMetrics(\n                model=resources_pb2.Model(\n                    app_id=APP_ID,\n                    user_id=USER_ID,\n                    id=MODEL_ID,\n                    model_version=resources_pb2.ModelVersion(id=MODEL_VERSION_ID),\n                )                \n            )\n        ],\n    ),\n    metadata=metadata,\n)\n\nif post_model_evaluations.status.code != status_code_pb2.SUCCESS:\n    print(post_model_evaluations.status)\n    raise Exception("Failed response, status: " + post_model_evaluations.status.description)\n\nprint(post_model_evaluations)\n',f='###########################################################################################\n# In this section, we set the user authentication, app ID, and the model evaluation ID.\n# Change these strings to run your own example.\n##########################################################################################\n\nUSER_ID = "YOUR_USER_ID_HERE"\n# Your PAT (Personal Access Token) can be found in the portal under Authentification\nPAT = "YOUR_PAT_HERE"\nAPP_ID = "text-search-app"\n# Change these to wait for your own model\'s evaluation results\nEVALUATION_ID = "e223fa4ac14b4784b223cd31cc545f34"\n\n##########################################################################\n# YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n##########################################################################\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import resources_pb2, service_pb2, service_pb2_grpc\nfrom clarifai_grpc.grpc.api.status import status_code_pb2\nimport time\n\nchannel = ClarifaiChannel.get_grpc_channel()\nstub = service_pb2_grpc.V2Stub(channel)\n\nmetadata = (("authorization", "Key " + PAT),)\n\nuserDataObject = resources_pb2.UserAppIDSet(user_id=USER_ID, app_id=APP_ID)\n\nwhile True:\n    get_evaluation_response = stub.GetEvaluation(\n        service_pb2.GetEvaluationRequest(\n            user_app_id=userDataObject,\n            evaluation_id=EVALUATION_ID,\n            fields=resources_pb2.FieldsValue(\n                confusion_matrix=True,\n                cooccurrence_matrix=True,\n                label_counts=True,\n                binary_metrics=True,\n                test_set=True,\n                metrics_by_area=True,\n                metrics_by_class=True,\n            ),\n        ),\n        metadata=metadata,\n    )\n\n    if get_evaluation_response.status.code != status_code_pb2.SUCCESS:\n        print(get_evaluation_response.status)\n        raise Exception("Get model version metrics failed: " + get_evaluation_response.status.description)\n\n    print(get_evaluation_response)\n    metrics_status_code = get_evaluation_response.eval_metrics.status.code\n    if metrics_status_code == status_code_pb2.MODEL_EVALUATED:\n        print("The model has been successfully evaluated.")\n        break\n    elif metrics_status_code in (\n        status_code_pb2.MODEL_NOT_EVALUATED,\n        status_code_pb2.MODEL_QUEUED_FOR_EVALUATION,\n        status_code_pb2.MODEL_EVALUATING,\n    ):\n        print("The model hasn\'t been evaluated yet. Trying again shortly.")\n        time.sleep(2)\n    else:\n        error_message = (\n            str(get_evaluation_response.status.code) + " " + \n            get_evaluation_response.status.description + " " + \n            get_evaluation_response.status.details\n        )\n        raise Exception(\n            f"Expected model to evaluate, but got {error_message}. Full response: {get_evaluation_response}"\n        )\n\nprint("The model metrics response object:")\nprint(get_evaluation_response)\n',m='status {\n  code: SUCCESS\n  description: "Ok"\n  req_id: "cbc9cbf2478ea008c68b74cc07126c05"\n}\neval_metrics {\n  status {\n    code: MODEL_QUEUED_FOR_EVALUATION\n    description: "Model is queued for evaluation."\n  }\n  user_id: "ei2leoz3s3iy"\n  app_id: "text-search-app"\n  id: "e223fa4ac14b4784b223cd31cc545f34"\n}',v='status {\n  code: SUCCESS\n  description: "Ok"\n  req_id: "aa8517cf0d340d6afef484ddae938124"\n}\neval_metrics {\n  status {\n    code: MODEL_EVALUATED\n    description: "Model was successfully evaluated."\n  }\n  summary {\n    macro_avg_roc_auc: 1.0\n    macro_avg_f1_score: 0.8809523582458496\n    macro_std_f1_score: 0.13677529990673065\n    macro_avg_precision: 0.9375\n    macro_avg_recall: 0.875\n  }\n  confusion_matrix {\n    matrix {\n      predicted: "positive"\n      actual: "positive"\n      value: 0.7497637867927551\n      predicted_concept {\n        id: "positive"\n        name: "positive"\n        value: 0.7497637867927551\n        app_id: "text-search-app"\n      }\n      actual_concept {\n        id: "positive"\n        name: "positive"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    matrix {\n      predicted: "negative"\n      actual: "positive"\n      value: 0.2502362132072449\n      predicted_concept {\n        id: "negative"\n        name: "negative"\n        value: 0.2502362132072449\n        app_id: "text-search-app"\n      }\n      actual_concept {\n        id: "positive"\n        name: "positive"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    matrix {\n      predicted: "positive"\n      actual: "negative"\n      value: 3.033356961168465e-07\n      predicted_concept {\n        id: "positive"\n        name: "positive"\n        value: 3.033356961168465e-07\n        app_id: "text-search-app"\n      }\n      actual_concept {\n        id: "negative"\n        name: "negative"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    matrix {\n      predicted: "negative"\n      actual: "negative"\n      value: 0.9999997019767761\n      predicted_concept {\n        id: "negative"\n        name: "negative"\n        value: 0.9999997019767761\n        app_id: "text-search-app"\n      }\n      actual_concept {\n        id: "negative"\n        name: "negative"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    concept_ids: "positive"\n    concept_ids: "negative"\n  }\n  cooccurrence_matrix {\n    matrix {\n      row: "positive"\n      col: "positive"\n      count: 10\n    }\n    matrix {\n      row: "negative"\n      col: "negative"\n      count: 11\n    }\n    concept_ids: "positive"\n    concept_ids: "negative"\n  }\n  label_counts {\n    positive_label_counts {\n      concept_name: "positive"\n      count: 10\n      concept {\n        id: "positive"\n        name: "positive"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    positive_label_counts {\n      concept_name: "negative"\n      count: 11\n      concept {\n        id: "negative"\n        name: "negative"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n  }\n  binary_metrics {\n    num_pos: 2\n    num_neg: 2\n    num_tot: 4\n    roc_auc: 1.0\n    f1: 0.8333333730697632\n    concept {\n      id: "positive"\n      name: "positive"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    roc_curve {\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 1.0\n      tpr: 0.0\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 1.0\n      thresholds: 1.0\n      thresholds: 0.9900000095367432\n      thresholds: 0.9800000190734863\n      thresholds: 0.9700000286102295\n      thresholds: 0.9599999785423279\n      thresholds: 0.949999988079071\n      thresholds: 0.9399999976158142\n      thresholds: 0.9300000071525574\n      thresholds: 0.9200000166893005\n      thresholds: 0.9100000262260437\n      thresholds: 0.8999999761581421\n      thresholds: 0.8899999856948853\n      thresholds: 0.8799999952316284\n      thresholds: 0.8700000047683716\n      thresholds: 0.8600000143051147\n      thresholds: 0.8500000238418579\n      thresholds: 0.8399999737739563\n      thresholds: 0.8299999833106995\n      thresholds: 0.8199999928474426\n      thresholds: 0.8100000023841858\n      thresholds: 0.800000011920929\n      thresholds: 0.7900000214576721\n      thresholds: 0.7799999713897705\n      thresholds: 0.7699999809265137\n      thresholds: 0.7599999904632568\n      thresholds: 0.75\n      thresholds: 0.7400000095367432\n      thresholds: 0.7300000190734863\n      thresholds: 0.7200000286102295\n      thresholds: 0.7099999785423279\n      thresholds: 0.699999988079071\n      thresholds: 0.6899999976158142\n      thresholds: 0.6800000071525574\n      thresholds: 0.6700000166893005\n      thresholds: 0.6600000262260437\n      thresholds: 0.6499999761581421\n      thresholds: 0.6399999856948853\n      thresholds: 0.6299999952316284\n      thresholds: 0.6200000047683716\n      thresholds: 0.6100000143051147\n      thresholds: 0.6000000238418579\n      thresholds: 0.5899999737739563\n      thresholds: 0.5799999833106995\n      thresholds: 0.5699999928474426\n      thresholds: 0.5600000023841858\n      thresholds: 0.550000011920929\n      thresholds: 0.5400000214576721\n      thresholds: 0.5299999713897705\n      thresholds: 0.5199999809265137\n      thresholds: 0.5099999904632568\n      thresholds: 0.5\n      thresholds: 0.49000000953674316\n      thresholds: 0.47999998927116394\n      thresholds: 0.4699999988079071\n      thresholds: 0.46000000834465027\n      thresholds: 0.44999998807907104\n      thresholds: 0.4399999976158142\n      thresholds: 0.4300000071525574\n      thresholds: 0.41999998688697815\n      thresholds: 0.4099999964237213\n      thresholds: 0.4000000059604645\n      thresholds: 0.38999998569488525\n      thresholds: 0.3799999952316284\n      thresholds: 0.3700000047683716\n      thresholds: 0.36000001430511475\n      thresholds: 0.3499999940395355\n      thresholds: 0.3400000035762787\n      thresholds: 0.33000001311302185\n      thresholds: 0.3199999928474426\n      thresholds: 0.3100000023841858\n      thresholds: 0.30000001192092896\n      thresholds: 0.28999999165534973\n      thresholds: 0.2800000011920929\n      thresholds: 0.27000001072883606\n      thresholds: 0.25999999046325684\n      thresholds: 0.25\n      thresholds: 0.23999999463558197\n      thresholds: 0.23000000417232513\n      thresholds: 0.2199999988079071\n      thresholds: 0.20999999344348907\n      thresholds: 0.20000000298023224\n      thresholds: 0.1899999976158142\n      thresholds: 0.18000000715255737\n      thresholds: 0.17000000178813934\n      thresholds: 0.1599999964237213\n      thresholds: 0.15000000596046448\n      thresholds: 0.14000000059604645\n      thresholds: 0.12999999523162842\n      thresholds: 0.11999999731779099\n      thresholds: 0.10999999940395355\n      thresholds: 0.10000000149011612\n      thresholds: 0.09000000357627869\n      thresholds: 0.07999999821186066\n      thresholds: 0.07000000029802322\n      thresholds: 0.05999999865889549\n      thresholds: 0.05000000074505806\n      thresholds: 0.03999999910593033\n      thresholds: 0.029999999329447746\n      thresholds: 0.019999999552965164\n      thresholds: 0.009999999776482582\n      thresholds: 0.0\n    }\n    precision_recall_curve {\n      recall: 1.0\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.0\n      precision: 0.5\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      thresholds: 0.0\n      thresholds: 0.009999999776482582\n      thresholds: 0.019999999552965164\n      thresholds: 0.029999999329447746\n      thresholds: 0.03999999910593033\n      thresholds: 0.05000000074505806\n      thresholds: 0.05999999865889549\n      thresholds: 0.07000000029802322\n      thresholds: 0.07999999821186066\n      thresholds: 0.09000000357627869\n      thresholds: 0.10000000149011612\n      thresholds: 0.10999999940395355\n      thresholds: 0.11999999731779099\n      thresholds: 0.12999999523162842\n      thresholds: 0.14000000059604645\n      thresholds: 0.15000000596046448\n      thresholds: 0.1599999964237213\n      thresholds: 0.17000000178813934\n      thresholds: 0.18000000715255737\n      thresholds: 0.1899999976158142\n      thresholds: 0.20000000298023224\n      thresholds: 0.20999999344348907\n      thresholds: 0.2199999988079071\n      thresholds: 0.23000000417232513\n      thresholds: 0.23999999463558197\n      thresholds: 0.25\n      thresholds: 0.25999999046325684\n      thresholds: 0.27000001072883606\n      thresholds: 0.2800000011920929\n      thresholds: 0.28999999165534973\n      thresholds: 0.30000001192092896\n      thresholds: 0.3100000023841858\n      thresholds: 0.3199999928474426\n      thresholds: 0.33000001311302185\n      thresholds: 0.3400000035762787\n      thresholds: 0.3499999940395355\n      thresholds: 0.36000001430511475\n      thresholds: 0.3700000047683716\n      thresholds: 0.3799999952316284\n      thresholds: 0.38999998569488525\n      thresholds: 0.4000000059604645\n      thresholds: 0.4099999964237213\n      thresholds: 0.41999998688697815\n      thresholds: 0.4300000071525574\n      thresholds: 0.4399999976158142\n      thresholds: 0.44999998807907104\n      thresholds: 0.46000000834465027\n      thresholds: 0.4699999988079071\n      thresholds: 0.47999998927116394\n      thresholds: 0.49000000953674316\n      thresholds: 0.5\n      thresholds: 0.5099999904632568\n      thresholds: 0.5199999809265137\n      thresholds: 0.5299999713897705\n      thresholds: 0.5400000214576721\n      thresholds: 0.550000011920929\n      thresholds: 0.5600000023841858\n      thresholds: 0.5699999928474426\n      thresholds: 0.5799999833106995\n      thresholds: 0.5899999737739563\n      thresholds: 0.6000000238418579\n      thresholds: 0.6100000143051147\n      thresholds: 0.6200000047683716\n      thresholds: 0.6299999952316284\n      thresholds: 0.6399999856948853\n      thresholds: 0.6499999761581421\n      thresholds: 0.6600000262260437\n      thresholds: 0.6700000166893005\n      thresholds: 0.6800000071525574\n      thresholds: 0.6899999976158142\n      thresholds: 0.699999988079071\n      thresholds: 0.7099999785423279\n      thresholds: 0.7200000286102295\n      thresholds: 0.7300000190734863\n      thresholds: 0.7400000095367432\n      thresholds: 0.75\n      thresholds: 0.7599999904632568\n      thresholds: 0.7699999809265137\n      thresholds: 0.7799999713897705\n      thresholds: 0.7900000214576721\n      thresholds: 0.800000011920929\n      thresholds: 0.8100000023841858\n      thresholds: 0.8199999928474426\n      thresholds: 0.8299999833106995\n      thresholds: 0.8399999737739563\n      thresholds: 0.8500000238418579\n      thresholds: 0.8600000143051147\n      thresholds: 0.8700000047683716\n      thresholds: 0.8799999952316284\n      thresholds: 0.8899999856948853\n      thresholds: 0.8999999761581421\n      thresholds: 0.9100000262260437\n      thresholds: 0.9200000166893005\n      thresholds: 0.9300000071525574\n      thresholds: 0.9399999976158142\n      thresholds: 0.949999988079071\n      thresholds: 0.9599999785423279\n      thresholds: 0.9700000286102295\n      thresholds: 0.9800000190734863\n      thresholds: 0.9900000095367432\n      thresholds: 1.0\n    }\n  }\n  binary_metrics {\n    num_pos: 2\n    num_neg: 2\n    num_tot: 4\n    roc_auc: 1.0\n    f1: 0.9285714626312256\n    concept {\n      id: "negative"\n      name: "negative"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    roc_curve {\n      fpr: 0.0\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 1.0\n      tpr: 0.5\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      thresholds: 1.0\n      thresholds: 0.9900000095367432\n      thresholds: 0.9800000190734863\n      thresholds: 0.9700000286102295\n      thresholds: 0.9599999785423279\n      thresholds: 0.949999988079071\n      thresholds: 0.9399999976158142\n      thresholds: 0.9300000071525574\n      thresholds: 0.9200000166893005\n      thresholds: 0.9100000262260437\n      thresholds: 0.8999999761581421\n      thresholds: 0.8899999856948853\n      thresholds: 0.8799999952316284\n      thresholds: 0.8700000047683716\n      thresholds: 0.8600000143051147\n      thresholds: 0.8500000238418579\n      thresholds: 0.8399999737739563\n      thresholds: 0.8299999833106995\n      thresholds: 0.8199999928474426\n      thresholds: 0.8100000023841858\n      thresholds: 0.800000011920929\n      thresholds: 0.7900000214576721\n      thresholds: 0.7799999713897705\n      thresholds: 0.7699999809265137\n      thresholds: 0.7599999904632568\n      thresholds: 0.75\n      thresholds: 0.7400000095367432\n      thresholds: 0.7300000190734863\n      thresholds: 0.7200000286102295\n      thresholds: 0.7099999785423279\n      thresholds: 0.699999988079071\n      thresholds: 0.6899999976158142\n      thresholds: 0.6800000071525574\n      thresholds: 0.6700000166893005\n      thresholds: 0.6600000262260437\n      thresholds: 0.6499999761581421\n      thresholds: 0.6399999856948853\n      thresholds: 0.6299999952316284\n      thresholds: 0.6200000047683716\n      thresholds: 0.6100000143051147\n      thresholds: 0.6000000238418579\n      thresholds: 0.5899999737739563\n      thresholds: 0.5799999833106995\n      thresholds: 0.5699999928474426\n      thresholds: 0.5600000023841858\n      thresholds: 0.550000011920929\n      thresholds: 0.5400000214576721\n      thresholds: 0.5299999713897705\n      thresholds: 0.5199999809265137\n      thresholds: 0.5099999904632568\n      thresholds: 0.5\n      thresholds: 0.49000000953674316\n      thresholds: 0.47999998927116394\n      thresholds: 0.4699999988079071\n      thresholds: 0.46000000834465027\n      thresholds: 0.44999998807907104\n      thresholds: 0.4399999976158142\n      thresholds: 0.4300000071525574\n      thresholds: 0.41999998688697815\n      thresholds: 0.4099999964237213\n      thresholds: 0.4000000059604645\n      thresholds: 0.38999998569488525\n      thresholds: 0.3799999952316284\n      thresholds: 0.3700000047683716\n      thresholds: 0.36000001430511475\n      thresholds: 0.3499999940395355\n      thresholds: 0.3400000035762787\n      thresholds: 0.33000001311302185\n      thresholds: 0.3199999928474426\n      thresholds: 0.3100000023841858\n      thresholds: 0.30000001192092896\n      thresholds: 0.28999999165534973\n      thresholds: 0.2800000011920929\n      thresholds: 0.27000001072883606\n      thresholds: 0.25999999046325684\n      thresholds: 0.25\n      thresholds: 0.23999999463558197\n      thresholds: 0.23000000417232513\n      thresholds: 0.2199999988079071\n      thresholds: 0.20999999344348907\n      thresholds: 0.20000000298023224\n      thresholds: 0.1899999976158142\n      thresholds: 0.18000000715255737\n      thresholds: 0.17000000178813934\n      thresholds: 0.1599999964237213\n      thresholds: 0.15000000596046448\n      thresholds: 0.14000000059604645\n      thresholds: 0.12999999523162842\n      thresholds: 0.11999999731779099\n      thresholds: 0.10999999940395355\n      thresholds: 0.10000000149011612\n      thresholds: 0.09000000357627869\n      thresholds: 0.07999999821186066\n      thresholds: 0.07000000029802322\n      thresholds: 0.05999999865889549\n      thresholds: 0.05000000074505806\n      thresholds: 0.03999999910593033\n      thresholds: 0.029999999329447746\n      thresholds: 0.019999999552965164\n      thresholds: 0.009999999776482582\n      thresholds: 0.0\n    }\n    precision_recall_curve {\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 0.5\n      precision: 0.5\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 1.0\n      thresholds: 0.0\n      thresholds: 0.009999999776482582\n      thresholds: 0.019999999552965164\n      thresholds: 0.029999999329447746\n      thresholds: 0.03999999910593033\n      thresholds: 0.05000000074505806\n      thresholds: 0.05999999865889549\n      thresholds: 0.07000000029802322\n      thresholds: 0.07999999821186066\n      thresholds: 0.09000000357627869\n      thresholds: 0.10000000149011612\n      thresholds: 0.10999999940395355\n      thresholds: 0.11999999731779099\n      thresholds: 0.12999999523162842\n      thresholds: 0.14000000059604645\n      thresholds: 0.15000000596046448\n      thresholds: 0.1599999964237213\n      thresholds: 0.17000000178813934\n      thresholds: 0.18000000715255737\n      thresholds: 0.1899999976158142\n      thresholds: 0.20000000298023224\n      thresholds: 0.20999999344348907\n      thresholds: 0.2199999988079071\n      thresholds: 0.23000000417232513\n      thresholds: 0.23999999463558197\n      thresholds: 0.25\n      thresholds: 0.25999999046325684\n      thresholds: 0.27000001072883606\n      thresholds: 0.2800000011920929\n      thresholds: 0.28999999165534973\n      thresholds: 0.30000001192092896\n      thresholds: 0.3100000023841858\n      thresholds: 0.3199999928474426\n      thresholds: 0.33000001311302185\n      thresholds: 0.3400000035762787\n      thresholds: 0.3499999940395355\n      thresholds: 0.36000001430511475\n      thresholds: 0.3700000047683716\n      thresholds: 0.3799999952316284\n      thresholds: 0.38999998569488525\n      thresholds: 0.4000000059604645\n      thresholds: 0.4099999964237213\n      thresholds: 0.41999998688697815\n      thresholds: 0.4300000071525574\n      thresholds: 0.4399999976158142\n      thresholds: 0.44999998807907104\n      thresholds: 0.46000000834465027\n      thresholds: 0.4699999988079071\n      thresholds: 0.47999998927116394\n      thresholds: 0.49000000953674316\n      thresholds: 0.5\n      thresholds: 0.5099999904632568\n      thresholds: 0.5199999809265137\n      thresholds: 0.5299999713897705\n      thresholds: 0.5400000214576721\n      thresholds: 0.550000011920929\n      thresholds: 0.5600000023841858\n      thresholds: 0.5699999928474426\n      thresholds: 0.5799999833106995\n      thresholds: 0.5899999737739563\n      thresholds: 0.6000000238418579\n      thresholds: 0.6100000143051147\n      thresholds: 0.6200000047683716\n      thresholds: 0.6299999952316284\n      thresholds: 0.6399999856948853\n      thresholds: 0.6499999761581421\n      thresholds: 0.6600000262260437\n      thresholds: 0.6700000166893005\n      thresholds: 0.6800000071525574\n      thresholds: 0.6899999976158142\n      thresholds: 0.699999988079071\n      thresholds: 0.7099999785423279\n      thresholds: 0.7200000286102295\n      thresholds: 0.7300000190734863\n      thresholds: 0.7400000095367432\n      thresholds: 0.75\n      thresholds: 0.7599999904632568\n      thresholds: 0.7699999809265137\n      thresholds: 0.7799999713897705\n      thresholds: 0.7900000214576721\n      thresholds: 0.800000011920929\n      thresholds: 0.8100000023841858\n      thresholds: 0.8199999928474426\n      thresholds: 0.8299999833106995\n      thresholds: 0.8399999737739563\n      thresholds: 0.8500000238418579\n      thresholds: 0.8600000143051147\n      thresholds: 0.8700000047683716\n      thresholds: 0.8799999952316284\n      thresholds: 0.8899999856948853\n      thresholds: 0.8999999761581421\n      thresholds: 0.9100000262260437\n      thresholds: 0.9200000166893005\n      thresholds: 0.9300000071525574\n      thresholds: 0.9399999976158142\n      thresholds: 0.949999988079071\n      thresholds: 0.9599999785423279\n      thresholds: 0.9700000286102295\n      thresholds: 0.9800000190734863\n      thresholds: 0.9900000095367432\n      thresholds: 1.0\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 0.9999601244926453\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 3.9902104617794976e-05\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "positive"\n      name: "positive"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "UyZACEDqN6WhAQOO"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/e9dc85e0585a7a6d32da791e6cfa2c52"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/e9dc85e0585a7a6d32da791e6cfa2c52"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 507\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687435506\n        nanos: 969900000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 876378000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 0.9999999403953552\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 6.925120743517255e-08\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "negative"\n      name: "negative"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "A2SsbMJrHqiAUmnr"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/77fe0c1ff92bcb6d876ec8e551e9268f"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/77fe0c1ff92bcb6d876ec8e551e9268f"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 440\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687436288\n        nanos: 370201000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 876378000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 0.9999988675117493\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 1.1424209560573217e-06\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "negative"\n      name: "negative"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "NnIBViXRFrXAGKkd"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/65d33e371bbdd16cbcf7a2826ab0bcc1"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/65d33e371bbdd16cbcf7a2826ab0bcc1"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 359\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687435598\n        nanos: 758239000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 876378000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 0.9999937415122986\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 6.254503659874899e-06\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "positive"\n      name: "positive"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "OK2cJALgpFQYafF2"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/90fd9b5c2f9af536520add1a2da13db8"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/90fd9b5c2f9af536520add1a2da13db8"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 399\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687435419\n        nanos: 661211000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 810009000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 0.9985570907592773\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 0.001442914130166173\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "positive"\n      name: "positive"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "YViTPPBzt3pTlmgY"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/5bccdbc8c9f8fb9a673d61dc2e32e40b"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/5bccdbc8c9f8fb9a673d61dc2e32e40b"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 413\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687436129\n        nanos: 772735000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 876378000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  id: "e223fa4ac14b4784b223cd31cc545f34"\n  eval_info {\n    params {\n      fields {\n        key: "dataset_id"\n        value {\n          string_value: ""\n        }\n      }\n      fields {\n        key: "dataset_version_id"\n        value {\n          string_value: ""\n        }\n      }\n      fields {\n        key: "use_kfold"\n        value {\n          bool_value: true\n        }\n      }\n    }\n  }\n  model {\n    id: "text-model-1"\n    app_id: "text-search-app"\n    model_version {\n      id: "3ad2c152232e46ebb16ed31f67dc54d8"\n      created_at {\n        seconds: 1693564041\n        nanos: 515456000\n      }\n      status {\n        code: MODEL_TRAINED\n        description: "Model is trained and ready"\n      }\n      active_concept_count: 2\n      metrics {\n        status {\n          code: MODEL_EVALUATED\n          description: "Model was successfully evaluated."\n        }\n        summary {\n          macro_avg_roc_auc: 1.0\n          macro_avg_f1_score: 0.8809523582458496\n          macro_std_f1_score: 0.13677529990673065\n          macro_avg_precision: 0.9375\n          macro_avg_recall: 0.875\n        }\n      }\n      total_input_count: 21\n      completed_at {\n        seconds: 1693564044\n        nanos: 915680000\n      }\n      visibility {\n        gettable: PRIVATE\n      }\n      app_id: "text-search-app"\n      user_id: "alfrick"\n      metadata {\n      }\n      output_info {\n        output_config {\n        }\n        message: "Show output_info with: GET /models/{model_id}/output_info"\n        params {\n          fields {\n            key: "max_concepts"\n            value {\n              number_value: 20.0\n            }\n          }\n          fields {\n            key: "min_value"\n            value {\n              number_value: 0.0\n            }\n          }\n          fields {\n            key: "select_concepts"\n            value {\n              list_value {\n              }\n            }\n          }\n        }\n      }\n      input_info {\n        base_embed_model {\n          id: "multilingual-text-embedding"\n          app_id: "main"\n          model_version {\n            id: "9b33adf15280465b857163ddaaacdcb1"\n          }\n          user_id: "clarifai"\n          model_type_id: "text-embedder"\n        }\n      }\n      train_info {\n        params {\n          fields {\n            key: "dataset_id"\n            value {\n              string_value: ""\n            }\n          }\n          fields {\n            key: "dataset_version_id"\n            value {\n              string_value: ""\n            }\n          }\n          fields {\n            key: "enrich_dataset"\n            value {\n              string_value: "Automatic"\n            }\n          }\n        }\n      }\n      import_info {\n      }\n    }\n    user_id: "alfrick"\n    model_type_id: "embedding-classifier"\n  }\n  user_id: "alfrick"\n  app_id: "text-search-app"\n}\n\nThe model has been successfully evaluated.\nThe model metrics response object:\nstatus {\n  code: SUCCESS\n  description: "Ok"\n  req_id: "aa8517cf0d340d6afef484ddae938124"\n}\neval_metrics {\n  status {\n    code: MODEL_EVALUATED\n    description: "Model was successfully evaluated."\n  }\n  summary {\n    macro_avg_roc_auc: 1.0\n    macro_avg_f1_score: 0.8809523582458496\n    macro_std_f1_score: 0.13677529990673065\n    macro_avg_precision: 0.9375\n    macro_avg_recall: 0.875\n  }\n  confusion_matrix {\n    matrix {\n      predicted: "positive"\n      actual: "positive"\n      value: 0.7497637867927551\n      predicted_concept {\n        id: "positive"\n        name: "positive"\n        value: 0.7497637867927551\n        app_id: "text-search-app"\n      }\n      actual_concept {\n        id: "positive"\n        name: "positive"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    matrix {\n      predicted: "negative"\n      actual: "positive"\n      value: 0.2502362132072449\n      predicted_concept {\n        id: "negative"\n        name: "negative"\n        value: 0.2502362132072449\n        app_id: "text-search-app"\n      }\n      actual_concept {\n        id: "positive"\n        name: "positive"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    matrix {\n      predicted: "positive"\n      actual: "negative"\n      value: 3.033356961168465e-07\n      predicted_concept {\n        id: "positive"\n        name: "positive"\n        value: 3.033356961168465e-07\n        app_id: "text-search-app"\n      }\n      actual_concept {\n        id: "negative"\n        name: "negative"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    matrix {\n      predicted: "negative"\n      actual: "negative"\n      value: 0.9999997019767761\n      predicted_concept {\n        id: "negative"\n        name: "negative"\n        value: 0.9999997019767761\n        app_id: "text-search-app"\n      }\n      actual_concept {\n        id: "negative"\n        name: "negative"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    concept_ids: "positive"\n    concept_ids: "negative"\n  }\n  cooccurrence_matrix {\n    matrix {\n      row: "positive"\n      col: "positive"\n      count: 10\n    }\n    matrix {\n      row: "negative"\n      col: "negative"\n      count: 11\n    }\n    concept_ids: "positive"\n    concept_ids: "negative"\n  }\n  label_counts {\n    positive_label_counts {\n      concept_name: "positive"\n      count: 10\n      concept {\n        id: "positive"\n        name: "positive"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n    positive_label_counts {\n      concept_name: "negative"\n      count: 11\n      concept {\n        id: "negative"\n        name: "negative"\n        value: 1.0\n        app_id: "text-search-app"\n      }\n    }\n  }\n  binary_metrics {\n    num_pos: 2\n    num_neg: 2\n    num_tot: 4\n    roc_auc: 1.0\n    f1: 0.8333333730697632\n    concept {\n      id: "positive"\n      name: "positive"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    roc_curve {\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 0.0\n      fpr: 1.0\n      tpr: 0.0\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 0.75\n      tpr: 1.0\n      thresholds: 1.0\n      thresholds: 0.9900000095367432\n      thresholds: 0.9800000190734863\n      thresholds: 0.9700000286102295\n      thresholds: 0.9599999785423279\n      thresholds: 0.949999988079071\n      thresholds: 0.9399999976158142\n      thresholds: 0.9300000071525574\n      thresholds: 0.9200000166893005\n      thresholds: 0.9100000262260437\n      thresholds: 0.8999999761581421\n      thresholds: 0.8899999856948853\n      thresholds: 0.8799999952316284\n      thresholds: 0.8700000047683716\n      thresholds: 0.8600000143051147\n      thresholds: 0.8500000238418579\n      thresholds: 0.8399999737739563\n      thresholds: 0.8299999833106995\n      thresholds: 0.8199999928474426\n      thresholds: 0.8100000023841858\n      thresholds: 0.800000011920929\n      thresholds: 0.7900000214576721\n      thresholds: 0.7799999713897705\n      thresholds: 0.7699999809265137\n      thresholds: 0.7599999904632568\n      thresholds: 0.75\n      thresholds: 0.7400000095367432\n      thresholds: 0.7300000190734863\n      thresholds: 0.7200000286102295\n      thresholds: 0.7099999785423279\n      thresholds: 0.699999988079071\n      thresholds: 0.6899999976158142\n      thresholds: 0.6800000071525574\n      thresholds: 0.6700000166893005\n      thresholds: 0.6600000262260437\n      thresholds: 0.6499999761581421\n      thresholds: 0.6399999856948853\n      thresholds: 0.6299999952316284\n      thresholds: 0.6200000047683716\n      thresholds: 0.6100000143051147\n      thresholds: 0.6000000238418579\n      thresholds: 0.5899999737739563\n      thresholds: 0.5799999833106995\n      thresholds: 0.5699999928474426\n      thresholds: 0.5600000023841858\n      thresholds: 0.550000011920929\n      thresholds: 0.5400000214576721\n      thresholds: 0.5299999713897705\n      thresholds: 0.5199999809265137\n      thresholds: 0.5099999904632568\n      thresholds: 0.5\n      thresholds: 0.49000000953674316\n      thresholds: 0.47999998927116394\n      thresholds: 0.4699999988079071\n      thresholds: 0.46000000834465027\n      thresholds: 0.44999998807907104\n      thresholds: 0.4399999976158142\n      thresholds: 0.4300000071525574\n      thresholds: 0.41999998688697815\n      thresholds: 0.4099999964237213\n      thresholds: 0.4000000059604645\n      thresholds: 0.38999998569488525\n      thresholds: 0.3799999952316284\n      thresholds: 0.3700000047683716\n      thresholds: 0.36000001430511475\n      thresholds: 0.3499999940395355\n      thresholds: 0.3400000035762787\n      thresholds: 0.33000001311302185\n      thresholds: 0.3199999928474426\n      thresholds: 0.3100000023841858\n      thresholds: 0.30000001192092896\n      thresholds: 0.28999999165534973\n      thresholds: 0.2800000011920929\n      thresholds: 0.27000001072883606\n      thresholds: 0.25999999046325684\n      thresholds: 0.25\n      thresholds: 0.23999999463558197\n      thresholds: 0.23000000417232513\n      thresholds: 0.2199999988079071\n      thresholds: 0.20999999344348907\n      thresholds: 0.20000000298023224\n      thresholds: 0.1899999976158142\n      thresholds: 0.18000000715255737\n      thresholds: 0.17000000178813934\n      thresholds: 0.1599999964237213\n      thresholds: 0.15000000596046448\n      thresholds: 0.14000000059604645\n      thresholds: 0.12999999523162842\n      thresholds: 0.11999999731779099\n      thresholds: 0.10999999940395355\n      thresholds: 0.10000000149011612\n      thresholds: 0.09000000357627869\n      thresholds: 0.07999999821186066\n      thresholds: 0.07000000029802322\n      thresholds: 0.05999999865889549\n      thresholds: 0.05000000074505806\n      thresholds: 0.03999999910593033\n      thresholds: 0.029999999329447746\n      thresholds: 0.019999999552965164\n      thresholds: 0.009999999776482582\n      thresholds: 0.0\n    }\n    precision_recall_curve {\n      recall: 1.0\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.75\n      recall: 0.0\n      precision: 0.5\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      precision: 1.0\n      thresholds: 0.0\n      thresholds: 0.009999999776482582\n      thresholds: 0.019999999552965164\n      thresholds: 0.029999999329447746\n      thresholds: 0.03999999910593033\n      thresholds: 0.05000000074505806\n      thresholds: 0.05999999865889549\n      thresholds: 0.07000000029802322\n      thresholds: 0.07999999821186066\n      thresholds: 0.09000000357627869\n      thresholds: 0.10000000149011612\n      thresholds: 0.10999999940395355\n      thresholds: 0.11999999731779099\n      thresholds: 0.12999999523162842\n      thresholds: 0.14000000059604645\n      thresholds: 0.15000000596046448\n      thresholds: 0.1599999964237213\n      thresholds: 0.17000000178813934\n      thresholds: 0.18000000715255737\n      thresholds: 0.1899999976158142\n      thresholds: 0.20000000298023224\n      thresholds: 0.20999999344348907\n      thresholds: 0.2199999988079071\n      thresholds: 0.23000000417232513\n      thresholds: 0.23999999463558197\n      thresholds: 0.25\n      thresholds: 0.25999999046325684\n      thresholds: 0.27000001072883606\n      thresholds: 0.2800000011920929\n      thresholds: 0.28999999165534973\n      thresholds: 0.30000001192092896\n      thresholds: 0.3100000023841858\n      thresholds: 0.3199999928474426\n      thresholds: 0.33000001311302185\n      thresholds: 0.3400000035762787\n      thresholds: 0.3499999940395355\n      thresholds: 0.36000001430511475\n      thresholds: 0.3700000047683716\n      thresholds: 0.3799999952316284\n      thresholds: 0.38999998569488525\n      thresholds: 0.4000000059604645\n      thresholds: 0.4099999964237213\n      thresholds: 0.41999998688697815\n      thresholds: 0.4300000071525574\n      thresholds: 0.4399999976158142\n      thresholds: 0.44999998807907104\n      thresholds: 0.46000000834465027\n      thresholds: 0.4699999988079071\n      thresholds: 0.47999998927116394\n      thresholds: 0.49000000953674316\n      thresholds: 0.5\n      thresholds: 0.5099999904632568\n      thresholds: 0.5199999809265137\n      thresholds: 0.5299999713897705\n      thresholds: 0.5400000214576721\n      thresholds: 0.550000011920929\n      thresholds: 0.5600000023841858\n      thresholds: 0.5699999928474426\n      thresholds: 0.5799999833106995\n      thresholds: 0.5899999737739563\n      thresholds: 0.6000000238418579\n      thresholds: 0.6100000143051147\n      thresholds: 0.6200000047683716\n      thresholds: 0.6299999952316284\n      thresholds: 0.6399999856948853\n      thresholds: 0.6499999761581421\n      thresholds: 0.6600000262260437\n      thresholds: 0.6700000166893005\n      thresholds: 0.6800000071525574\n      thresholds: 0.6899999976158142\n      thresholds: 0.699999988079071\n      thresholds: 0.7099999785423279\n      thresholds: 0.7200000286102295\n      thresholds: 0.7300000190734863\n      thresholds: 0.7400000095367432\n      thresholds: 0.75\n      thresholds: 0.7599999904632568\n      thresholds: 0.7699999809265137\n      thresholds: 0.7799999713897705\n      thresholds: 0.7900000214576721\n      thresholds: 0.800000011920929\n      thresholds: 0.8100000023841858\n      thresholds: 0.8199999928474426\n      thresholds: 0.8299999833106995\n      thresholds: 0.8399999737739563\n      thresholds: 0.8500000238418579\n      thresholds: 0.8600000143051147\n      thresholds: 0.8700000047683716\n      thresholds: 0.8799999952316284\n      thresholds: 0.8899999856948853\n      thresholds: 0.8999999761581421\n      thresholds: 0.9100000262260437\n      thresholds: 0.9200000166893005\n      thresholds: 0.9300000071525574\n      thresholds: 0.9399999976158142\n      thresholds: 0.949999988079071\n      thresholds: 0.9599999785423279\n      thresholds: 0.9700000286102295\n      thresholds: 0.9800000190734863\n      thresholds: 0.9900000095367432\n      thresholds: 1.0\n    }\n  }\n  binary_metrics {\n    num_pos: 2\n    num_neg: 2\n    num_tot: 4\n    roc_auc: 1.0\n    f1: 0.9285714626312256\n    concept {\n      id: "negative"\n      name: "negative"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    roc_curve {\n      fpr: 0.0\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 0.25\n      fpr: 1.0\n      tpr: 0.5\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      tpr: 1.0\n      thresholds: 1.0\n      thresholds: 0.9900000095367432\n      thresholds: 0.9800000190734863\n      thresholds: 0.9700000286102295\n      thresholds: 0.9599999785423279\n      thresholds: 0.949999988079071\n      thresholds: 0.9399999976158142\n      thresholds: 0.9300000071525574\n      thresholds: 0.9200000166893005\n      thresholds: 0.9100000262260437\n      thresholds: 0.8999999761581421\n      thresholds: 0.8899999856948853\n      thresholds: 0.8799999952316284\n      thresholds: 0.8700000047683716\n      thresholds: 0.8600000143051147\n      thresholds: 0.8500000238418579\n      thresholds: 0.8399999737739563\n      thresholds: 0.8299999833106995\n      thresholds: 0.8199999928474426\n      thresholds: 0.8100000023841858\n      thresholds: 0.800000011920929\n      thresholds: 0.7900000214576721\n      thresholds: 0.7799999713897705\n      thresholds: 0.7699999809265137\n      thresholds: 0.7599999904632568\n      thresholds: 0.75\n      thresholds: 0.7400000095367432\n      thresholds: 0.7300000190734863\n      thresholds: 0.7200000286102295\n      thresholds: 0.7099999785423279\n      thresholds: 0.699999988079071\n      thresholds: 0.6899999976158142\n      thresholds: 0.6800000071525574\n      thresholds: 0.6700000166893005\n      thresholds: 0.6600000262260437\n      thresholds: 0.6499999761581421\n      thresholds: 0.6399999856948853\n      thresholds: 0.6299999952316284\n      thresholds: 0.6200000047683716\n      thresholds: 0.6100000143051147\n      thresholds: 0.6000000238418579\n      thresholds: 0.5899999737739563\n      thresholds: 0.5799999833106995\n      thresholds: 0.5699999928474426\n      thresholds: 0.5600000023841858\n      thresholds: 0.550000011920929\n      thresholds: 0.5400000214576721\n      thresholds: 0.5299999713897705\n      thresholds: 0.5199999809265137\n      thresholds: 0.5099999904632568\n      thresholds: 0.5\n      thresholds: 0.49000000953674316\n      thresholds: 0.47999998927116394\n      thresholds: 0.4699999988079071\n      thresholds: 0.46000000834465027\n      thresholds: 0.44999998807907104\n      thresholds: 0.4399999976158142\n      thresholds: 0.4300000071525574\n      thresholds: 0.41999998688697815\n      thresholds: 0.4099999964237213\n      thresholds: 0.4000000059604645\n      thresholds: 0.38999998569488525\n      thresholds: 0.3799999952316284\n      thresholds: 0.3700000047683716\n      thresholds: 0.36000001430511475\n      thresholds: 0.3499999940395355\n      thresholds: 0.3400000035762787\n      thresholds: 0.33000001311302185\n      thresholds: 0.3199999928474426\n      thresholds: 0.3100000023841858\n      thresholds: 0.30000001192092896\n      thresholds: 0.28999999165534973\n      thresholds: 0.2800000011920929\n      thresholds: 0.27000001072883606\n      thresholds: 0.25999999046325684\n      thresholds: 0.25\n      thresholds: 0.23999999463558197\n      thresholds: 0.23000000417232513\n      thresholds: 0.2199999988079071\n      thresholds: 0.20999999344348907\n      thresholds: 0.20000000298023224\n      thresholds: 0.1899999976158142\n      thresholds: 0.18000000715255737\n      thresholds: 0.17000000178813934\n      thresholds: 0.1599999964237213\n      thresholds: 0.15000000596046448\n      thresholds: 0.14000000059604645\n      thresholds: 0.12999999523162842\n      thresholds: 0.11999999731779099\n      thresholds: 0.10999999940395355\n      thresholds: 0.10000000149011612\n      thresholds: 0.09000000357627869\n      thresholds: 0.07999999821186066\n      thresholds: 0.07000000029802322\n      thresholds: 0.05999999865889549\n      thresholds: 0.05000000074505806\n      thresholds: 0.03999999910593033\n      thresholds: 0.029999999329447746\n      thresholds: 0.019999999552965164\n      thresholds: 0.009999999776482582\n      thresholds: 0.0\n    }\n    precision_recall_curve {\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 1.0\n      recall: 0.5\n      precision: 0.5\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 0.875\n      precision: 1.0\n      thresholds: 0.0\n      thresholds: 0.009999999776482582\n      thresholds: 0.019999999552965164\n      thresholds: 0.029999999329447746\n      thresholds: 0.03999999910593033\n      thresholds: 0.05000000074505806\n      thresholds: 0.05999999865889549\n      thresholds: 0.07000000029802322\n      thresholds: 0.07999999821186066\n      thresholds: 0.09000000357627869\n      thresholds: 0.10000000149011612\n      thresholds: 0.10999999940395355\n      thresholds: 0.11999999731779099\n      thresholds: 0.12999999523162842\n      thresholds: 0.14000000059604645\n      thresholds: 0.15000000596046448\n      thresholds: 0.1599999964237213\n      thresholds: 0.17000000178813934\n      thresholds: 0.18000000715255737\n      thresholds: 0.1899999976158142\n      thresholds: 0.20000000298023224\n      thresholds: 0.20999999344348907\n      thresholds: 0.2199999988079071\n      thresholds: 0.23000000417232513\n      thresholds: 0.23999999463558197\n      thresholds: 0.25\n      thresholds: 0.25999999046325684\n      thresholds: 0.27000001072883606\n      thresholds: 0.2800000011920929\n      thresholds: 0.28999999165534973\n      thresholds: 0.30000001192092896\n      thresholds: 0.3100000023841858\n      thresholds: 0.3199999928474426\n      thresholds: 0.33000001311302185\n      thresholds: 0.3400000035762787\n      thresholds: 0.3499999940395355\n      thresholds: 0.36000001430511475\n      thresholds: 0.3700000047683716\n      thresholds: 0.3799999952316284\n      thresholds: 0.38999998569488525\n      thresholds: 0.4000000059604645\n      thresholds: 0.4099999964237213\n      thresholds: 0.41999998688697815\n      thresholds: 0.4300000071525574\n      thresholds: 0.4399999976158142\n      thresholds: 0.44999998807907104\n      thresholds: 0.46000000834465027\n      thresholds: 0.4699999988079071\n      thresholds: 0.47999998927116394\n      thresholds: 0.49000000953674316\n      thresholds: 0.5\n      thresholds: 0.5099999904632568\n      thresholds: 0.5199999809265137\n      thresholds: 0.5299999713897705\n      thresholds: 0.5400000214576721\n      thresholds: 0.550000011920929\n      thresholds: 0.5600000023841858\n      thresholds: 0.5699999928474426\n      thresholds: 0.5799999833106995\n      thresholds: 0.5899999737739563\n      thresholds: 0.6000000238418579\n      thresholds: 0.6100000143051147\n      thresholds: 0.6200000047683716\n      thresholds: 0.6299999952316284\n      thresholds: 0.6399999856948853\n      thresholds: 0.6499999761581421\n      thresholds: 0.6600000262260437\n      thresholds: 0.6700000166893005\n      thresholds: 0.6800000071525574\n      thresholds: 0.6899999976158142\n      thresholds: 0.699999988079071\n      thresholds: 0.7099999785423279\n      thresholds: 0.7200000286102295\n      thresholds: 0.7300000190734863\n      thresholds: 0.7400000095367432\n      thresholds: 0.75\n      thresholds: 0.7599999904632568\n      thresholds: 0.7699999809265137\n      thresholds: 0.7799999713897705\n      thresholds: 0.7900000214576721\n      thresholds: 0.800000011920929\n      thresholds: 0.8100000023841858\n      thresholds: 0.8199999928474426\n      thresholds: 0.8299999833106995\n      thresholds: 0.8399999737739563\n      thresholds: 0.8500000238418579\n      thresholds: 0.8600000143051147\n      thresholds: 0.8700000047683716\n      thresholds: 0.8799999952316284\n      thresholds: 0.8899999856948853\n      thresholds: 0.8999999761581421\n      thresholds: 0.9100000262260437\n      thresholds: 0.9200000166893005\n      thresholds: 0.9300000071525574\n      thresholds: 0.9399999976158142\n      thresholds: 0.949999988079071\n      thresholds: 0.9599999785423279\n      thresholds: 0.9700000286102295\n      thresholds: 0.9800000190734863\n      thresholds: 0.9900000095367432\n      thresholds: 1.0\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 0.9999601244926453\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 3.9902104617794976e-05\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "positive"\n      name: "positive"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "UyZACEDqN6WhAQOO"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/e9dc85e0585a7a6d32da791e6cfa2c52"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/e9dc85e0585a7a6d32da791e6cfa2c52"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 507\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687435506\n        nanos: 969900000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 876378000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 0.9999999403953552\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 6.925120743517255e-08\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "negative"\n      name: "negative"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "A2SsbMJrHqiAUmnr"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/77fe0c1ff92bcb6d876ec8e551e9268f"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/77fe0c1ff92bcb6d876ec8e551e9268f"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 440\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687436288\n        nanos: 370201000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 876378000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 0.9999988675117493\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 1.1424209560573217e-06\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "negative"\n      name: "negative"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "NnIBViXRFrXAGKkd"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/65d33e371bbdd16cbcf7a2826ab0bcc1"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/65d33e371bbdd16cbcf7a2826ab0bcc1"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 359\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687435598\n        nanos: 758239000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 876378000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 0.9999937415122986\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 6.254503659874899e-06\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "positive"\n      name: "positive"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "OK2cJALgpFQYafF2"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/90fd9b5c2f9af536520add1a2da13db8"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/90fd9b5c2f9af536520add1a2da13db8"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 399\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687435419\n        nanos: 661211000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 810009000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  test_set {\n    predicted_concepts {\n      id: "positive"\n      name: "positive"\n      value: 0.9985570907592773\n      app_id: "text-search-app"\n    }\n    predicted_concepts {\n      id: "negative"\n      name: "negative"\n      value: 0.001442914130166173\n      app_id: "text-search-app"\n    }\n    ground_truth_concepts {\n      id: "positive"\n      name: "positive"\n      value: 1.0\n      app_id: "text-search-app"\n    }\n    input {\n      id: "YViTPPBzt3pTlmgY"\n      data {\n        text {\n          url: "https://data.clarifai.com/orig/users/alfrick/apps/text-search-app/inputs/text/5bccdbc8c9f8fb9a673d61dc2e32e40b"\n          hosted {\n            prefix: "https://data.clarifai.com"\n            suffix: "users/alfrick/apps/text-search-app/inputs/text/5bccdbc8c9f8fb9a673d61dc2e32e40b"\n            sizes: "orig"\n            crossorigin: "use-credentials"\n          }\n          text_info {\n            char_count: 413\n            encoding: "UTF8"\n          }\n        }\n      }\n      created_at {\n        seconds: 1687436129\n        nanos: 772735000\n      }\n      modified_at {\n        seconds: 1690525794\n        nanos: 876378000\n      }\n      status {\n        code: INPUT_DOWNLOAD_SUCCESS\n        description: "Download complete"\n      }\n    }\n  }\n  id: "e223fa4ac14b4784b223cd31cc545f34"\n  eval_info {\n    params {\n      fields {\n        key: "dataset_id"\n        value {\n          string_value: ""\n        }\n      }\n      fields {\n        key: "dataset_version_id"\n        value {\n          string_value: ""\n        }\n      }\n      fields {\n        key: "use_kfold"\n        value {\n          bool_value: true\n        }\n      }\n    }\n  }\n  model {\n    id: "text-model-1"\n    app_id: "text-search-app"\n    model_version {\n      id: "3ad2c152232e46ebb16ed31f67dc54d8"\n      created_at {\n        seconds: 1693564041\n        nanos: 515456000\n      }\n      status {\n        code: MODEL_TRAINED\n        description: "Model is trained and ready"\n      }\n      active_concept_count: 2\n      metrics {\n        status {\n          code: MODEL_EVALUATED\n          description: "Model was successfully evaluated."\n        }\n        summary {\n          macro_avg_roc_auc: 1.0\n          macro_avg_f1_score: 0.8809523582458496\n          macro_std_f1_score: 0.13677529990673065\n          macro_avg_precision: 0.9375\n          macro_avg_recall: 0.875\n        }\n      }\n      total_input_count: 21\n      completed_at {\n        seconds: 1693564044\n        nanos: 915680000\n      }\n      visibility {\n        gettable: PRIVATE\n      }\n      app_id: "text-search-app"\n      user_id: "alfrick"\n      metadata {\n      }\n      output_info {\n        output_config {\n        }\n        message: "Show output_info with: GET /models/{model_id}/output_info"\n        params {\n          fields {\n            key: "max_concepts"\n            value {\n              number_value: 20.0\n            }\n          }\n          fields {\n            key: "min_value"\n            value {\n              number_value: 0.0\n            }\n          }\n          fields {\n            key: "select_concepts"\n            value {\n              list_value {\n              }\n            }\n          }\n        }\n      }\n      input_info {\n        base_embed_model {\n          id: "multilingual-text-embedding"\n          app_id: "main"\n          model_version {\n            id: "9b33adf15280465b857163ddaaacdcb1"\n          }\n          user_id: "clarifai"\n          model_type_id: "text-embedder"\n        }\n      }\n      train_info {\n        params {\n          fields {\n            key: "dataset_id"\n            value {\n              string_value: ""\n            }\n          }\n          fields {\n            key: "dataset_version_id"\n            value {\n              string_value: ""\n            }\n          }\n          fields {\n            key: "enrich_dataset"\n            value {\n              string_value: "Automatic"\n            }\n          }\n        }\n      }\n      import_info {\n      }\n    }\n    user_id: "ei2leoz3s3iy"\n    model_type_id: "embedding-classifier"\n  }\n  user_id: "ei2leoz3s3iy"\n  app_id: "text-search-app"\n}\n',g={description:"Develop your own custom text classifier.",sidebar_position:4},b="Custom Transfer Learning Text Model",x={unversionedId:"api-guide/model/custom-text-model-walkthrough",id:"api-guide/model/custom-text-model-walkthrough",title:"Custom Transfer Learning Text Model",description:"Develop your own custom text classifier.",source:"@site/docs/api-guide/model/custom-text-model-walkthrough.md",sourceDirName:"api-guide/model",slug:"/api-guide/model/custom-text-model-walkthrough",permalink:"/api-guide/model/custom-text-model-walkthrough",draft:!1,editUrl:"https://github.com/Clarifai/docs/blob/main/docs/api-guide/model/custom-text-model-walkthrough.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{description:"Develop your own custom text classifier.",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Custom Transfer Learning Models",permalink:"/api-guide/model/custom-model-walkthrough"},next:{title:"Create, Train, Get, Update, Delete",permalink:"/api-guide/model/create-get-update-and-delete"}},E={},T=[{value:"Create a New Application",id:"create-a-new-application",level:2},{value:"Add a Batch of Texts",id:"add-a-batch-of-texts",level:2},{value:"Wait for Inputs to Download",id:"wait-for-inputs-to-download",level:2},{value:"Create a Custom Model",id:"create-a-custom-model",level:2},{value:"Train the Model",id:"train-the-model",level:2},{value:"Wait for Model Training to Complete",id:"wait-for-model-training-to-complete",level:2},{value:"Predict on New Inputs",id:"predict-on-new-inputs",level:2},{value:"Start Model Evaluation",id:"start-model-evaluation",level:2},{value:"Wait for Model Evaluation Results",id:"wait-for-model-evaluation-results",level:2}],D={toc:T},I="wrapper";function y(n){let{components:e,...r}=n;return(0,s.kt)(I,(0,t.Z)({},D,r,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"custom-transfer-learning-text-model"},"Custom Transfer Learning Text Model"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Develop your own custom text classifier using transfer learning")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"The Clarifai API has the ability not only to learn concepts from images and videos, but from texts as well."),(0,s.kt)("p",null,"In this walkthrough, you'll learn how to create and use a custom text model, learn from your own text data using the power of the Clarifai's base text model, and predict on new text examples. "),(0,s.kt)("p",null,"You'll also learn how to use our world-class ",(0,s.kt)("a",{parentName:"p",href:"https://docs.clarifai.com/portal-guide/model/model-types/transfer-learning"},"transfer learning")," technology to create and train text models accurately and fast. "),(0,s.kt)("p",null,"The steps below can all be done via ",(0,s.kt)("a",{parentName:"p",href:"https://clarifai.com/explore"},"the Clarifai's portal"),". But here you'll learn how to do them programmatically via an API, using our ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Clarifai/clarifai-python-grpc"},"gRPC Python client"),". The examples map directly to any of our other gRPC clients."),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"The walkthrough assumes you have already created your Clarifai's user account and the ",(0,s.kt)("a",{parentName:"p",href:"https://portal.clarifai.com/settings/authentication"},"Personal Access Token"),". Also, first set up the gRPC Python client together with the initial code. See the ",(0,s.kt)("a",{parentName:"p",href:"https://docs.clarifai.com/api-guide/api-overview/api-clients/#client-installation-instructions"},"client installation page."))),(0,s.kt)("p",null,"For debugging purposes, each response returned by a method call can be printed to the console, and its entire data and structure will be shown verbosely."),(0,s.kt)("h2",{id:"create-a-new-application"},"Create a New Application"),(0,s.kt)("p",null,"The first step is manual. In the Clarifai Portal, ",(0,s.kt)("a",{parentName:"p",href:"https://docs.clarifai.com/clarifai-basics/applications/create-an-application"},"create a new application")," with ",(0,s.kt)("strong",{parentName:"p"},"Text/Document")," selected as the primary input type. The Base Workflow will be automatically selected for you. "),(0,s.kt)("h2",{id:"add-a-batch-of-texts"},"Add a Batch of Texts"),(0,s.kt)("p",null,"We'll now add several text inputs that we will later use as training data in our custom model. The idea is that we'll create a model which can differentiate between positive and negative sentences ","(","in a grammatical sense",")",". "),(0,s.kt)("p",null,"We'll mark each input with one of the two concepts: ",(0,s.kt)("inlineCode",{parentName:"p"},"positive")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"negative"),"."),(0,s.kt)("p",null,"The texts can be added either directly ","(","it's called raw",")"," or from a URL."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"grpc_python",label:"gRPC Python",mdxType:"TabItem"},(0,s.kt)(a.Z,{className:"language-python",mdxType:"CodeBlock"},i))),(0,s.kt)("h2",{id:"wait-for-inputs-to-download"},"Wait for Inputs to Download"),(0,s.kt)("p",null,"Let's now wait for all the inputs to download."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"grpc_python",label:"gRPC Python",mdxType:"TabItem"},(0,s.kt)(a.Z,{className:"language-python",mdxType:"CodeBlock"},p))),(0,s.kt)("h2",{id:"create-a-custom-model"},"Create a Custom Model"),(0,s.kt)("p",null,'Let\'s create a custom transfer learning model (also called an "embedding-classifier"). '),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"grpc_python",label:"gRPC Python",mdxType:"TabItem"},(0,s.kt)(a.Z,{className:"language-python",mdxType:"CodeBlock"},c))),(0,s.kt)("h2",{id:"train-the-model"},"Train the Model"),(0,s.kt)("p",null,"Let's train the model using the ",(0,s.kt)("inlineCode",{parentName:"p"},"positive")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"negative")," concepts. "),(0,s.kt)("p",null,"All inputs ","(","in our application",")"," associated with these two concepts will be used as training data. This will make the model to learn from these inputs so that we can later predict new text examples. "),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"grpc_python",label:"gRPC Python",mdxType:"TabItem"},(0,s.kt)(a.Z,{className:"language-python",mdxType:"CodeBlock"},h))),(0,s.kt)("h2",{id:"wait-for-model-training-to-complete"},"Wait for Model Training to Complete"),(0,s.kt)("p",null,"Let's wait for the model training to complete."),(0,s.kt)("p",null,"Each model training produces a new model version. Notice that on the bottom of the following code example, we placed the model version ID into its own variable."),(0,s.kt)("p",null,"We'll be using it later to specify which specific model version we want to use ","(","since a model can have multiple versions",")","."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"grpc_python",label:"gRPC Python",mdxType:"TabItem"},(0,s.kt)(a.Z,{className:"language-python",mdxType:"CodeBlock"},d))),(0,s.kt)("h2",{id:"predict-on-new-inputs"},"Predict on New Inputs"),(0,s.kt)("p",null,"Let's now use the trained custom model to predict new text examples."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"grpc_python",label:"gRPC Python",mdxType:"TabItem"},(0,s.kt)(a.Z,{className:"language-python",mdxType:"CodeBlock"},u))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Code Output Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"The following concepts were predicted for the input `Butchart Gardens contains over 900 varieties of plants.`:\n    positive: 0.83\n    negative: 0.17\nThe following concepts were predicted for the input `https://samples.clarifai.com/negative_sentence_12.txt`:\n    negative: 1.00\n    positive: 0.00\n"))),(0,s.kt)("h2",{id:"start-model-evaluation"},"Start Model Evaluation"),(0,s.kt)("p",null,"Let's now test the performance of the model by using model evaluation. Take note of the ",(0,s.kt)("inlineCode",{parentName:"p"},"evaluation_id")," returned in the response, as you will need it for the next step. "),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"See the ",(0,s.kt)("a",{parentName:"p",href:"https://docs.clarifai.com/api-guide/evaluate/"},"Evaluating Models")," section to learn more.")),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"grpc_python",label:"gRPC Python",mdxType:"TabItem"},(0,s.kt)(a.Z,{className:"language-python",mdxType:"CodeBlock"},_))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Output Example"),(0,s.kt)(a.Z,{className:"language-javascript",mdxType:"CodeBlock"},m)),(0,s.kt)("h2",{id:"wait-for-model-evaluation-results"},"Wait for Model Evaluation Results"),(0,s.kt)("p",null,"Model evaluation takes some time\u2014depending on the amount of data the model has. "),(0,s.kt)("p",null,"Let's wait for it to complete, and print all the results that it gives us."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"grpc_python",label:"gRPC Python",mdxType:"TabItem"},(0,s.kt)(a.Z,{className:"language-python",mdxType:"CodeBlock"},f))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Output Example"),(0,s.kt)(a.Z,{className:"language-javascript",mdxType:"CodeBlock"},v)))}y.isMDXComponent=!0}}]);