"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[4127],{65537:(e,n,a)=>{a.d(n,{A:()=>j});var t=a(96540),i=a(18215),s=a(65627),r=a(56347),l=a(50372),p=a(30604),o=a(11861),c=a(78749);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:i}}=e;return{value:n,label:a,attributes:t,default:i}}))}(a);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function h(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:a}=e;const i=(0,r.W6)(),s=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,p.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function m(e){const{defaultValue:n,queryString:a=!1,groupId:i}=e,s=u(e),[r,p]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[o,d]=f({queryString:a,groupId:i}),[m,g]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,c.Dv)(a);return[i,(0,t.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:i}),b=(()=>{const e=o??m;return h({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{b&&p(b)}),[b]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);p(e),d(e),g(e)}),[d,g,s]),tabValues:s}}var g=a(9136);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=a(74848);function v(e){let{className:n,block:a,selectedValue:t,selectValue:r,tabValues:l}=e;const p=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),c=e=>{const n=e.currentTarget,a=p.indexOf(n),i=l[a].value;i!==t&&(o(n),r(i))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;n=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;n=p[a]??p[p.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":a},n),children:l.map((e=>{let{value:n,label:a,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{p.push(e)},onKeyDown:d,onClick:c,...s,className:(0,i.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function _(e){let{lazy:n,children:a,selectedValue:s}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=m(e);return(0,x.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,x.jsx)(v,{...n,...e}),(0,x.jsx)(_,{...n,...e})]})}function j(e){const n=(0,g.A)();return(0,x.jsx)(y,{...e,children:d(e.children)},String(n))}},79329:(e,n,a)=>{a.d(n,{A:()=>r});a(96540);var t=a(18215);const i={tabItem:"tabItem_Ymn6"};var s=a(74848);function r(e){let{children:n,hidden:a,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,r),hidden:a,children:n})}},82980:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>T,contentTitle:()=>k,default:()=>D,frontMatter:()=>U,metadata:()=>t,toc:()=>P});const t=JSON.parse('{"id":"sdk/create-apps","title":"Creating Your AI Apps","description":"Learn how to interact with apps using Clarifai SDKs","source":"@site/docs/sdk/create-apps.md","sourceDirName":"sdk","slug":"/sdk/create-apps","permalink":"/sdk/create-apps","draft":false,"unlisted":false,"editUrl":"https://github.com/Clarifai/docs/blob/main/docs/sdk/create-apps.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"modules","permalink":"/sdk/node-api-reference/modules"},"next":{"title":"Managing Datasets","permalink":"/sdk/managing-datasets/"}}');var i=a(74848),s=a(28453),r=a(65537),l=a(79329),p=a(58069);const o='from clarifai.client.user import User\n\nclient = User(user_id="user_id", pat="YOUR_PAT")\n# You can create an app by providing the app id\napp = client.create_app(app_id="test_app", base_workflow="Empty")\n',c='import { User } from "clarifai-nodejs";\n\n\nconst client = new User({\n  userId: process.env.CLARIFAI_USER_ID,\n  pat: process.env.CLARIFAI_PAT,\n  appId: "",\n});\n// You can create an app by providing the app id\nconst app = await client.createApp({\n  appId: "test_app",\n});\nconsole.log(app);',d="from clarifai.client.user import User\n\n# Initialize the Clarifai client with the specified user ID\nclient = User(user_id='YOUR_USER_ID_HERE', pat='YOUR_PAT')\n\n# Update the app by overwriting the base workflow with a new one, e.g., 'Empty'\nclient.patch_app(app_id='YOUR_APP_ID_HERE', action='overwrite', base_workflow='Empty')\n\n# Update the app to make it an app template\nclient.patch_app(app_id='YOUR_APP_ID_HERE', action='overwrite', is_template=True)\n\n# Overwrite the app's description, notes, and default language\nclient.patch_app(app_id='YOUR_APP_ID_HERE', action='overwrite', default_language='fr', description='Demo testing', notes=\"Hi Guys! This note is for Demo\")\n\n# Overwrite the app's image URL with a new one\nclient.patch_app(app_id='YOUR_APP_ID_HERE', action='overwrite', image_url='https://samples.clarifai.com/metro-north.jpg')\n\n# Remove the app's image by specifying the 'remove' action\nclient.patch_app(app_id='YOUR_APP_ID_HERE', image_url='https://samples.clarifai.com/metro-north.jpg', action='remove')",u='from clarifai.client.user import User\n\nclient = User(user_id="user_id", pat="YOUR_PAT")\n# You can set the base workflow as ["Empty","Universal","Language-Understanding","General"]\napp = client.create_app(app_id="test_app_2", base_workflow="Universal")\n',h='from clarifai.client.user import User\n\n# the list_apps method allows pagination\napps = list(User("user_id", pat="YOUR_PAT").list_apps(page_no=1,per_page=6))\nfor app in apps:\n    print("App id: ", app.id)',f='import { User } from "clarifai-nodejs";\n\n\nconst client = new User({\n  userId: process.env.CLARIFAI_USER_ID,\n  pat: process.env.CLARIFAI_PAT,\n  appId: "",\n});\n// list apps method allows pagination\nconst apps = await client\n  .listApps({\n    pageNo: 1,\n    perPage: 6,\n  })\n  .next();\nif (apps.value)\n  for (const app of apps.value) {\n    console.log(app);\n  }\n',m='from clarifai.client.user import User\n\n# Provide the app id as parameter to delete_app function\nuser = User("user_id", pat="YOUR_PAT").delete_app("test_app_2")\n',g='import { User } from "clarifai-nodejs";\n\n\nconst client = new User({\n  userId: process.env.CLARIFAI_USER_ID,\n  pat: process.env.CLARIFAI_PAT,\n  appId: "",\n});\n// Provide the app id as parameter to delete_app function\nawait client.deleteApp({\n  appId: "test_app",\n});\n',b='from clarifai.client.input import Inputs\n\nimage_url = "https://2.img-dpreview.com/files/p/E~C1000x0S4000x4000T1200x1200~articles/3925134721/0266554465.jpeg"\n# You can set the label parameter inorder to create a concept while uploading inputs \ninput_obj = Inputs(user_id="user_id", app_id="test_app", pat="YOUR_PAT")\ninput_obj.upload_from_url(\n    input_id="demo2",\n    image_url=image_url,\n    labels=["train"],\n)\n',x='import { Input } from "clarifai-nodejs";\n\n\nconst imageUrl =\n  "https://2.img-dpreview.com/files/p/E~C1000x0S4000x4000T1200x1200~articles/3925134721/0266554465.jpeg";\n\nconst input = new Input({\n  authConfig: {\n    userId: process.env.CLARIFAI_USER_ID,\n    pat: process.env.CLARIFAI_PAT,\n    appId: "test_app",\n  },\n});\nawait input.uploadFromUrl({\n  imageUrl,\n  inputId: "demo2",\n  labels: ["train"],\n});\n',v='from clarifai.client.app import App\n\napp = App(app_id="test_app", user_id="user_id", pat="YOUR_PAT")\n# the list_concepts method allows pagination\nall_concepts = list(app.list_concepts(page_no=1,per_page=1))\n',_='import { App } from "clarifai-nodejs";\n\n\nconst app = new App({\n  authConfig: {\n    pat: process.env.CLARIFAI_PAT!,\n    userId: process.env.CLARIFAI_USER_ID!,\n    appId: "test_app",\n  },\n});\nconst list = await app\n  .listConcepts({\n    pageNo: 1,\n    perPage: 6,\n  })\n  .next();\nconst concepts = list.value;\nconsole.log(concepts);\n',y='2024-01-15 16:11:26 INFO     clarifai.client.user:                                                      user.py:122\n\n                             App created                                                                           \n\n                             code: SUCCESS                                                                         \n\n                             description: "Ok"                                                                     \n\n                             req_id: "1728082daee63fa593411dcb573e7e33"                                            \n',j='\n2024-01-15 16:19:23 INFO     clarifai.client.user:                                                      user.py:122\n\n                             App created                                                                           \n\n                             code: SUCCESS                                                                         \n\n                             description: "Ok"                                                                     \n\n                             req_id: "7e7e9eaaebbd3c8f7ba6bf5e5cc7f2a3"  ',A="App id:  test_app_3\n\nApp id:  test_app_2\n\nApp id:  test_app\n\nApp id:  APP_ID\n\nApp id:  demo_app\n\nApp id:  test",w='2024-01-15 16:28:09 INFO     clarifai.client.user:                                                      user.py:230\n\n                             App Deleted                                                                           \n\n                             code: SUCCESS                                                                         \n\n                             description: "Ok"                                                                     \n\n                             details: "application \\\'test_app_2\\\' deleted"                                         \n\n                             req_id: "35bec06c2b871f335064ec2f197344b1"  ',I='2024-01-15 16:53:00 INFO     clarifai.client.input:                                                    input.py:669\n\n                             Inputs Uploaded                                                                       \n\n                             code: SUCCESS                                                                         \n\n                             description: "Ok"                                                                     \n\n                             details: "All inputs successfully added"                                              \n\n                             req_id: "d54e6e6ef983e32cadbc7e6134a829a2"  ',C='[id: "id-train"\n\n name: "train"\n\n value: 1\n\n created_at {\n\n   seconds: 1705317780\n\n   nanos: 434442000\n\n }\n\n language: "en"\n\n app_id: "test_app"\n\n visibility {\n\n   gettable: PRIVATE\n\n }\n]',U={sidebar_position:4},k="Creating Your AI Apps",T={},P=[{value:"Create App",id:"create-app",level:2},{value:"Create App With Different Base Workflow",id:"create-app-with-different-base-workflow",level:2},{value:"Patch App",id:"patch-app",level:2},{value:"Listing Apps",id:"listing-apps",level:2},{value:"Delete App",id:"delete-app",level:2},{value:"Create Concept",id:"create-concept",level:2},{value:"List Concept",id:"list-concept",level:2}];function E(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"creating-your-ai-apps",children:"Creating Your AI Apps"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Learn how to interact with apps using Clarifai SDKs"})}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(n.p,{children:"Unlock the power of artificial intelligence by seamlessly integrating Clarifai SDKs into your application development process. With the Clarifai SDKs, creating intelligent and visually aware applications has never been more accessible."}),"\n",(0,i.jsx)(n.p,{children:"Empower your apps with cutting-edge AI capabilities, from image and video recognition to natural language processing. Our SDKs provides a user-friendly interface, allowing developers to harness the full potential of Clarifai's state-of-the-art models effortlessly."}),"\n",(0,i.jsx)(n.h2,{id:"create-app",children:"Create App"}),"\n",(0,i.jsx)(n.p,{children:"Leverage the Clarifai SDKs to seamlessly generate a new application, complete with a distinct and unique app ID. The API empowers you to effortlessly create apps tailored to your specific requirements, unlocking the potential for innovative and personalized experiences."}),"\n",(0,i.jsxs)(n.p,{children:["Visit this ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/clarifai-basics/applications/",children:"page"})," for more information."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["If you create an application via the API, Universal will be set as default base workflow unless you ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/workflows/base-workflows/#update-your-base-workflow",children:"specify a different one"}),"."]})}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsxs)(l.A,{value:"python",label:"Python",children:[(0,i.jsx)(p.A,{className:"language-python",children:o}),(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)(p.A,{className:"language-text",children:y})]})]}),(0,i.jsx)(l.A,{value:"typescript",label:"Typescript",children:(0,i.jsx)(p.A,{className:"language-typescript",children:c})})]}),"\n",(0,i.jsx)(n.h2,{id:"create-app-with-different-base-workflow",children:"Create App With Different Base Workflow"}),"\n",(0,i.jsx)(n.p,{children:"The API empowers you to establish an app with distinct base workflows, offering flexibility and adaptability."}),"\n",(0,i.jsxs)(n.p,{children:["Choose from a range of available ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/portal-guide/workflows/base-workflows",children:"base workflows"}),", including Empty, Universal, Language Understanding, and General. This enables you to seamlessly integrate and customize the fundamental structure of your app, ensuring it aligns perfectly with your project requirements."]}),"\n",(0,i.jsxs)(n.p,{children:["Visit this ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/clarifai-basics/applications/application-settings",children:"page"})," for more information."]}),"\n",(0,i.jsx)(r.A,{children:(0,i.jsx)(l.A,{value:"python",label:"Python",children:(0,i.jsx)(p.A,{className:"language-python",children:u})})}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)(p.A,{className:"language-text",children:j})]}),"\n",(0,i.jsx)(n.h2,{id:"patch-app",children:"Patch App"}),"\n",(0,i.jsx)(n.p,{children:"You can perform patch operations on an app by merging, removing, or overwriting data. By default, all actions support overwriting, with specific behaviors for lists of objects."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"merge"})," action updates an existing ",(0,i.jsx)(n.code,{children:"key:value"})," pair with ",(0,i.jsx)(n.code,{children:"key:new_value"})," or appends to an existing list. For dictionaries, it merges objects that share a matching ",(0,i.jsx)(n.code,{children:"id"})," field."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"remove"})," action is only used to delete the app's cover image on the platform UI."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"overwrite"})," action fully replaces an existing object with a new one."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Below is an example of performing patch operations on an app, where the base workflow is updated, the app is switched to an ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/clarifai-basics/app-templates",children:"app template"}),", and changes are made to the app's description, notes, default language, and image URL."]}),"\n",(0,i.jsx)(r.A,{children:(0,i.jsx)(l.A,{value:"python",label:"Python",children:(0,i.jsx)(p.A,{className:"language-python",children:d})})}),"\n",(0,i.jsx)(n.h2,{id:"listing-apps",children:"Listing Apps"}),"\n",(0,i.jsxs)(n.p,{children:["The Clarifai SDKs provides a convenient API to retrieve a list of all the apps available in your account. The list_apps function is a powerful tool that not only fetches the information but also supports essential features such as pagination for optimal data display.The use of parameters like ",(0,i.jsx)(n.code,{children:"page_no"})," and ",(0,i.jsx)(n.code,{children:"per_page"})," empowers you to customize the retrieval process based on your specific requirements."]}),"\n",(0,i.jsxs)(n.p,{children:["Visit this ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/advanced-topics/pagination",children:"page"})," for more information."]}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsxs)(l.A,{value:"python",label:"Python",children:[(0,i.jsx)(p.A,{className:"language-python",children:h}),(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)(p.A,{className:"language-text",children:A})]})]}),(0,i.jsx)(l.A,{value:"typescript",label:"Typescript",children:(0,i.jsx)(p.A,{className:"language-python",children:f})})]}),"\n",(0,i.jsx)(n.h2,{id:"delete-app",children:"Delete App"}),"\n",(0,i.jsx)(n.p,{children:'In the Clarifai SDKs, the "Delete App" functionality empowers users to seamlessly remove an app from their account by specifying the unique App ID. This API-driven approach simplifies the app management process, allowing for efficient deletion of redundant or unused applications.'}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"Be certain that you want to delete a particular app as the operation cannot be undone."})}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsxs)(l.A,{value:"python",label:"Python",children:[(0,i.jsx)(p.A,{className:"language-python",children:m}),(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)(p.A,{className:"language-text",children:w})]})]}),(0,i.jsx)(l.A,{value:"typescript",label:"Typescript",children:(0,i.jsx)(p.A,{className:"language-python",children:g})})]}),"\n",(0,i.jsx)(n.h2,{id:"create-concept",children:"Create Concept"}),"\n",(0,i.jsx)(n.p,{children:"With the Clarifai SDKs, you have the capability to effortlessly create concepts by uploading input data to your app, accompanied by a specified label. This process automates the creation of concepts, streamlining the integration of new ideas or entities into your application."}),"\n",(0,i.jsxs)(n.p,{children:["Visit this ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/portal-guide/concepts/create-get-update-delete",children:"page"})," for more information."]}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsxs)(l.A,{value:"python",label:"Python",children:[(0,i.jsx)(p.A,{className:"language-python",children:b}),(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)(p.A,{className:"language-text",children:I})]})]}),(0,i.jsx)(l.A,{value:"typescript",label:"Typescript",children:(0,i.jsx)(p.A,{className:"language-python",children:x})})]}),"\n",(0,i.jsx)(n.h2,{id:"list-concept",children:"List Concept"}),"\n",(0,i.jsxs)(n.p,{children:["The List Concepts feature in the Clarifai SDKs  empowers users to retrieve a comprehensive list of all available concepts within their application. With the list_concepts function, users can seamlessly navigate through large sets of concepts by leveraging built-in pagination functionalities. This enables efficient information display while providing flexibility through parameters such as ",(0,i.jsx)(n.code,{children:"page_no"})," and items ",(0,i.jsx)(n.code,{children:"per_page"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Visit this ",(0,i.jsx)(n.a,{href:"https://docs.clarifai.com/api-guide/advanced-topics/pagination",children:"page"})," for more information."]}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsxs)(l.A,{value:"python",label:"Python",children:[(0,i.jsx)(p.A,{className:"language-python",children:v}),(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)(p.A,{className:"language-text",children:C})]})]}),(0,i.jsx)(l.A,{value:"typescript",label:"Typescript",children:(0,i.jsx)(p.A,{className:"language-python",children:_})})]})]})}function D(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(E,{...e})}):E(e)}}}]);